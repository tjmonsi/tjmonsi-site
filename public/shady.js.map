{"version":3,"sources":["webpack:///shady.js","webpack:///webpack/bootstrap ed4ebd2b7b4a1bb5d91d","webpack:///../node_modules/@webcomponents/shadycss/src/style-settings.js","webpack:///../node_modules/@webcomponents/shadycss/src/css-parse.js","webpack:///../node_modules/@webcomponents/shadycss/src/style-util.js","webpack:///../node_modules/@webcomponents/shadycss/src/style-transformer.js","webpack:///../node_modules/@webcomponents/shadycss/src/common-regex.js","webpack:///../node_modules/@webcomponents/shadycss/src/style-info.js","webpack:///../node_modules/@webcomponents/shadycss/src/template-map.js","webpack:///../node_modules/@webcomponents/shadycss/src/document-wait.js","webpack:///../src/core/polyfills/shadycss.js","webpack:///../node_modules/@webcomponents/shadycss/entrypoints/scoping-shim.js","webpack:///../node_modules/@webcomponents/shadycss/src/scoping-shim.js","webpack:///../node_modules/@webcomponents/shadycss/src/style-properties.js","webpack:///../node_modules/@webcomponents/shadycss/src/style-placeholder.js","webpack:///../node_modules/@webcomponents/shadycss/src/style-cache.js","webpack:///../node_modules/@webcomponents/shadycss/src/document-watcher.js","webpack:///../node_modules/@webcomponents/shadycss/src/apply-shim-utils.js","webpack:///../node_modules/@webcomponents/shadycss/src/common-utils.js","webpack:///../node_modules/@webcomponents/shadycss/src/custom-style-interface.js"],"names":["modules","__webpack_require__","moduleId","installedModules","exports","module","i","l","call","m","c","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","n","__esModule","object","property","prototype","hasOwnProperty","p","s","calcCssVariables","settings","nativeCssVariables","nativeShadow","Boolean","navigator","userAgent","match","window","CSS","supports","value","ShadyCSS","undefined","nativeCss","_classCallCheck","instance","Constructor","TypeError","parse","text","clean","parseCss","lex","cssText","replace","RX","comments","port","root","StyleNode","length","OPEN_BRACE","previous","push","CLOSE_BRACE","node","t","substring","trim","ss","_expandUnicodeEscapes","multipleSpaces","lastIndexOf","indexOf","AT_START","MEDIA_START","types","MEDIA_RULE","keyframesRule","KEYFRAMES_RULE","split","pop","VAR_START","MIXIN_RULE","STYLE_RULE","r$","r","code","arguments","repeat","stringify","preserveProperties","_hasMixinRules","removeCustomProps","rules","removeCustomPropAssignment","removeCustomPropApply","customProp","mixinProp","mixinApply","varApply","this","toCssText","callback","_cssParse","forEachRule","_styleSettings","rulesForStyle","style","textContent","isKeyframesSelector","rule","styleRuleCallback","keyframesRuleCallback","onlyActiveRules","skipRules","type","matchMedia","_commonRegex","MEDIA_MATCH","matches","applyCss","moniker","target","contextNode","createScopeStyle","applyStyle","document","createElement","setAttribute","applyStylePlaceHolder","placeHolder","createComment","after","lastHeadApplyNode","scope","head","insertBefore","firstChild","nextSibling","compareDocumentPosition","Node","DOCUMENT_POSITION_PRECEDING","isTargetedBuild","buildType","getCssBuildType","element","getAttribute","findMatchingParen","start","level","processVariableAndFallback","str","end","inner","prefix","suffix","comma","setElementClassRaw","getIsExtends","localName","is","typeExtension","extends","_createClass","defineProperties","props","descriptor","writable","key","protoProps","staticProps","_styleUtil","StyleUtil","obj","newObj","default","StyleTransformer","shouldRemoveScope","_transformDom","selector","nodeType","ELEMENT_NODE","c$","content","_content","childNodes","children","classList","remove","add","CLASS","newValue","styleRules","cssBuildType","_StyleUtil$getIsExten","css","ext","hostScope","_calcHostScope","_calcElementScope","self","isScoped","CSS_CLASS_PREFIX","_transformRule","_transformComplexSelector","transformer","transformedSelector","_transformRuleCss","p$","COMPLEX_SELECTOR_SEP","join","NTH","inside","_this","stop","isNth","test","_twiddleNthPlus","SLOTTED_START","HOST","SIMPLE_SELECTOR_SEP","info","_transformCompoundSelector","combinator","slottedIndex","SLOTTED","_transformHostSelector","_transformSimpleSelector","slotted","SLOTTED_PAREN","paren","DIR_PAREN","before","dir","PSEUDO_PREFIX","HOST_PAREN","SIMPLE_SELECTOR_PREFIX","host","SELECTOR_NO_MATCH","normalizeRootSelector","_transformDocumentSelector","ROOT","SCOPE_DOC_SELECTOR","RegExp","VAR_ASSIGN","MIXIN_MATCH","VAR_CONSUMED","ANIMATION_MATCH","IS_VAR","BRACKETED","HOST_PREFIX","HOST_SUFFIX","StyleInfo","ast","placeholder","ownStylePropertyNames","elementName","cssBuild","overrideStyleProperties","styleProperties","scopeSelector","customStyle","styleInfo","_getStyleRules","templateMap","documentWait","requestAnimationFrame","whenReady","readyPromise","Promise","resolve","resolveFn","readyState","addEventListener","then","_scopingShim","_scopingShim2","scopingShim","ApplyShim","CustomStyleInterface","ScopingShim","prepareTemplate","template","elementExtends","flushCustomStyles","styleSubtree","properties","styleElement","styleDocument","getComputedStyleValue","_interopRequireWildcard","_interopRequireDefault","_styleTransformer","_styleTransformer2","_styleProperties","_styleProperties2","_stylePlaceholder","_stylePlaceholder2","_styleInfo","_styleInfo2","_styleCache","_styleCache2","_documentWatcher","_templateMap","_templateMap2","_applyShimUtils","ApplyShimUtils","_documentWait","_documentWait2","_commonUtils","styleCache","_scopeCounter","_documentOwner","documentElement","_documentOwnerStyleInfo","set","_elementsHaveApplied","_applyShim","_customStyleInterface","_ensure","flush","styles","querySelectorAll","parentNode","removeChild","querySelector","_prepared","_getCssBuild","_gatherStyles","__cssBuild","dom","hasMixins","detectMixin","_cssBuild","ownPropertyNames","decorateStyles","_generateStaticStyle","_style","_ownPropertyNames","shadowroot","elementStyles","invalidate","_this2","transformCustomStyleForDocument","_ensureApplyShim","_ensureCustomStyleInterface","customStyles","_revalidateCustomStyleApplyShim","_updateProperties","_applyCustomStyles","overrideProps","_StyleUtil$getIsExten2","_prepareHost","_isRootOwner","assign","updateNativeProperties","templateIsValid","templateIsValidating","startValidatingTemplate","shadowRoot","_applyStyleProperties","getRootNode","_styleOwnerForNode","cacheEntry","fetch","cachedScopeSelector","cachedStyle","oldScopeSelector","_generateScopeSelector","applyElementStyle","applyElementScopeSelector","store","owner","ownerStyleInfo","ownerProperties","create","hostAndRootProps","hostAndRootPropertiesForScope","propertyData","propertyDataFromStyles","propertiesMatchingHost","hostProps","rootProps","_mixinOverrideStyles","reify","overrides","v","shadowChildren","_revalidateApplyShim","applyCustomStyle","_this3","documentRule","getComputedStyle","getPropertyValue","classString","classes","scopeName","classAttr","k$","SCOPE_NAME","XSCOPE_NAME","setElementClass","_styleInfoForNode","getStyleAst","styleAstToString","addToBitMask","bits","parseInt","matchesSelector","mozMatchesSelector","msMatchesSelector","oMatchesSelector","webkitMatchesSelector","Element","IS_IE","StyleProperties","keyframes","ruleIndex","decorateRule","index","collectPropertiesInCssText","propertyInfo","_keyframes","names","collectProperties","collectCssText","rx","any","exec","collectConsumingCssText","getOwnPropertyNames","valueForProperty","valueForProperties","fn","fallback","propertyValue","parts","lastIndex","colon","pp","slice","output","keyframeTransforms","input","hasAnimations","transform","keyframeNamesToTransform","keyframe","selectorToMatch","parsedSelector","isRoot","isHost","whenHostOrRootRule","_element","hostSelector","rxHostSelector","hostRx","_elementKeyframeTransforms","applyProperties","applyKeyframeTransforms","_scopeSelector","keyframesRules","_scopeKeyframes","_keyframesRuleTransformer","keyframesNameRx","transformedKeyframesName","scopeId","old","transformStyles","placeholderMap","ce","origDefine","wrappedDefine","clazz","options","StyleCache","typeMax","cache","idx","pn","tagname","list","shift","entry","_validate","getClasses","Array","from","hasAttribute","getCurrentScope","handler","mxns","x","mxn","addedNodes","currentScope","ownerDocument","DOCUMENT_FRAGMENT_NODE","newScope","unscoped","j","observer","MutationObserver","observe","childList","subtree","delayedStart","body","listener","removeEventListener","takeRecords","invalidateTemplate","CURRENT_VERSION","VALIDATING_VERSION","NEXT_VERSION","isValid","isValidating","startValidating","_validating","promise","elementsAreInvalid","removeProperty","setProperty","has","CustomStyleInterfaceInterface","CustomStyleProvider","CACHED_STYLE","transformFn","validateFn","enqueueDocumentValidation","cs","getStyleForCustomStyle","styleToTransform","addCustomStyle","processStyles","transformCallback","validateCallback","needsEnqueue"],"mappings":"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","file":"shady.js","sourcesContent":["/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId]) {\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/ \t\t}\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\ti: moduleId,\n/******/ \t\t\tl: false,\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.l = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// define getter function for harmony exports\n/******/ \t__webpack_require__.d = function(exports, name, getter) {\n/******/ \t\tif(!__webpack_require__.o(exports, name)) {\n/******/ \t\t\tObject.defineProperty(exports, name, {\n/******/ \t\t\t\tconfigurable: false,\n/******/ \t\t\t\tenumerable: true,\n/******/ \t\t\t\tget: getter\n/******/ \t\t\t});\n/******/ \t\t}\n/******/ \t};\n/******/\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t__webpack_require__.n = function(module) {\n/******/ \t\tvar getter = module && module.__esModule ?\n/******/ \t\t\tfunction getDefault() { return module['default']; } :\n/******/ \t\t\tfunction getModuleExports() { return module; };\n/******/ \t\t__webpack_require__.d(getter, 'a', getter);\n/******/ \t\treturn getter;\n/******/ \t};\n/******/\n/******/ \t// Object.prototype.hasOwnProperty.call\n/******/ \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(__webpack_require__.s = 49);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */,\n/* 1 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/**\n@license\nCopyright (c) 2017 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar nativeShadow = exports.nativeShadow = !(window['ShadyDOM'] && window['ShadyDOM']['inUse']);\nvar nativeCssVariables = exports.nativeCssVariables = void 0;\n\n/**\n * @param {(ShadyCSSOptions | ShadyCSSInterface)=} settings\n */\nfunction calcCssVariables(settings) {\n  if (settings && settings['shimcssproperties']) {\n    exports.nativeCssVariables = nativeCssVariables = false;\n  } else {\n    // chrome 49 has semi-working css vars, check if box-shadow works\n    // safari 9.1 has a recalc bug: https://bugs.webkit.org/show_bug.cgi?id=155782\n    // However, shim css custom properties are only supported with ShadyDOM enabled,\n    // so fall back on native if we do not detect ShadyDOM\n    // Edge 15: custom properties used in ::before and ::after will also be used in the parent element\n    // https://developer.microsoft.com/en-us/microsoft-edge/platform/issues/12414257/\n    exports.nativeCssVariables = nativeCssVariables = nativeShadow || Boolean(!navigator.userAgent.match(/AppleWebKit\\/601|Edge\\/15/) && window.CSS && CSS.supports && CSS.supports('box-shadow', '0 0 0 var(--foo)'));\n  }\n}\n\nif (window.ShadyCSS && window.ShadyCSS.nativeCss !== undefined) {\n  exports.nativeCssVariables = nativeCssVariables = window.ShadyCSS.nativeCss;\n} else if (window.ShadyCSS) {\n  calcCssVariables(window.ShadyCSS);\n  // reset window variable to let ShadyCSS API take its place\n  window.ShadyCSS = undefined;\n} else {\n  calcCssVariables(window['WebComponents'] && window['WebComponents']['flags']);\n}\n\n/***/ }),\n/* 2 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/**\n@license\nCopyright (c) 2017 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\n/*\nExtremely simple css parser. Intended to be not more than what we need\nand definitely not necessarily correct =).\n*/\n\n\n\n/** @unrestricted */\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.parse = parse;\nexports.stringify = stringify;\nexports.removeCustomPropAssignment = removeCustomPropAssignment;\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar StyleNode = function StyleNode() {\n  _classCallCheck(this, StyleNode);\n\n  /** @type {number} */\n  this['start'] = 0;\n  /** @type {number} */\n  this['end'] = 0;\n  /** @type {StyleNode} */\n  this['previous'] = null;\n  /** @type {StyleNode} */\n  this['parent'] = null;\n  /** @type {Array<StyleNode>} */\n  this['rules'] = null;\n  /** @type {string} */\n  this['parsedCssText'] = '';\n  /** @type {string} */\n  this['cssText'] = '';\n  /** @type {boolean} */\n  this['atRule'] = false;\n  /** @type {number} */\n  this['type'] = 0;\n  /** @type {string} */\n  this['keyframesName'] = '';\n  /** @type {string} */\n  this['selector'] = '';\n  /** @type {string} */\n  this['parsedSelector'] = '';\n};\n\nexports.StyleNode = StyleNode;\n\n// given a string of css, return a simple rule tree\n/**\n * @param {string} text\n * @return {StyleNode}\n */\n\nfunction parse(text) {\n  text = clean(text);\n  return parseCss(lex(text), text);\n}\n\n// remove stuff we don't care about that may hinder parsing\n/**\n * @param {string} cssText\n * @return {string}\n */\nfunction clean(cssText) {\n  return cssText.replace(RX.comments, '').replace(RX.port, '');\n}\n\n// super simple {...} lexer that returns a node tree\n/**\n * @param {string} text\n * @return {StyleNode}\n */\nfunction lex(text) {\n  var root = new StyleNode();\n  root['start'] = 0;\n  root['end'] = text.length;\n  var n = root;\n  for (var i = 0, l = text.length; i < l; i++) {\n    if (text[i] === OPEN_BRACE) {\n      if (!n['rules']) {\n        n['rules'] = [];\n      }\n      var p = n;\n      var previous = p['rules'][p['rules'].length - 1] || null;\n      n = new StyleNode();\n      n['start'] = i + 1;\n      n['parent'] = p;\n      n['previous'] = previous;\n      p['rules'].push(n);\n    } else if (text[i] === CLOSE_BRACE) {\n      n['end'] = i + 1;\n      n = n['parent'] || root;\n    }\n  }\n  return root;\n}\n\n// add selectors/cssText to node tree\n/**\n * @param {StyleNode} node\n * @param {string} text\n * @return {StyleNode}\n */\nfunction parseCss(node, text) {\n  var t = text.substring(node['start'], node['end'] - 1);\n  node['parsedCssText'] = node['cssText'] = t.trim();\n  if (node['parent']) {\n    var ss = node['previous'] ? node['previous']['end'] : node['parent']['start'];\n    t = text.substring(ss, node['start'] - 1);\n    t = _expandUnicodeEscapes(t);\n    t = t.replace(RX.multipleSpaces, ' ');\n    // TODO(sorvell): ad hoc; make selector include only after last ;\n    // helps with mixin syntax\n    t = t.substring(t.lastIndexOf(';') + 1);\n    var s = node['parsedSelector'] = node['selector'] = t.trim();\n    node['atRule'] = s.indexOf(AT_START) === 0;\n    // note, support a subset of rule types...\n    if (node['atRule']) {\n      if (s.indexOf(MEDIA_START) === 0) {\n        node['type'] = types.MEDIA_RULE;\n      } else if (s.match(RX.keyframesRule)) {\n        node['type'] = types.KEYFRAMES_RULE;\n        node['keyframesName'] = node['selector'].split(RX.multipleSpaces).pop();\n      }\n    } else {\n      if (s.indexOf(VAR_START) === 0) {\n        node['type'] = types.MIXIN_RULE;\n      } else {\n        node['type'] = types.STYLE_RULE;\n      }\n    }\n  }\n  var r$ = node['rules'];\n  if (r$) {\n    for (var i = 0, l = r$.length, r; i < l && (r = r$[i]); i++) {\n      parseCss(r, text);\n    }\n  }\n  return node;\n}\n\n/**\n * conversion of sort unicode escapes with spaces like `\\33 ` (and longer) into\n * expanded form that doesn't require trailing space `\\000033`\n * @param {string} s\n * @return {string}\n */\nfunction _expandUnicodeEscapes(s) {\n  return s.replace(/\\\\([0-9a-f]{1,6})\\s/gi, function () {\n    var code = arguments[1],\n        repeat = 6 - code.length;\n    while (repeat--) {\n      code = '0' + code;\n    }\n    return '\\\\' + code;\n  });\n}\n\n/**\n * stringify parsed css.\n * @param {StyleNode} node\n * @param {boolean=} preserveProperties\n * @param {string=} text\n * @return {string}\n */\nfunction stringify(node, preserveProperties) {\n  var text = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : '';\n\n  // calc rule cssText\n  var cssText = '';\n  if (node['cssText'] || node['rules']) {\n    var r$ = node['rules'];\n    if (r$ && !_hasMixinRules(r$)) {\n      for (var i = 0, l = r$.length, r; i < l && (r = r$[i]); i++) {\n        cssText = stringify(r, preserveProperties, cssText);\n      }\n    } else {\n      cssText = preserveProperties ? node['cssText'] : removeCustomProps(node['cssText']);\n      cssText = cssText.trim();\n      if (cssText) {\n        cssText = '  ' + cssText + '\\n';\n      }\n    }\n  }\n  // emit rule if there is cssText\n  if (cssText) {\n    if (node['selector']) {\n      text += node['selector'] + ' ' + OPEN_BRACE + '\\n';\n    }\n    text += cssText;\n    if (node['selector']) {\n      text += CLOSE_BRACE + '\\n\\n';\n    }\n  }\n  return text;\n}\n\n/**\n * @param {Array<StyleNode>} rules\n * @return {boolean}\n */\nfunction _hasMixinRules(rules) {\n  var r = rules[0];\n  return Boolean(r) && Boolean(r['selector']) && r['selector'].indexOf(VAR_START) === 0;\n}\n\n/**\n * @param {string} cssText\n * @return {string}\n */\nfunction removeCustomProps(cssText) {\n  cssText = removeCustomPropAssignment(cssText);\n  return removeCustomPropApply(cssText);\n}\n\n/**\n * @param {string} cssText\n * @return {string}\n */\nfunction removeCustomPropAssignment(cssText) {\n  return cssText.replace(RX.customProp, '').replace(RX.mixinProp, '');\n}\n\n/**\n * @param {string} cssText\n * @return {string}\n */\nfunction removeCustomPropApply(cssText) {\n  return cssText.replace(RX.mixinApply, '').replace(RX.varApply, '');\n}\n\n/** @enum {number} */\nvar types = exports.types = {\n  STYLE_RULE: 1,\n  KEYFRAMES_RULE: 7,\n  MEDIA_RULE: 4,\n  MIXIN_RULE: 1000\n};\n\nvar OPEN_BRACE = '{';\nvar CLOSE_BRACE = '}';\n\n// helper regexp's\nvar RX = {\n  comments: /\\/\\*[^*]*\\*+([^/*][^*]*\\*+)*\\//gim,\n  port: /@import[^;]*;/gim,\n  customProp: /(?:^[^;\\-\\s}]+)?--[^;{}]*?:[^{};]*?(?:[;\\n]|$)/gim,\n  mixinProp: /(?:^[^;\\-\\s}]+)?--[^;{}]*?:[^{};]*?{[^}]*?}(?:[;\\n]|$)?/gim,\n  mixinApply: /@apply\\s*\\(?[^);]*\\)?\\s*(?:[;\\n]|$)?/gim,\n  varApply: /[^;:]*?:[^;]*?var\\([^;]*\\)(?:[;\\n]|$)?/gim,\n  keyframesRule: /^@[^\\s]*keyframes/,\n  multipleSpaces: /\\s+/g\n};\n\nvar VAR_START = '--';\nvar MEDIA_START = '@media';\nvar AT_START = '@';\n\n/***/ }),\n/* 3 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/**\n@license\nCopyright (c) 2017 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.toCssText = toCssText;\nexports.rulesForStyle = rulesForStyle;\nexports.isKeyframesSelector = isKeyframesSelector;\nexports.forEachRule = forEachRule;\nexports.applyCss = applyCss;\nexports.createScopeStyle = createScopeStyle;\nexports.applyStylePlaceHolder = applyStylePlaceHolder;\nexports.applyStyle = applyStyle;\nexports.isTargetedBuild = isTargetedBuild;\nexports.getCssBuildType = getCssBuildType;\nexports.processVariableAndFallback = processVariableAndFallback;\nexports.setElementClassRaw = setElementClassRaw;\nexports.getIsExtends = getIsExtends;\n\nvar _styleSettings = __webpack_require__(1);\n\nvar _cssParse = __webpack_require__(2);\n\nvar _commonRegex = __webpack_require__(9);\n\n/**\n * @param {string|StyleNode} rules\n * @param {function(StyleNode)=} callback\n * @return {string}\n */\nfunction toCssText(rules, callback) {\n  if (!rules) {\n    return '';\n  }\n  if (typeof rules === 'string') {\n    rules = (0, _cssParse.parse)(rules);\n  }\n  if (callback) {\n    forEachRule(rules, callback);\n  }\n  return (0, _cssParse.stringify)(rules, _styleSettings.nativeCssVariables);\n}\n\n/**\n * @param {HTMLStyleElement} style\n * @return {StyleNode}\n */\n// eslint-disable-line no-unused-vars\nfunction rulesForStyle(style) {\n  if (!style['__cssRules'] && style.textContent) {\n    style['__cssRules'] = (0, _cssParse.parse)(style.textContent);\n  }\n  return style['__cssRules'] || null;\n}\n\n// Tests if a rule is a keyframes selector, which looks almost exactly\n// like a normal selector but is not (it has nothing to do with scoping\n// for example).\n/**\n * @param {StyleNode} rule\n * @return {boolean}\n */\nfunction isKeyframesSelector(rule) {\n  return Boolean(rule['parent']) && rule['parent']['type'] === _cssParse.types.KEYFRAMES_RULE;\n}\n\n/**\n * @param {StyleNode} node\n * @param {Function=} styleRuleCallback\n * @param {Function=} keyframesRuleCallback\n * @param {boolean=} onlyActiveRules\n */\nfunction forEachRule(node, styleRuleCallback, keyframesRuleCallback, onlyActiveRules) {\n  if (!node) {\n    return;\n  }\n  var skipRules = false;\n  var type = node['type'];\n  if (onlyActiveRules) {\n    if (type === _cssParse.types.MEDIA_RULE) {\n      var matchMedia = node['selector'].match(_commonRegex.MEDIA_MATCH);\n      if (matchMedia) {\n        // if rule is a non matching @media rule, skip subrules\n        if (!window.matchMedia(matchMedia[1]).matches) {\n          skipRules = true;\n        }\n      }\n    }\n  }\n  if (type === _cssParse.types.STYLE_RULE) {\n    styleRuleCallback(node);\n  } else if (keyframesRuleCallback && type === _cssParse.types.KEYFRAMES_RULE) {\n    keyframesRuleCallback(node);\n  } else if (type === _cssParse.types.MIXIN_RULE) {\n    skipRules = true;\n  }\n  var r$ = node['rules'];\n  if (r$ && !skipRules) {\n    for (var i = 0, l = r$.length, r; i < l && (r = r$[i]); i++) {\n      forEachRule(r, styleRuleCallback, keyframesRuleCallback, onlyActiveRules);\n    }\n  }\n}\n\n// add a string of cssText to the document.\n/**\n * @param {string} cssText\n * @param {string} moniker\n * @param {Node} target\n * @param {Node} contextNode\n * @return {HTMLStyleElement}\n */\nfunction applyCss(cssText, moniker, target, contextNode) {\n  var style = createScopeStyle(cssText, moniker);\n  applyStyle(style, target, contextNode);\n  return style;\n}\n\n/**\n * @param {string} cssText\n * @param {string} moniker\n * @return {HTMLStyleElement}\n */\nfunction createScopeStyle(cssText, moniker) {\n  var style = /** @type {HTMLStyleElement} */document.createElement('style');\n  if (moniker) {\n    style.setAttribute('scope', moniker);\n  }\n  style.textContent = cssText;\n  return style;\n}\n\n/**\n * Track the position of the last added style for placing placeholders\n * @type {Node}\n */\nvar lastHeadApplyNode = null;\n\n// insert a comment node as a styling position placeholder.\n/**\n * @param {string} moniker\n * @return {!Comment}\n */\nfunction applyStylePlaceHolder(moniker) {\n  var placeHolder = document.createComment(' Shady DOM styles for ' + moniker + ' ');\n  var after = lastHeadApplyNode ? lastHeadApplyNode['nextSibling'] : null;\n  var scope = document.head;\n  scope.insertBefore(placeHolder, after || scope.firstChild);\n  lastHeadApplyNode = placeHolder;\n  return placeHolder;\n}\n\n/**\n * @param {HTMLStyleElement} style\n * @param {?Node} target\n * @param {?Node} contextNode\n */\nfunction applyStyle(style, target, contextNode) {\n  target = target || document.head;\n  var after = contextNode && contextNode.nextSibling || target.firstChild;\n  target.insertBefore(style, after);\n  if (!lastHeadApplyNode) {\n    lastHeadApplyNode = style;\n  } else {\n    // only update lastHeadApplyNode if the new style is inserted after the old lastHeadApplyNode\n    var position = style.compareDocumentPosition(lastHeadApplyNode);\n    if (position === Node.DOCUMENT_POSITION_PRECEDING) {\n      lastHeadApplyNode = style;\n    }\n  }\n}\n\n/**\n * @param {string} buildType\n * @return {boolean}\n */\nfunction isTargetedBuild(buildType) {\n  return _styleSettings.nativeShadow ? buildType === 'shadow' : buildType === 'shady';\n}\n\n/**\n * @param {Element} element\n * @return {?string}\n */\nfunction getCssBuildType(element) {\n  return element.getAttribute('css-build');\n}\n\n/**\n * Walk from text[start] matching parens and\n * returns position of the outer end paren\n * @param {string} text\n * @param {number} start\n * @return {number}\n */\nfunction findMatchingParen(text, start) {\n  var level = 0;\n  for (var i = start, l = text.length; i < l; i++) {\n    if (text[i] === '(') {\n      level++;\n    } else if (text[i] === ')') {\n      if (--level === 0) {\n        return i;\n      }\n    }\n  }\n  return -1;\n}\n\n/**\n * @param {string} str\n * @param {function(string, string, string, string)} callback\n */\nfunction processVariableAndFallback(str, callback) {\n  // find 'var('\n  var start = str.indexOf('var(');\n  if (start === -1) {\n    // no var?, everything is prefix\n    return callback(str, '', '', '');\n  }\n  //${prefix}var(${inner})${suffix}\n  var end = findMatchingParen(str, start + 3);\n  var inner = str.substring(start + 4, end);\n  var prefix = str.substring(0, start);\n  // suffix may have other variables\n  var suffix = processVariableAndFallback(str.substring(end + 1), callback);\n  var comma = inner.indexOf(',');\n  // value and fallback args should be trimmed to match in property lookup\n  if (comma === -1) {\n    // variable, no fallback\n    return callback(prefix, inner.trim(), '', suffix);\n  }\n  // var(${value},${fallback})\n  var value = inner.substring(0, comma).trim();\n  var fallback = inner.substring(comma + 1).trim();\n  return callback(prefix, value, fallback, suffix);\n}\n\n/**\n * @param {Element} element\n * @param {string} value\n */\nfunction setElementClassRaw(element, value) {\n  // use native setAttribute provided by ShadyDOM when setAttribute is patched\n  if (_styleSettings.nativeShadow) {\n    element.setAttribute('class', value);\n  } else {\n    window['ShadyDOM']['nativeMethods']['setAttribute'].call(element, 'class', value);\n  }\n}\n\n/**\n * @param {Element | {is: string, extends: string}} element\n * @return {{is: string, typeExtension: string}}\n */\nfunction getIsExtends(element) {\n  var localName = element['localName'];\n  var is = '',\n      typeExtension = '';\n  /*\n  NOTE: technically, this can be wrong for certain svg elements\n  with `-` in the name like `<font-face>`\n  */\n  if (localName) {\n    if (localName.indexOf('-') > -1) {\n      is = localName;\n    } else {\n      typeExtension = localName;\n      is = element.getAttribute && element.getAttribute('is') || '';\n    }\n  } else {\n    is = /** @type {?} */element.is;\n    typeExtension = /** @type {?} */element.extends;\n  }\n  return { is: is, typeExtension: typeExtension };\n}\n\n/***/ }),\n/* 4 */,\n/* 5 */,\n/* 6 */,\n/* 7 */,\n/* 8 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/**\n@license\nCopyright (c) 2017 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }(); // eslint-disable-line no-unused-vars\n\n\nvar _cssParse = __webpack_require__(2);\n\nvar _styleUtil = __webpack_require__(3);\n\nvar StyleUtil = _interopRequireWildcard(_styleUtil);\n\nvar _styleSettings = __webpack_require__(1);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/* Transforms ShadowDOM styling into ShadyDOM styling\n\n* scoping:\n\n  * elements in scope get scoping selector class=\"x-foo-scope\"\n  * selectors re-written as follows:\n\n    div button -> div.x-foo-scope button.x-foo-scope\n\n* :host -> scopeName\n\n* :host(...) -> scopeName...\n\n* ::slotted(...) -> scopeName > ...\n\n* ...:dir(ltr|rtl) -> [dir=\"ltr|rtl\"] ..., ...[dir=\"ltr|rtl\"]\n\n* :host(:dir[rtl]) -> scopeName:dir(rtl) -> [dir=\"rtl\"] scopeName, scopeName[dir=\"rtl\"]\n\n*/\nvar SCOPE_NAME = 'style-scope';\n\nvar StyleTransformer = function () {\n  function StyleTransformer() {\n    _classCallCheck(this, StyleTransformer);\n  }\n\n  _createClass(StyleTransformer, [{\n    key: 'dom',\n\n    // Given a node and scope name, add a scoping class to each node\n    // in the tree. This facilitates transforming css into scoped rules.\n    value: function dom(node, scope, shouldRemoveScope) {\n      // one time optimization to skip scoping...\n      if (node['__styleScoped']) {\n        node['__styleScoped'] = null;\n      } else {\n        this._transformDom(node, scope || '', shouldRemoveScope);\n      }\n    }\n  }, {\n    key: '_transformDom',\n    value: function _transformDom(node, selector, shouldRemoveScope) {\n      if (node.nodeType === Node.ELEMENT_NODE) {\n        this.element(node, selector, shouldRemoveScope);\n      }\n      var c$ = node.localName === 'template' ? (node.content || node._content).childNodes : node.children || node.childNodes;\n      if (c$) {\n        for (var i = 0; i < c$.length; i++) {\n          this._transformDom(c$[i], selector, shouldRemoveScope);\n        }\n      }\n    }\n  }, {\n    key: 'element',\n    value: function element(_element, scope, shouldRemoveScope) {\n      // note: if using classes, we add both the general 'style-scope' class\n      // as well as the specific scope. This enables easy filtering of all\n      // `style-scope` elements\n      if (scope) {\n        // note: svg on IE does not have classList so fallback to class\n        if (_element.classList) {\n          if (shouldRemoveScope) {\n            _element.classList.remove(SCOPE_NAME);\n            _element.classList.remove(scope);\n          } else {\n            _element.classList.add(SCOPE_NAME);\n            _element.classList.add(scope);\n          }\n        } else if (_element.getAttribute) {\n          var c = _element.getAttribute(CLASS);\n          if (shouldRemoveScope) {\n            if (c) {\n              var newValue = c.replace(SCOPE_NAME, '').replace(scope, '');\n              StyleUtil.setElementClassRaw(_element, newValue);\n            }\n          } else {\n            var _newValue = (c ? c + ' ' : '') + SCOPE_NAME + ' ' + scope;\n            StyleUtil.setElementClassRaw(_element, _newValue);\n          }\n        }\n      }\n    }\n  }, {\n    key: 'elementStyles',\n    value: function elementStyles(element, styleRules, callback) {\n      var cssBuildType = element['__cssBuild'];\n      // no need to shim selectors if settings.useNativeShadow, also\n      // a shady css build will already have transformed selectors\n      // NOTE: This method may be called as part of static or property shimming.\n      // When there is a targeted build it will not be called for static shimming,\n      // but when the property shim is used it is called and should opt out of\n      // static shimming work when a proper build exists.\n      var cssText = '';\n      if (_styleSettings.nativeShadow || cssBuildType === 'shady') {\n        cssText = StyleUtil.toCssText(styleRules, callback);\n      } else {\n        var _StyleUtil$getIsExten = StyleUtil.getIsExtends(element),\n            is = _StyleUtil$getIsExten.is,\n            typeExtension = _StyleUtil$getIsExten.typeExtension;\n\n        cssText = this.css(styleRules, is, typeExtension, callback) + '\\n\\n';\n      }\n      return cssText.trim();\n    }\n\n    // Given a string of cssText and a scoping string (scope), returns\n    // a string of scoped css where each selector is transformed to include\n    // a class created from the scope. ShadowDOM selectors are also transformed\n    // (e.g. :host) to use the scoping selector.\n\n  }, {\n    key: 'css',\n    value: function css(rules, scope, ext, callback) {\n      var hostScope = this._calcHostScope(scope, ext);\n      scope = this._calcElementScope(scope);\n      var self = this;\n      return StyleUtil.toCssText(rules, function ( /** StyleNode */rule) {\n        if (!rule.isScoped) {\n          self.rule(rule, scope, hostScope);\n          rule.isScoped = true;\n        }\n        if (callback) {\n          callback(rule, scope, hostScope);\n        }\n      });\n    }\n  }, {\n    key: '_calcElementScope',\n    value: function _calcElementScope(scope) {\n      if (scope) {\n        return CSS_CLASS_PREFIX + scope;\n      } else {\n        return '';\n      }\n    }\n  }, {\n    key: '_calcHostScope',\n    value: function _calcHostScope(scope, ext) {\n      return ext ? '[is=' + scope + ']' : scope;\n    }\n  }, {\n    key: 'rule',\n    value: function rule(_rule, scope, hostScope) {\n      this._transformRule(_rule, this._transformComplexSelector, scope, hostScope);\n    }\n\n    /**\n     * transforms a css rule to a scoped rule.\n     *\n     * @param {StyleNode} rule\n     * @param {Function} transformer\n     * @param {string=} scope\n     * @param {string=} hostScope\n     */\n\n  }, {\n    key: '_transformRule',\n    value: function _transformRule(rule, transformer, scope, hostScope) {\n      // NOTE: save transformedSelector for subsequent matching of elements\n      // against selectors (e.g. when calculating style properties)\n      rule['selector'] = rule.transformedSelector = this._transformRuleCss(rule, transformer, scope, hostScope);\n    }\n\n    /**\n     * @param {StyleNode} rule\n     * @param {Function} transformer\n     * @param {string=} scope\n     * @param {string=} hostScope\n     */\n\n  }, {\n    key: '_transformRuleCss',\n    value: function _transformRuleCss(rule, transformer, scope, hostScope) {\n      var p$ = rule['selector'].split(COMPLEX_SELECTOR_SEP);\n      // we want to skip transformation of rules that appear in keyframes,\n      // because they are keyframe selectors, not element selectors.\n      if (!StyleUtil.isKeyframesSelector(rule)) {\n        for (var i = 0, l = p$.length, p; i < l && (p = p$[i]); i++) {\n          p$[i] = transformer.call(this, p, scope, hostScope);\n        }\n      }\n      return p$.join(COMPLEX_SELECTOR_SEP);\n    }\n\n    /**\n     * @param {string} selector\n     * @return {string}\n     */\n\n  }, {\n    key: '_twiddleNthPlus',\n    value: function _twiddleNthPlus(selector) {\n      return selector.replace(NTH, function (m, type, inside) {\n        if (inside.indexOf('+') > -1) {\n          inside = inside.replace(/\\+/g, '___');\n        } else if (inside.indexOf('___') > -1) {\n          inside = inside.replace(/___/g, '+');\n        }\n        return ':' + type + '(' + inside + ')';\n      });\n    }\n\n    /**\n     * @param {string} selector\n     * @param {string} scope\n     * @param {string=} hostScope\n     */\n\n  }, {\n    key: '_transformComplexSelector',\n    value: function _transformComplexSelector(selector, scope, hostScope) {\n      var _this = this;\n\n      var stop = false;\n      selector = selector.trim();\n      // Remove spaces inside of selectors like `:nth-of-type` because it confuses SIMPLE_SELECTOR_SEP\n      var isNth = NTH.test(selector);\n      if (isNth) {\n        selector = selector.replace(NTH, function (m, type, inner) {\n          return ':' + type + '(' + inner.replace(/\\s/g, '') + ')';\n        });\n        selector = this._twiddleNthPlus(selector);\n      }\n      selector = selector.replace(SLOTTED_START, HOST + ' $1');\n      selector = selector.replace(SIMPLE_SELECTOR_SEP, function (m, c, s) {\n        if (!stop) {\n          var info = _this._transformCompoundSelector(s, c, scope, hostScope);\n          stop = stop || info.stop;\n          c = info.combinator;\n          s = info.value;\n        }\n        return c + s;\n      });\n      if (isNth) {\n        selector = this._twiddleNthPlus(selector);\n      }\n      return selector;\n    }\n  }, {\n    key: '_transformCompoundSelector',\n    value: function _transformCompoundSelector(selector, combinator, scope, hostScope) {\n      // replace :host with host scoping class\n      var slottedIndex = selector.indexOf(SLOTTED);\n      if (selector.indexOf(HOST) >= 0) {\n        selector = this._transformHostSelector(selector, hostScope);\n        // replace other selectors with scoping class\n      } else if (slottedIndex !== 0) {\n        selector = scope ? this._transformSimpleSelector(selector, scope) : selector;\n      }\n      // mark ::slotted() scope jump to replace with descendant selector + arg\n      // also ignore left-side combinator\n      var slotted = false;\n      if (slottedIndex >= 0) {\n        combinator = '';\n        slotted = true;\n      }\n      // process scope jumping selectors up to the scope jump and then stop\n      var stop = void 0;\n      if (slotted) {\n        stop = true;\n        if (slotted) {\n          // .zonk ::slotted(.foo) -> .zonk.scope > .foo\n          selector = selector.replace(SLOTTED_PAREN, function (m, paren) {\n            return ' > ' + paren;\n          });\n        }\n      }\n      selector = selector.replace(DIR_PAREN, function (m, before, dir) {\n        return '[dir=\"' + dir + '\"] ' + before + ', ' + before + '[dir=\"' + dir + '\"]';\n      });\n      return { value: selector, combinator: combinator, stop: stop };\n    }\n  }, {\n    key: '_transformSimpleSelector',\n    value: function _transformSimpleSelector(selector, scope) {\n      var p$ = selector.split(PSEUDO_PREFIX);\n      p$[0] += scope;\n      return p$.join(PSEUDO_PREFIX);\n    }\n\n    // :host(...) -> scopeName...\n\n  }, {\n    key: '_transformHostSelector',\n    value: function _transformHostSelector(selector, hostScope) {\n      var m = selector.match(HOST_PAREN);\n      var paren = m && m[2].trim() || '';\n      if (paren) {\n        if (!paren[0].match(SIMPLE_SELECTOR_PREFIX)) {\n          // paren starts with a type selector\n          var typeSelector = paren.split(SIMPLE_SELECTOR_PREFIX)[0];\n          // if the type selector is our hostScope then avoid pre-pending it\n          if (typeSelector === hostScope) {\n            return paren;\n            // otherwise, this selector should not match in this scope so\n            // output a bogus selector.\n          } else {\n            return SELECTOR_NO_MATCH;\n          }\n        } else {\n          // make sure to do a replace here to catch selectors like:\n          // `:host(.foo)::before`\n          return selector.replace(HOST_PAREN, function (m, host, paren) {\n            return hostScope + paren;\n          });\n        }\n        // if no paren, do a straight :host replacement.\n        // TODO(sorvell): this should not strictly be necessary but\n        // it's needed to maintain support for `:host[foo]` type selectors\n        // which have been improperly used under Shady DOM. This should be\n        // deprecated.\n      } else {\n        return selector.replace(HOST, hostScope);\n      }\n    }\n\n    /**\n     * @param {StyleNode} rule\n     */\n\n  }, {\n    key: 'documentRule',\n    value: function documentRule(rule) {\n      // reset selector in case this is redone.\n      rule['selector'] = rule['parsedSelector'];\n      this.normalizeRootSelector(rule);\n      this._transformRule(rule, this._transformDocumentSelector);\n    }\n\n    /**\n     * @param {StyleNode} rule\n     */\n\n  }, {\n    key: 'normalizeRootSelector',\n    value: function normalizeRootSelector(rule) {\n      if (rule['selector'] === ROOT) {\n        rule['selector'] = 'html';\n      }\n    }\n\n    /**\n     * @param {string} selector\n     */\n\n  }, {\n    key: '_transformDocumentSelector',\n    value: function _transformDocumentSelector(selector) {\n      return selector.match(SLOTTED) ? this._transformComplexSelector(selector, SCOPE_DOC_SELECTOR) : this._transformSimpleSelector(selector.trim(), SCOPE_DOC_SELECTOR);\n    }\n  }, {\n    key: 'SCOPE_NAME',\n    get: function get() {\n      return SCOPE_NAME;\n    }\n  }]);\n\n  return StyleTransformer;\n}();\n\nvar NTH = /:(nth[-\\w]+)\\(([^)]+)\\)/;\nvar SCOPE_DOC_SELECTOR = ':not(.' + SCOPE_NAME + ')';\nvar COMPLEX_SELECTOR_SEP = ',';\nvar SIMPLE_SELECTOR_SEP = /(^|[\\s>+~]+)((?:\\[.+?\\]|[^\\s>+~=[])+)/g;\nvar SIMPLE_SELECTOR_PREFIX = /[[.:#*]/;\nvar HOST = ':host';\nvar ROOT = ':root';\nvar SLOTTED = '::slotted';\nvar SLOTTED_START = new RegExp('^(' + SLOTTED + ')');\n// NOTE: this supports 1 nested () pair for things like\n// :host(:not([selected]), more general support requires\n// parsing which seems like overkill\nvar HOST_PAREN = /(:host)(?:\\(((?:\\([^)(]*\\)|[^)(]*)+?)\\))/;\n// similar to HOST_PAREN\nvar SLOTTED_PAREN = /(?:::slotted)(?:\\(((?:\\([^)(]*\\)|[^)(]*)+?)\\))/;\nvar DIR_PAREN = /(.*):dir\\((?:(ltr|rtl))\\)/;\nvar CSS_CLASS_PREFIX = '.';\nvar PSEUDO_PREFIX = ':';\nvar CLASS = 'class';\nvar SELECTOR_NO_MATCH = 'should_not_match';\n\nexports.default = new StyleTransformer();\n\n/***/ }),\n/* 9 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n/**\n@license\nCopyright (c) 2017 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\nvar VAR_ASSIGN = exports.VAR_ASSIGN = /(?:^|[;\\s{]\\s*)(--[\\w-]*?)\\s*:\\s*(?:((?:'(?:\\\\'|.)*?'|\"(?:\\\\\"|.)*?\"|\\([^)]*?\\)|[^};{])+)|\\{([^}]*)\\}(?:(?=[;\\s}])|$))/gi;\nvar MIXIN_MATCH = exports.MIXIN_MATCH = /(?:^|\\W+)@apply\\s*\\(?([^);\\n]*)\\)?/gi;\nvar VAR_CONSUMED = exports.VAR_CONSUMED = /(--[\\w-]+)\\s*([:,;)]|$)/gi;\nvar ANIMATION_MATCH = exports.ANIMATION_MATCH = /(animation\\s*:)|(animation-name\\s*:)/;\nvar MEDIA_MATCH = exports.MEDIA_MATCH = /@media\\s(.*)/;\nvar IS_VAR = exports.IS_VAR = /^--/;\nvar BRACKETED = exports.BRACKETED = /\\{[^}]*\\}/g;\nvar HOST_PREFIX = exports.HOST_PREFIX = '(?:^|[^.#[:])';\nvar HOST_SUFFIX = exports.HOST_SUFFIX = '($|[.:[\\\\s>+~])';\n\n/***/ }),\n/* 10 */,\n/* 11 */,\n/* 12 */,\n/* 13 */,\n/* 14 */,\n/* 15 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/**\n@license\nCopyright (c) 2017 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _cssParse = __webpack_require__(2);\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n// eslint-disable-line no-unused-vars\n\n/** @const {string} */\nvar infoKey = '__styleInfo';\n\nvar StyleInfo = function () {\n  _createClass(StyleInfo, null, [{\n    key: 'get',\n\n    /**\n     * @param {Element} node\n     * @return {StyleInfo}\n     */\n    value: function get(node) {\n      if (node) {\n        return node[infoKey];\n      } else {\n        return null;\n      }\n    }\n    /**\n     * @param {!Element} node\n     * @param {StyleInfo} styleInfo\n     * @return {StyleInfo}\n     */\n\n  }, {\n    key: 'set',\n    value: function set(node, styleInfo) {\n      node[infoKey] = styleInfo;\n      return styleInfo;\n    }\n    /**\n     * @param {StyleNode} ast\n     * @param {Node=} placeholder\n     * @param {Array<string>=} ownStylePropertyNames\n     * @param {string=} elementName\n     * @param {string=} typeExtension\n     * @param {string=} cssBuild\n     */\n\n  }]);\n\n  function StyleInfo(ast, placeholder, ownStylePropertyNames, elementName, typeExtension, cssBuild) {\n    _classCallCheck(this, StyleInfo);\n\n    /** @type {StyleNode} */\n    this.styleRules = ast || null;\n    /** @type {Node} */\n    this.placeholder = placeholder || null;\n    /** @type {!Array<string>} */\n    this.ownStylePropertyNames = ownStylePropertyNames || [];\n    /** @type {Array<Object>} */\n    this.overrideStyleProperties = null;\n    /** @type {string} */\n    this.elementName = elementName || '';\n    /** @type {string} */\n    this.cssBuild = cssBuild || '';\n    /** @type {string} */\n    this.typeExtension = typeExtension || '';\n    /** @type {Object<string, string>} */\n    this.styleProperties = null;\n    /** @type {?string} */\n    this.scopeSelector = null;\n    /** @type {HTMLStyleElement} */\n    this.customStyle = null;\n  }\n\n  _createClass(StyleInfo, [{\n    key: '_getStyleRules',\n    value: function _getStyleRules() {\n      return this.styleRules;\n    }\n  }]);\n\n  return StyleInfo;\n}();\n\nexports.default = StyleInfo;\n\n\nStyleInfo.prototype['_getStyleRules'] = StyleInfo.prototype._getStyleRules;\n\n/***/ }),\n/* 16 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/**\n@license\nCopyright (c) 2017 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\n\n\n/**\n * @const {!Object<string, !HTMLTemplateElement>}\n */\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar templateMap = {};\nexports.default = templateMap;\n\n/***/ }),\n/* 17 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/**\n@license\nCopyright (c) 2017 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\n\n\n/** @type {Promise<void>} */\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = documentWait;\nvar readyPromise = null;\n\n/** @type {?function(?function())} */\nvar whenReady = window['HTMLImports'] && window['HTMLImports']['whenReady'] || null;\n\n/** @type {function()} */\nvar resolveFn = void 0;\n\n/**\n * @param {?function()} callback\n */\nfunction documentWait(callback) {\n  requestAnimationFrame(function () {\n    if (whenReady) {\n      whenReady(callback);\n    } else {\n      if (!readyPromise) {\n        readyPromise = new Promise(function (resolve) {\n          resolveFn = resolve;\n        });\n        if (document.readyState === 'complete') {\n          resolveFn();\n        } else {\n          document.addEventListener('readystatechange', function () {\n            if (document.readyState === 'complete') {\n              resolveFn();\n            }\n          });\n        }\n      }\n      readyPromise.then(function () {\n        callback && callback();\n      });\n    }\n  });\n}\n\n/***/ }),\n/* 18 */,\n/* 19 */,\n/* 20 */,\n/* 21 */,\n/* 22 */,\n/* 23 */,\n/* 24 */,\n/* 25 */,\n/* 26 */,\n/* 27 */,\n/* 28 */,\n/* 29 */,\n/* 30 */,\n/* 31 */,\n/* 32 */,\n/* 33 */,\n/* 34 */,\n/* 35 */,\n/* 36 */,\n/* 37 */,\n/* 38 */,\n/* 39 */,\n/* 40 */,\n/* 41 */,\n/* 42 */,\n/* 43 */,\n/* 44 */,\n/* 45 */,\n/* 46 */,\n/* 47 */,\n/* 48 */,\n/* 49 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n__webpack_require__(50);\n\n/***/ }),\n/* 50 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/**\n@license\nCopyright (c) 2017 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\n\n\nvar _scopingShim = __webpack_require__(51);\n\nvar _scopingShim2 = _interopRequireDefault(_scopingShim);\n\nvar _styleSettings = __webpack_require__(1);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/** @const {ScopingShim} */\nvar scopingShim = new _scopingShim2.default();\n\nvar ApplyShim = void 0,\n    CustomStyleInterface = void 0;\n\nif (window['ShadyCSS']) {\n  ApplyShim = window['ShadyCSS']['ApplyShim'];\n  CustomStyleInterface = window['ShadyCSS']['CustomStyleInterface'];\n}\n\nwindow.ShadyCSS = {\n  ScopingShim: scopingShim,\n  /**\n   * @param {!HTMLTemplateElement} template\n   * @param {string} elementName\n   * @param {string=} elementExtends\n   */\n  prepareTemplate: function prepareTemplate(template, elementName, elementExtends) {\n    scopingShim.flushCustomStyles();\n    scopingShim.prepareTemplate(template, elementName, elementExtends);\n  },\n\n\n  /**\n   * @param {!HTMLElement} element\n   * @param {Object=} properties\n   */\n  styleSubtree: function styleSubtree(element, properties) {\n    scopingShim.flushCustomStyles();\n    scopingShim.styleSubtree(element, properties);\n  },\n\n\n  /**\n   * @param {!HTMLElement} element\n   */\n  styleElement: function styleElement(element) {\n    scopingShim.flushCustomStyles();\n    scopingShim.styleElement(element);\n  },\n\n\n  /**\n   * @param {Object=} properties\n   */\n  styleDocument: function styleDocument(properties) {\n    scopingShim.flushCustomStyles();\n    scopingShim.styleDocument(properties);\n  },\n\n\n  /**\n   * @param {Element} element\n   * @param {string} property\n   * @return {string}\n   */\n  getComputedStyleValue: function getComputedStyleValue(element, property) {\n    return scopingShim.getComputedStyleValue(element, property);\n  },\n\n\n  nativeCss: _styleSettings.nativeCssVariables,\n\n  nativeShadow: _styleSettings.nativeShadow\n};\n\nif (ApplyShim) {\n  window.ShadyCSS.ApplyShim = ApplyShim;\n}\n\nif (CustomStyleInterface) {\n  window.ShadyCSS.CustomStyleInterface = CustomStyleInterface;\n}\n\n/***/ }),\n/* 51 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/**\n@license\nCopyright (c) 2017 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _cssParse = __webpack_require__(2);\n\nvar _styleSettings = __webpack_require__(1);\n\nvar _styleTransformer = __webpack_require__(8);\n\nvar _styleTransformer2 = _interopRequireDefault(_styleTransformer);\n\nvar _styleUtil = __webpack_require__(3);\n\nvar StyleUtil = _interopRequireWildcard(_styleUtil);\n\nvar _styleProperties = __webpack_require__(52);\n\nvar _styleProperties2 = _interopRequireDefault(_styleProperties);\n\nvar _stylePlaceholder = __webpack_require__(53);\n\nvar _stylePlaceholder2 = _interopRequireDefault(_stylePlaceholder);\n\nvar _styleInfo = __webpack_require__(15);\n\nvar _styleInfo2 = _interopRequireDefault(_styleInfo);\n\nvar _styleCache = __webpack_require__(54);\n\nvar _styleCache2 = _interopRequireDefault(_styleCache);\n\nvar _documentWatcher = __webpack_require__(55);\n\nvar _templateMap = __webpack_require__(16);\n\nvar _templateMap2 = _interopRequireDefault(_templateMap);\n\nvar _applyShimUtils = __webpack_require__(56);\n\nvar ApplyShimUtils = _interopRequireWildcard(_applyShimUtils);\n\nvar _documentWait = __webpack_require__(17);\n\nvar _documentWait2 = _interopRequireDefault(_documentWait);\n\nvar _commonUtils = __webpack_require__(57);\n\nvar _customStyleInterface = __webpack_require__(58);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n// eslint-disable-line no-unused-vars\n\n/**\n * @const {StyleCache}\n */\nvar styleCache = new _styleCache2.default();\n\nvar ScopingShim = function () {\n  function ScopingShim() {\n    var _this = this;\n\n    _classCallCheck(this, ScopingShim);\n\n    this._scopeCounter = {};\n    this._documentOwner = document.documentElement;\n    var ast = new _cssParse.StyleNode();\n    ast['rules'] = [];\n    this._documentOwnerStyleInfo = _styleInfo2.default.set(this._documentOwner, new _styleInfo2.default(ast));\n    this._elementsHaveApplied = false;\n    this._applyShim = null;\n    /** @type {?CustomStyleInterfaceInterface} */\n    this._customStyleInterface = null;\n    (0, _documentWait2.default)(function () {\n      _this._ensure();\n    });\n  }\n\n  _createClass(ScopingShim, [{\n    key: 'flush',\n    value: function flush() {\n      (0, _documentWatcher.flush)();\n    }\n  }, {\n    key: '_generateScopeSelector',\n    value: function _generateScopeSelector(name) {\n      var id = this._scopeCounter[name] = (this._scopeCounter[name] || 0) + 1;\n      return name + '-' + id;\n    }\n  }, {\n    key: 'getStyleAst',\n    value: function getStyleAst(style) {\n      return StyleUtil.rulesForStyle(style);\n    }\n  }, {\n    key: 'styleAstToString',\n    value: function styleAstToString(ast) {\n      return StyleUtil.toCssText(ast);\n    }\n  }, {\n    key: '_gatherStyles',\n    value: function _gatherStyles(template) {\n      var styles = template.content.querySelectorAll('style');\n      var cssText = [];\n      for (var i = 0; i < styles.length; i++) {\n        var s = styles[i];\n        cssText.push(s.textContent);\n        s.parentNode.removeChild(s);\n      }\n      return cssText.join('').trim();\n    }\n  }, {\n    key: '_getCssBuild',\n    value: function _getCssBuild(template) {\n      var style = template.content.querySelector('style');\n      if (!style) {\n        return '';\n      }\n      return style.getAttribute('css-build') || '';\n    }\n    /**\n     * Prepare the styling and template for the given element type\n     *\n     * @param {HTMLTemplateElement} template\n     * @param {string} elementName\n     * @param {string=} typeExtension\n     */\n\n  }, {\n    key: 'prepareTemplate',\n    value: function prepareTemplate(template, elementName, typeExtension) {\n      if (template._prepared) {\n        return;\n      }\n      template._prepared = true;\n      template.name = elementName;\n      template.extends = typeExtension;\n      _templateMap2.default[elementName] = template;\n      var cssBuild = this._getCssBuild(template);\n      var cssText = this._gatherStyles(template);\n      var info = {\n        is: elementName,\n        extends: typeExtension,\n        __cssBuild: cssBuild\n      };\n      if (!_styleSettings.nativeShadow) {\n        _styleTransformer2.default.dom(template.content, elementName);\n      }\n      // check if the styling has mixin definitions or uses\n      this._ensure();\n      var hasMixins = (0, _commonUtils.detectMixin)(cssText);\n      var ast = (0, _cssParse.parse)(cssText);\n      // only run the applyshim transforms if there is a mixin involved\n      if (hasMixins && _styleSettings.nativeCssVariables && this._applyShim) {\n        this._applyShim['transformRules'](ast, elementName);\n      }\n      template['_styleAst'] = ast;\n      template._cssBuild = cssBuild;\n\n      var ownPropertyNames = [];\n      if (!_styleSettings.nativeCssVariables) {\n        ownPropertyNames = _styleProperties2.default.decorateStyles(template['_styleAst'], info);\n      }\n      if (!ownPropertyNames.length || _styleSettings.nativeCssVariables) {\n        var root = _styleSettings.nativeShadow ? template.content : null;\n        var placeholder = _stylePlaceholder2.default[elementName];\n        var style = this._generateStaticStyle(info, template['_styleAst'], root, placeholder);\n        template._style = style;\n      }\n      template._ownPropertyNames = ownPropertyNames;\n    }\n  }, {\n    key: '_generateStaticStyle',\n    value: function _generateStaticStyle(info, rules, shadowroot, placeholder) {\n      var cssText = _styleTransformer2.default.elementStyles(info, rules);\n      if (cssText.length) {\n        return StyleUtil.applyCss(cssText, info.is, shadowroot, placeholder);\n      }\n    }\n  }, {\n    key: '_prepareHost',\n    value: function _prepareHost(host) {\n      var _StyleUtil$getIsExten = StyleUtil.getIsExtends(host),\n          is = _StyleUtil$getIsExten.is,\n          typeExtension = _StyleUtil$getIsExten.typeExtension;\n\n      var placeholder = _stylePlaceholder2.default[is];\n      var template = _templateMap2.default[is];\n      var ast = void 0;\n      var ownStylePropertyNames = void 0;\n      var cssBuild = void 0;\n      if (template) {\n        ast = template['_styleAst'];\n        ownStylePropertyNames = template._ownPropertyNames;\n        cssBuild = template._cssBuild;\n      }\n      return _styleInfo2.default.set(host, new _styleInfo2.default(ast, placeholder, ownStylePropertyNames, is, typeExtension, cssBuild));\n    }\n  }, {\n    key: '_ensureApplyShim',\n    value: function _ensureApplyShim() {\n      if (this._applyShim) {\n        return;\n      } else if (window.ShadyCSS && window.ShadyCSS.ApplyShim) {\n        this._applyShim = window.ShadyCSS.ApplyShim;\n        this._applyShim['invalidCallback'] = ApplyShimUtils.invalidate;\n      }\n    }\n  }, {\n    key: '_ensureCustomStyleInterface',\n    value: function _ensureCustomStyleInterface() {\n      var _this2 = this;\n\n      if (this._customStyleInterface) {\n        return;\n      } else if (window.ShadyCSS && window.ShadyCSS.CustomStyleInterface) {\n        this._customStyleInterface = /** @type {!CustomStyleInterfaceInterface} */window.ShadyCSS.CustomStyleInterface;\n        /** @type {function(!HTMLStyleElement)} */\n        this._customStyleInterface['transformCallback'] = function (style) {\n          _this2.transformCustomStyleForDocument(style);\n        };\n        this._customStyleInterface['validateCallback'] = function () {\n          requestAnimationFrame(function () {\n            if (_this2._customStyleInterface['enqueued'] || _this2._elementsHaveApplied) {\n              _this2.flushCustomStyles();\n            }\n          });\n        };\n      }\n    }\n  }, {\n    key: '_ensure',\n    value: function _ensure() {\n      this._ensureApplyShim();\n      this._ensureCustomStyleInterface();\n    }\n    /**\n     * Flush and apply custom styles to document\n     */\n\n  }, {\n    key: 'flushCustomStyles',\n    value: function flushCustomStyles() {\n      this._ensure();\n      if (!this._customStyleInterface) {\n        return;\n      }\n      var customStyles = this._customStyleInterface['processStyles']();\n      // early return if custom-styles don't need validation\n      if (!this._customStyleInterface['enqueued']) {\n        return;\n      }\n      if (!_styleSettings.nativeCssVariables) {\n        this._updateProperties(this._documentOwner, this._documentOwnerStyleInfo);\n        this._applyCustomStyles(customStyles);\n      } else {\n        this._revalidateCustomStyleApplyShim(customStyles);\n      }\n      this._customStyleInterface['enqueued'] = false;\n      // if custom elements have upgraded and there are no native css variables, we must recalculate the whole tree\n      if (this._elementsHaveApplied && !_styleSettings.nativeCssVariables) {\n        this.styleDocument();\n      }\n    }\n    /**\n     * Apply styles for the given element\n     *\n     * @param {!HTMLElement} host\n     * @param {Object=} overrideProps\n     */\n\n  }, {\n    key: 'styleElement',\n    value: function styleElement(host, overrideProps) {\n      var _StyleUtil$getIsExten2 = StyleUtil.getIsExtends(host),\n          is = _StyleUtil$getIsExten2.is;\n\n      var styleInfo = _styleInfo2.default.get(host);\n      if (!styleInfo) {\n        styleInfo = this._prepareHost(host);\n      }\n      // Only trip the `elementsHaveApplied` flag if a node other that the root document has `applyStyle` called\n      if (!this._isRootOwner(host)) {\n        this._elementsHaveApplied = true;\n      }\n      if (overrideProps) {\n        styleInfo.overrideStyleProperties = styleInfo.overrideStyleProperties || {};\n        Object.assign(styleInfo.overrideStyleProperties, overrideProps);\n      }\n      if (!_styleSettings.nativeCssVariables) {\n        this._updateProperties(host, styleInfo);\n        if (styleInfo.ownStylePropertyNames && styleInfo.ownStylePropertyNames.length) {\n          this._applyStyleProperties(host, styleInfo);\n        }\n      } else {\n        if (styleInfo.overrideStyleProperties) {\n          (0, _commonUtils.updateNativeProperties)(host, styleInfo.overrideStyleProperties);\n        }\n        var template = _templateMap2.default[is];\n        // bail early if there is no shadowroot for this element\n        if (!template && !this._isRootOwner(host)) {\n          return;\n        }\n        if (template && template._style && !ApplyShimUtils.templateIsValid(template)) {\n          // update template\n          if (!ApplyShimUtils.templateIsValidating(template)) {\n            this._ensure();\n            this._applyShim && this._applyShim['transformRules'](template['_styleAst'], is);\n            template._style.textContent = _styleTransformer2.default.elementStyles(host, styleInfo.styleRules);\n            ApplyShimUtils.startValidatingTemplate(template);\n          }\n          // update instance if native shadowdom\n          if (_styleSettings.nativeShadow) {\n            var root = host.shadowRoot;\n            if (root) {\n              var style = root.querySelector('style');\n              style.textContent = _styleTransformer2.default.elementStyles(host, styleInfo.styleRules);\n            }\n          }\n          styleInfo.styleRules = template['_styleAst'];\n        }\n      }\n    }\n  }, {\n    key: '_styleOwnerForNode',\n    value: function _styleOwnerForNode(node) {\n      var root = node.getRootNode();\n      var host = root.host;\n      if (host) {\n        if (_styleInfo2.default.get(host)) {\n          return host;\n        } else {\n          return this._styleOwnerForNode(host);\n        }\n      }\n      return this._documentOwner;\n    }\n  }, {\n    key: '_isRootOwner',\n    value: function _isRootOwner(node) {\n      return node === this._documentOwner;\n    }\n  }, {\n    key: '_applyStyleProperties',\n    value: function _applyStyleProperties(host, styleInfo) {\n      var is = StyleUtil.getIsExtends(host).is;\n      var cacheEntry = styleCache.fetch(is, styleInfo.styleProperties, styleInfo.ownStylePropertyNames);\n      var cachedScopeSelector = cacheEntry && cacheEntry.scopeSelector;\n      var cachedStyle = cacheEntry ? cacheEntry.styleElement : null;\n      var oldScopeSelector = styleInfo.scopeSelector;\n      // only generate new scope if cached style is not found\n      styleInfo.scopeSelector = cachedScopeSelector || this._generateScopeSelector(is);\n      var style = _styleProperties2.default.applyElementStyle(host, styleInfo.styleProperties, styleInfo.scopeSelector, cachedStyle);\n      if (!_styleSettings.nativeShadow) {\n        _styleProperties2.default.applyElementScopeSelector(host, styleInfo.scopeSelector, oldScopeSelector);\n      }\n      if (!cacheEntry) {\n        styleCache.store(is, styleInfo.styleProperties, style, styleInfo.scopeSelector);\n      }\n      return style;\n    }\n  }, {\n    key: '_updateProperties',\n    value: function _updateProperties(host, styleInfo) {\n      var owner = this._styleOwnerForNode(host);\n      var ownerStyleInfo = _styleInfo2.default.get(owner);\n      var ownerProperties = ownerStyleInfo.styleProperties;\n      var props = Object.create(ownerProperties || null);\n      var hostAndRootProps = _styleProperties2.default.hostAndRootPropertiesForScope(host, styleInfo.styleRules);\n      var propertyData = _styleProperties2.default.propertyDataFromStyles(ownerStyleInfo.styleRules, host);\n      var propertiesMatchingHost = propertyData.properties;\n      Object.assign(props, hostAndRootProps.hostProps, propertiesMatchingHost, hostAndRootProps.rootProps);\n      this._mixinOverrideStyles(props, styleInfo.overrideStyleProperties);\n      _styleProperties2.default.reify(props);\n      styleInfo.styleProperties = props;\n    }\n  }, {\n    key: '_mixinOverrideStyles',\n    value: function _mixinOverrideStyles(props, overrides) {\n      for (var p in overrides) {\n        var v = overrides[p];\n        // skip override props if they are not truthy or 0\n        // in order to fall back to inherited values\n        if (v || v === 0) {\n          props[p] = v;\n        }\n      }\n    }\n    /**\n     * Update styles of the whole document\n     *\n     * @param {Object=} properties\n     */\n\n  }, {\n    key: 'styleDocument',\n    value: function styleDocument(properties) {\n      this.styleSubtree(this._documentOwner, properties);\n    }\n    /**\n     * Update styles of a subtree\n     *\n     * @param {!HTMLElement} host\n     * @param {Object=} properties\n     */\n\n  }, {\n    key: 'styleSubtree',\n    value: function styleSubtree(host, properties) {\n      var root = host.shadowRoot;\n      if (root || this._isRootOwner(host)) {\n        this.styleElement(host, properties);\n      }\n      // process the shadowdom children of `host`\n      var shadowChildren = root && (root.children || root.childNodes);\n      if (shadowChildren) {\n        for (var i = 0; i < shadowChildren.length; i++) {\n          var c = /** @type {!HTMLElement} */shadowChildren[i];\n          this.styleSubtree(c);\n        }\n      } else {\n        // process the lightdom children of `host`\n        var children = host.children || host.childNodes;\n        if (children) {\n          for (var _i = 0; _i < children.length; _i++) {\n            var _c = /** @type {!HTMLElement} */children[_i];\n            this.styleSubtree(_c);\n          }\n        }\n      }\n    }\n    /* Custom Style operations */\n\n  }, {\n    key: '_revalidateCustomStyleApplyShim',\n    value: function _revalidateCustomStyleApplyShim(customStyles) {\n      for (var i = 0; i < customStyles.length; i++) {\n        var c = customStyles[i];\n        var s = this._customStyleInterface['getStyleForCustomStyle'](c);\n        if (s) {\n          this._revalidateApplyShim(s);\n        }\n      }\n    }\n  }, {\n    key: '_applyCustomStyles',\n    value: function _applyCustomStyles(customStyles) {\n      for (var i = 0; i < customStyles.length; i++) {\n        var c = customStyles[i];\n        var s = this._customStyleInterface['getStyleForCustomStyle'](c);\n        if (s) {\n          _styleProperties2.default.applyCustomStyle(s, this._documentOwnerStyleInfo.styleProperties);\n        }\n      }\n    }\n  }, {\n    key: 'transformCustomStyleForDocument',\n    value: function transformCustomStyleForDocument(style) {\n      var _this3 = this;\n\n      var ast = StyleUtil.rulesForStyle(style);\n      StyleUtil.forEachRule(ast, function (rule) {\n        if (_styleSettings.nativeShadow) {\n          _styleTransformer2.default.normalizeRootSelector(rule);\n        } else {\n          _styleTransformer2.default.documentRule(rule);\n        }\n        if (_styleSettings.nativeCssVariables) {\n          _this3._ensure();\n          _this3._applyShim && _this3._applyShim['transformRule'](rule);\n        }\n      });\n      if (_styleSettings.nativeCssVariables) {\n        style.textContent = StyleUtil.toCssText(ast);\n      } else {\n        this._documentOwnerStyleInfo.styleRules.rules.push(ast);\n      }\n    }\n  }, {\n    key: '_revalidateApplyShim',\n    value: function _revalidateApplyShim(style) {\n      if (_styleSettings.nativeCssVariables && this._applyShim) {\n        var ast = StyleUtil.rulesForStyle(style);\n        this._ensure();\n        this._applyShim['transformRules'](ast);\n        style.textContent = StyleUtil.toCssText(ast);\n      }\n    }\n  }, {\n    key: 'getComputedStyleValue',\n    value: function getComputedStyleValue(element, property) {\n      var value = void 0;\n      if (!_styleSettings.nativeCssVariables) {\n        // element is either a style host, or an ancestor of a style host\n        var styleInfo = _styleInfo2.default.get(element) || _styleInfo2.default.get(this._styleOwnerForNode(element));\n        value = styleInfo.styleProperties[property];\n      }\n      // fall back to the property value from the computed styling\n      value = value || window.getComputedStyle(element).getPropertyValue(property);\n      // trim whitespace that can come after the `:` in css\n      // example: padding: 2px -> \" 2px\"\n      return value ? value.trim() : '';\n    }\n    // given an element and a classString, replaces\n    // the element's class with the provided classString and adds\n    // any necessary ShadyCSS static and property based scoping selectors\n\n  }, {\n    key: 'setElementClass',\n    value: function setElementClass(element, classString) {\n      var root = element.getRootNode();\n      var classes = classString ? classString.split(/\\s/) : [];\n      var scopeName = root.host && root.host.localName;\n      // If no scope, try to discover scope name from existing class.\n      // This can occur if, for example, a template stamped element that\n      // has been scoped is manipulated when not in a root.\n      if (!scopeName) {\n        var classAttr = element.getAttribute('class');\n        if (classAttr) {\n          var k$ = classAttr.split(/\\s/);\n          for (var i = 0; i < k$.length; i++) {\n            if (k$[i] === _styleTransformer2.default.SCOPE_NAME) {\n              scopeName = k$[i + 1];\n              break;\n            }\n          }\n        }\n      }\n      if (scopeName) {\n        classes.push(_styleTransformer2.default.SCOPE_NAME, scopeName);\n      }\n      if (!_styleSettings.nativeCssVariables) {\n        var styleInfo = _styleInfo2.default.get(element);\n        if (styleInfo && styleInfo.scopeSelector) {\n          classes.push(_styleProperties2.default.XSCOPE_NAME, styleInfo.scopeSelector);\n        }\n      }\n      StyleUtil.setElementClassRaw(element, classes.join(' '));\n    }\n  }, {\n    key: '_styleInfoForNode',\n    value: function _styleInfoForNode(node) {\n      return _styleInfo2.default.get(node);\n    }\n  }]);\n\n  return ScopingShim;\n}();\n\n/* exports */\n\n\nexports.default = ScopingShim;\nScopingShim.prototype['flush'] = ScopingShim.prototype.flush;\nScopingShim.prototype['prepareTemplate'] = ScopingShim.prototype.prepareTemplate;\nScopingShim.prototype['styleElement'] = ScopingShim.prototype.styleElement;\nScopingShim.prototype['styleDocument'] = ScopingShim.prototype.styleDocument;\nScopingShim.prototype['styleSubtree'] = ScopingShim.prototype.styleSubtree;\nScopingShim.prototype['getComputedStyleValue'] = ScopingShim.prototype.getComputedStyleValue;\nScopingShim.prototype['setElementClass'] = ScopingShim.prototype.setElementClass;\nScopingShim.prototype['_styleInfoForNode'] = ScopingShim.prototype._styleInfoForNode;\nScopingShim.prototype['transformCustomStyleForDocument'] = ScopingShim.prototype.transformCustomStyleForDocument;\nScopingShim.prototype['getStyleAst'] = ScopingShim.prototype.getStyleAst;\nScopingShim.prototype['styleAstToString'] = ScopingShim.prototype.styleAstToString;\nScopingShim.prototype['flushCustomStyles'] = ScopingShim.prototype.flushCustomStyles;\nObject.defineProperties(ScopingShim.prototype, {\n  'nativeShadow': {\n    get: function get() {\n      return _styleSettings.nativeShadow;\n    }\n  },\n  'nativeCss': {\n    get: function get() {\n      return _styleSettings.nativeCssVariables;\n    }\n  }\n});\n\n/***/ }),\n/* 52 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/**\n@license\nCopyright (c) 2017 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }(); // eslint-disable-line no-unused-vars\n\n\nvar _cssParse = __webpack_require__(2);\n\nvar _styleSettings = __webpack_require__(1);\n\nvar _styleTransformer = __webpack_require__(8);\n\nvar _styleTransformer2 = _interopRequireDefault(_styleTransformer);\n\nvar _styleUtil = __webpack_require__(3);\n\nvar StyleUtil = _interopRequireWildcard(_styleUtil);\n\nvar _commonRegex = __webpack_require__(9);\n\nvar RX = _interopRequireWildcard(_commonRegex);\n\nvar _styleInfo = __webpack_require__(15);\n\nvar _styleInfo2 = _interopRequireDefault(_styleInfo);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n// TODO: dedupe with shady\n/**\n * @const {function(string):boolean}\n */\nvar matchesSelector = function (p) {\n  return p.matches || p.matchesSelector || p.mozMatchesSelector || p.msMatchesSelector || p.oMatchesSelector || p.webkitMatchesSelector;\n}(window.Element.prototype);\n\nvar IS_IE = navigator.userAgent.match('Trident');\n\nvar XSCOPE_NAME = 'x-scope';\n\nvar StyleProperties = function () {\n  function StyleProperties() {\n    _classCallCheck(this, StyleProperties);\n  }\n\n  _createClass(StyleProperties, [{\n    key: 'decorateStyles',\n\n    /**\n     * decorates styles with rule info and returns an array of used style property names\n     *\n     * @param {StyleNode} rules\n     * @return {Array<string>}\n     */\n    value: function decorateStyles(rules) {\n      var self = this,\n          props = {},\n          keyframes = [],\n          ruleIndex = 0;\n      StyleUtil.forEachRule(rules, function (rule) {\n        self.decorateRule(rule);\n        // mark in-order position of ast rule in styles block, used for cache key\n        rule.index = ruleIndex++;\n        self.collectPropertiesInCssText(rule.propertyInfo.cssText, props);\n      }, function onKeyframesRule(rule) {\n        keyframes.push(rule);\n      });\n      // Cache all found keyframes rules for later reference:\n      rules._keyframes = keyframes;\n      // return this list of property names *consumes* in these styles.\n      var names = [];\n      for (var i in props) {\n        names.push(i);\n      }\n      return names;\n    }\n\n    // decorate a single rule with property info\n\n  }, {\n    key: 'decorateRule',\n    value: function decorateRule(rule) {\n      if (rule.propertyInfo) {\n        return rule.propertyInfo;\n      }\n      var info = {},\n          properties = {};\n      var hasProperties = this.collectProperties(rule, properties);\n      if (hasProperties) {\n        info.properties = properties;\n        // TODO(sorvell): workaround parser seeing mixins as additional rules\n        rule['rules'] = null;\n      }\n      info.cssText = this.collectCssText(rule);\n      rule.propertyInfo = info;\n      return info;\n    }\n\n    // collects the custom properties from a rule's cssText\n\n  }, {\n    key: 'collectProperties',\n    value: function collectProperties(rule, properties) {\n      var info = rule.propertyInfo;\n      if (info) {\n        if (info.properties) {\n          Object.assign(properties, info.properties);\n          return true;\n        }\n      } else {\n        var m = void 0,\n            rx = RX.VAR_ASSIGN;\n        var cssText = rule['parsedCssText'];\n        var value = void 0;\n        var any = void 0;\n        while (m = rx.exec(cssText)) {\n          // note: group 2 is var, 3 is mixin\n          value = (m[2] || m[3]).trim();\n          // value of 'inherit' or 'unset' is equivalent to not setting the property here\n          if (value !== 'inherit' || value !== 'unset') {\n            properties[m[1].trim()] = value;\n          }\n          any = true;\n        }\n        return any;\n      }\n    }\n\n    // returns cssText of properties that consume variables/mixins\n\n  }, {\n    key: 'collectCssText',\n    value: function collectCssText(rule) {\n      return this.collectConsumingCssText(rule['parsedCssText']);\n    }\n\n    // NOTE: we support consumption inside mixin assignment\n    // but not production, so strip out {...}\n\n  }, {\n    key: 'collectConsumingCssText',\n    value: function collectConsumingCssText(cssText) {\n      return cssText.replace(RX.BRACKETED, '').replace(RX.VAR_ASSIGN, '');\n    }\n  }, {\n    key: 'collectPropertiesInCssText',\n    value: function collectPropertiesInCssText(cssText, props) {\n      var m = void 0;\n      while (m = RX.VAR_CONSUMED.exec(cssText)) {\n        var name = m[1];\n        // This regex catches all variable names, and following non-whitespace char\n        // If next char is not ':', then variable is a consumer\n        if (m[2] !== ':') {\n          props[name] = true;\n        }\n      }\n    }\n\n    // turns custom properties into realized values.\n\n  }, {\n    key: 'reify',\n    value: function reify(props) {\n      // big perf optimization here: reify only *own* properties\n      // since this object has __proto__ of the element's scope properties\n      var names = Object.getOwnPropertyNames(props);\n      for (var i = 0, n; i < names.length; i++) {\n        n = names[i];\n        props[n] = this.valueForProperty(props[n], props);\n      }\n    }\n\n    // given a property value, returns the reified value\n    // a property value may be:\n    // (1) a literal value like: red or 5px;\n    // (2) a variable value like: var(--a), var(--a, red), or var(--a, --b) or\n    // var(--a, var(--b));\n    // (3) a literal mixin value like { properties }. Each of these properties\n    // can have values that are: (a) literal, (b) variables, (c) @apply mixins.\n\n  }, {\n    key: 'valueForProperty',\n    value: function valueForProperty(property, props) {\n      // case (1) default\n      // case (3) defines a mixin and we have to reify the internals\n      if (property) {\n        if (property.indexOf(';') >= 0) {\n          property = this.valueForProperties(property, props);\n        } else {\n          // case (2) variable\n          var self = this;\n          var fn = function fn(prefix, value, fallback, suffix) {\n            if (!value) {\n              return prefix + suffix;\n            }\n            var propertyValue = self.valueForProperty(props[value], props);\n            // if value is \"initial\", then the variable should be treated as unset\n            if (!propertyValue || propertyValue === 'initial') {\n              // fallback may be --a or var(--a) or literal\n              propertyValue = self.valueForProperty(props[fallback] || fallback, props) || fallback;\n            } else if (propertyValue === 'apply-shim-inherit') {\n              // CSS build will replace `inherit` with `apply-shim-inherit`\n              // for use with native css variables.\n              // Since we have full control, we can use `inherit` directly.\n              propertyValue = 'inherit';\n            }\n            return prefix + (propertyValue || '') + suffix;\n          };\n          property = StyleUtil.processVariableAndFallback(property, fn);\n        }\n      }\n      return property && property.trim() || '';\n    }\n\n    // note: we do not yet support mixin within mixin\n\n  }, {\n    key: 'valueForProperties',\n    value: function valueForProperties(property, props) {\n      var parts = property.split(';');\n      for (var i = 0, p, m; i < parts.length; i++) {\n        if (p = parts[i]) {\n          RX.MIXIN_MATCH.lastIndex = 0;\n          m = RX.MIXIN_MATCH.exec(p);\n          if (m) {\n            p = this.valueForProperty(props[m[1]], props);\n          } else {\n            var colon = p.indexOf(':');\n            if (colon !== -1) {\n              var pp = p.substring(colon);\n              pp = pp.trim();\n              pp = this.valueForProperty(pp, props) || pp;\n              p = p.substring(0, colon) + pp;\n            }\n          }\n          parts[i] = p && p.lastIndexOf(';') === p.length - 1 ?\n          // strip trailing ;\n          p.slice(0, -1) : p || '';\n        }\n      }\n      return parts.join(';');\n    }\n  }, {\n    key: 'applyProperties',\n    value: function applyProperties(rule, props) {\n      var output = '';\n      // dynamically added sheets may not be decorated so ensure they are.\n      if (!rule.propertyInfo) {\n        this.decorateRule(rule);\n      }\n      if (rule.propertyInfo.cssText) {\n        output = this.valueForProperties(rule.propertyInfo.cssText, props);\n      }\n      rule['cssText'] = output;\n    }\n\n    // Apply keyframe transformations to the cssText of a given rule. The\n    // keyframeTransforms object is a map of keyframe names to transformer\n    // functions which take in cssText and spit out transformed cssText.\n\n  }, {\n    key: 'applyKeyframeTransforms',\n    value: function applyKeyframeTransforms(rule, keyframeTransforms) {\n      var input = rule['cssText'];\n      var output = rule['cssText'];\n      if (rule.hasAnimations == null) {\n        // Cache whether or not the rule has any animations to begin with:\n        rule.hasAnimations = RX.ANIMATION_MATCH.test(input);\n      }\n      // If there are no animations referenced, we can skip transforms:\n      if (rule.hasAnimations) {\n        var transform = void 0;\n        // If we haven't transformed this rule before, we iterate over all\n        // transforms:\n        if (rule.keyframeNamesToTransform == null) {\n          rule.keyframeNamesToTransform = [];\n          for (var keyframe in keyframeTransforms) {\n            transform = keyframeTransforms[keyframe];\n            output = transform(input);\n            // If the transform actually changed the CSS text, we cache the\n            // transform name for future use:\n            if (input !== output) {\n              input = output;\n              rule.keyframeNamesToTransform.push(keyframe);\n            }\n          }\n        } else {\n          // If we already have a list of keyframe names that apply to this\n          // rule, we apply only those keyframe name transforms:\n          for (var i = 0; i < rule.keyframeNamesToTransform.length; ++i) {\n            transform = keyframeTransforms[rule.keyframeNamesToTransform[i]];\n            input = transform(input);\n          }\n          output = input;\n        }\n      }\n      rule['cssText'] = output;\n    }\n\n    // Test if the rules in these styles matches the given `element` and if so,\n    // collect any custom properties into `props`.\n    /**\n     * @param {StyleNode} rules\n     * @param {Element} element\n     */\n\n  }, {\n    key: 'propertyDataFromStyles',\n    value: function propertyDataFromStyles(rules, element) {\n      var props = {},\n          self = this;\n      // generates a unique key for these matches\n      var o = [];\n      // note: active rules excludes non-matching @media rules\n      StyleUtil.forEachRule(rules, function (rule) {\n        // TODO(sorvell): we could trim the set of rules at declaration\n        // time to only include ones that have properties\n        if (!rule.propertyInfo) {\n          self.decorateRule(rule);\n        }\n        // match element against transformedSelector: selector may contain\n        // unwanted uniquification and parsedSelector does not directly match\n        // for :host selectors.\n        var selectorToMatch = rule.transformedSelector || rule['parsedSelector'];\n        if (element && rule.propertyInfo.properties && selectorToMatch) {\n          if (matchesSelector.call(element, selectorToMatch)) {\n            self.collectProperties(rule, props);\n            // produce numeric key for these matches for lookup\n            addToBitMask(rule.index, o);\n          }\n        }\n      }, null, true);\n      return { properties: props, key: o };\n    }\n\n    /**\n     * @param {Element} scope\n     * @param {StyleNode} rule\n     * @param {string|undefined} cssBuild\n     * @param {function(Object)} callback\n     */\n\n  }, {\n    key: 'whenHostOrRootRule',\n    value: function whenHostOrRootRule(scope, rule, cssBuild, callback) {\n      if (!rule.propertyInfo) {\n        this.decorateRule(rule);\n      }\n      if (!rule.propertyInfo.properties) {\n        return;\n      }\n\n      var _StyleUtil$getIsExten = StyleUtil.getIsExtends(scope),\n          is = _StyleUtil$getIsExten.is,\n          typeExtension = _StyleUtil$getIsExten.typeExtension;\n\n      var hostScope = is ? _styleTransformer2.default._calcHostScope(is, typeExtension) : 'html';\n      var parsedSelector = rule['parsedSelector'];\n      var isRoot = parsedSelector === ':host > *' || parsedSelector === 'html';\n      var isHost = parsedSelector.indexOf(':host') === 0 && !isRoot;\n      // build info is either in scope (when scope is an element) or in the style\n      // when scope is the default scope; note: this allows default scope to have\n      // mixed mode built and unbuilt styles.\n      if (cssBuild === 'shady') {\n        // :root -> x-foo > *.x-foo for elements and html for custom-style\n        isRoot = parsedSelector === hostScope + ' > *.' + hostScope || parsedSelector.indexOf('html') !== -1;\n        // :host -> x-foo for elements, but sub-rules have .x-foo in them\n        isHost = !isRoot && parsedSelector.indexOf(hostScope) === 0;\n      }\n      if (cssBuild === 'shadow') {\n        isRoot = parsedSelector === ':host > *' || parsedSelector === 'html';\n        isHost = isHost && !isRoot;\n      }\n      if (!isRoot && !isHost) {\n        return;\n      }\n      var selectorToMatch = hostScope;\n      if (isHost) {\n        // need to transform :host under ShadowDOM because `:host` does not work with `matches`\n        if (_styleSettings.nativeShadow && !rule.transformedSelector) {\n          // transform :host into a matchable selector\n          rule.transformedSelector = _styleTransformer2.default._transformRuleCss(rule, _styleTransformer2.default._transformComplexSelector, _styleTransformer2.default._calcElementScope(is), hostScope);\n        }\n        selectorToMatch = rule.transformedSelector || hostScope;\n      }\n      callback({\n        selector: selectorToMatch,\n        isHost: isHost,\n        isRoot: isRoot\n      });\n    }\n    /**\n     * @param {Element} scope\n     * @param {StyleNode} rules\n     * @return {Object}\n     */\n\n  }, {\n    key: 'hostAndRootPropertiesForScope',\n    value: function hostAndRootPropertiesForScope(scope, rules) {\n      var hostProps = {},\n          rootProps = {},\n          self = this;\n      // note: active rules excludes non-matching @media rules\n      var cssBuild = rules && rules['__cssBuild'];\n      StyleUtil.forEachRule(rules, function (rule) {\n        // if scope is StyleDefaults, use _element for matchesSelector\n        self.whenHostOrRootRule(scope, rule, cssBuild, function (info) {\n          var element = scope._element || scope;\n          if (matchesSelector.call(element, info.selector)) {\n            if (info.isHost) {\n              self.collectProperties(rule, hostProps);\n            } else {\n              self.collectProperties(rule, rootProps);\n            }\n          }\n        });\n      }, null, true);\n      return { rootProps: rootProps, hostProps: hostProps };\n    }\n\n    /**\n     * @param {Element} element\n     * @param {Object} properties\n     * @param {string} scopeSelector\n     */\n\n  }, {\n    key: 'transformStyles',\n    value: function transformStyles(element, properties, scopeSelector) {\n      var self = this;\n\n      var _StyleUtil$getIsExten2 = StyleUtil.getIsExtends(element),\n          is = _StyleUtil$getIsExten2.is,\n          typeExtension = _StyleUtil$getIsExten2.typeExtension;\n\n      var hostSelector = _styleTransformer2.default._calcHostScope(is, typeExtension);\n      var rxHostSelector = element.extends ? '\\\\' + hostSelector.slice(0, -1) + '\\\\]' : hostSelector;\n      var hostRx = new RegExp(RX.HOST_PREFIX + rxHostSelector + RX.HOST_SUFFIX);\n      var rules = _styleInfo2.default.get(element).styleRules;\n      var keyframeTransforms = this._elementKeyframeTransforms(element, rules, scopeSelector);\n      return _styleTransformer2.default.elementStyles(element, rules, function (rule) {\n        self.applyProperties(rule, properties);\n        if (!_styleSettings.nativeShadow && !StyleUtil.isKeyframesSelector(rule) && rule['cssText']) {\n          // NOTE: keyframe transforms only scope munge animation names, so it\n          // is not necessary to apply them in ShadowDOM.\n          self.applyKeyframeTransforms(rule, keyframeTransforms);\n          self._scopeSelector(rule, hostRx, hostSelector, scopeSelector);\n        }\n      });\n    }\n\n    /**\n     * @param {Element} element\n     * @param {StyleNode} rules\n     * @param {string} scopeSelector\n     * @return {Object}\n     */\n\n  }, {\n    key: '_elementKeyframeTransforms',\n    value: function _elementKeyframeTransforms(element, rules, scopeSelector) {\n      var keyframesRules = rules._keyframes;\n      var keyframeTransforms = {};\n      if (!_styleSettings.nativeShadow && keyframesRules) {\n        // For non-ShadowDOM, we transform all known keyframes rules in\n        // advance for the current scope. This allows us to catch keyframes\n        // rules that appear anywhere in the stylesheet:\n        for (var i = 0, keyframesRule = keyframesRules[i]; i < keyframesRules.length; keyframesRule = keyframesRules[++i]) {\n          this._scopeKeyframes(keyframesRule, scopeSelector);\n          keyframeTransforms[keyframesRule['keyframesName']] = this._keyframesRuleTransformer(keyframesRule);\n        }\n      }\n      return keyframeTransforms;\n    }\n\n    // Generate a factory for transforming a chunk of CSS text to handle a\n    // particular scoped keyframes rule.\n    /**\n     * @param {StyleNode} keyframesRule\n     * @return {function(string):string}\n     */\n\n  }, {\n    key: '_keyframesRuleTransformer',\n    value: function _keyframesRuleTransformer(keyframesRule) {\n      return function (cssText) {\n        return cssText.replace(keyframesRule.keyframesNameRx, keyframesRule.transformedKeyframesName);\n      };\n    }\n\n    /**\n     * Transforms `@keyframes` names to be unique for the current host.\n     * Example: @keyframes foo-anim -> @keyframes foo-anim-x-foo-0\n     *\n     * @param {StyleNode} rule\n     * @param {string} scopeId\n     */\n\n  }, {\n    key: '_scopeKeyframes',\n    value: function _scopeKeyframes(rule, scopeId) {\n      rule.keyframesNameRx = new RegExp(rule['keyframesName'], 'g');\n      rule.transformedKeyframesName = rule['keyframesName'] + '-' + scopeId;\n      rule.transformedSelector = rule.transformedSelector || rule['selector'];\n      rule['selector'] = rule.transformedSelector.replace(rule['keyframesName'], rule.transformedKeyframesName);\n    }\n\n    // Strategy: x scope shim a selector e.g. to scope `.x-foo-42` (via classes):\n    // non-host selector: .a.x-foo -> .x-foo-42 .a.x-foo\n    // host selector: x-foo.wide -> .x-foo-42.wide\n    // note: we use only the scope class (.x-foo-42) and not the hostSelector\n    // (x-foo) to scope :host rules; this helps make property host rules\n    // have low specificity. They are overrideable by class selectors but,\n    // unfortunately, not by type selectors (e.g. overriding via\n    // `.special` is ok, but not by `x-foo`).\n    /**\n     * @param {StyleNode} rule\n     * @param {RegExp} hostRx\n     * @param {string} hostSelector\n     * @param {string} scopeId\n     */\n\n  }, {\n    key: '_scopeSelector',\n    value: function _scopeSelector(rule, hostRx, hostSelector, scopeId) {\n      rule.transformedSelector = rule.transformedSelector || rule['selector'];\n      var selector = rule.transformedSelector;\n      var scope = '.' + scopeId;\n      var parts = selector.split(',');\n      for (var i = 0, l = parts.length, p; i < l && (p = parts[i]); i++) {\n        parts[i] = p.match(hostRx) ? p.replace(hostSelector, scope) : scope + ' ' + p;\n      }\n      rule['selector'] = parts.join(',');\n    }\n\n    /**\n     * @param {Element} element\n     * @param {string} selector\n     * @param {string} old\n     */\n\n  }, {\n    key: 'applyElementScopeSelector',\n    value: function applyElementScopeSelector(element, selector, old) {\n      var c = element.getAttribute('class') || '';\n      var v = c;\n      if (old) {\n        v = c.replace(new RegExp('\\\\s*' + XSCOPE_NAME + '\\\\s*' + old + '\\\\s*', 'g'), ' ');\n      }\n      v += (v ? ' ' : '') + XSCOPE_NAME + ' ' + selector;\n      if (c !== v) {\n        StyleUtil.setElementClassRaw(element, v);\n      }\n    }\n\n    /**\n     * @param {HTMLElement} element\n     * @param {Object} properties\n     * @param {string} selector\n     * @param {HTMLStyleElement} style\n     * @return {HTMLStyleElement}\n     */\n\n  }, {\n    key: 'applyElementStyle',\n    value: function applyElementStyle(element, properties, selector, style) {\n      // calculate cssText to apply\n      var cssText = style ? style.textContent || '' : this.transformStyles(element, properties, selector);\n      // if shady and we have a cached style that is not style, decrement\n      var styleInfo = _styleInfo2.default.get(element);\n      var s = styleInfo.customStyle;\n      if (s && !_styleSettings.nativeShadow && s !== style) {\n        s['_useCount']--;\n        if (s['_useCount'] <= 0 && s.parentNode) {\n          s.parentNode.removeChild(s);\n        }\n      }\n      // apply styling always under native or if we generated style\n      // or the cached style is not in document(!)\n      if (_styleSettings.nativeShadow) {\n        // update existing style only under native\n        if (styleInfo.customStyle) {\n          styleInfo.customStyle.textContent = cssText;\n          style = styleInfo.customStyle;\n          // otherwise, if we have css to apply, do so\n        } else if (cssText) {\n          // apply css after the scope style of the element to help with\n          // style precedence rules.\n          style = StyleUtil.applyCss(cssText, selector, element.shadowRoot, styleInfo.placeholder);\n        }\n      } else {\n        // shady and no cache hit\n        if (!style) {\n          // apply css after the scope style of the element to help with\n          // style precedence rules.\n          if (cssText) {\n            style = StyleUtil.applyCss(cssText, selector, null, styleInfo.placeholder);\n          }\n          // shady and cache hit but not in document\n        } else if (!style.parentNode) {\n          if (IS_IE && cssText.indexOf('@media') > -1) {\n            // @media rules may be stale in IE 10 and 11\n            // refresh the text content of the style to revalidate them.\n            style.textContent = cssText;\n          }\n          StyleUtil.applyStyle(style, null, styleInfo.placeholder);\n        }\n      }\n      // ensure this style is our custom style and increment its use count.\n      if (style) {\n        style['_useCount'] = style['_useCount'] || 0;\n        // increment use count if we changed styles\n        if (styleInfo.customStyle != style) {\n          style['_useCount']++;\n        }\n        styleInfo.customStyle = style;\n      }\n      return style;\n    }\n\n    /**\n     * @param {Element} style\n     * @param {Object} properties\n     */\n\n  }, {\n    key: 'applyCustomStyle',\n    value: function applyCustomStyle(style, properties) {\n      var rules = StyleUtil.rulesForStyle( /** @type {HTMLStyleElement} */style);\n      var self = this;\n      style.textContent = StyleUtil.toCssText(rules, function ( /** StyleNode */rule) {\n        var css = rule['cssText'] = rule['parsedCssText'];\n        if (rule.propertyInfo && rule.propertyInfo.cssText) {\n          // remove property assignments\n          // so next function isn't confused\n          // NOTE: we have 3 categories of css:\n          // (1) normal properties,\n          // (2) custom property assignments (--foo: red;),\n          // (3) custom property usage: border: var(--foo); @apply(--foo);\n          // In elements, 1 and 3 are separated for efficiency; here they\n          // are not and this makes this case unique.\n          css = (0, _cssParse.removeCustomPropAssignment)( /** @type {string} */css);\n          // replace with reified properties, scenario is same as mixin\n          rule['cssText'] = self.valueForProperties(css, properties);\n        }\n      });\n    }\n  }, {\n    key: 'XSCOPE_NAME',\n    get: function get() {\n      return XSCOPE_NAME;\n    }\n  }]);\n\n  return StyleProperties;\n}();\n\n/**\n * @param {number} n\n * @param {Array<number>} bits\n */\n\n\nfunction addToBitMask(n, bits) {\n  var o = parseInt(n / 32, 10);\n  var v = 1 << n % 32;\n  bits[o] = (bits[o] || 0) | v;\n}\n\nexports.default = new StyleProperties();\n\n/***/ }),\n/* 53 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/**\n@license\nCopyright (c) 2017 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _styleUtil = __webpack_require__(3);\n\nvar _styleSettings = __webpack_require__(1);\n\n/** @type {Object<string, !Node>} */\nvar placeholderMap = {};\n\n/**\n * @const {CustomElementRegistry}\n */\nvar ce = window['customElements'];\nif (ce && !_styleSettings.nativeShadow) {\n  /**\n   * @const {function(this:CustomElementRegistry, string,function(new:HTMLElement),{extends: string}=)}\n   */\n  var origDefine = ce['define'];\n  /**\n   * @param {string} name\n   * @param {function(new:HTMLElement)} clazz\n   * @param {{extends: string}=} options\n   * @return {function(new:HTMLElement)}\n   */\n  var wrappedDefine = function wrappedDefine(name, clazz, options) {\n    placeholderMap[name] = (0, _styleUtil.applyStylePlaceHolder)(name);\n    return origDefine.call( /** @type {!CustomElementRegistry} */ce, name, clazz, options);\n  };\n  ce['define'] = wrappedDefine;\n}\n\nexports.default = placeholderMap;\n\n/***/ }),\n/* 54 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/**\n@license\nCopyright (c) 2017 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar StyleCache = function () {\n  function StyleCache() {\n    var typeMax = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 100;\n\n    _classCallCheck(this, StyleCache);\n\n    // map element name -> [{properties, styleElement, scopeSelector}]\n    this.cache = {};\n    this.typeMax = typeMax;\n  }\n\n  _createClass(StyleCache, [{\n    key: '_validate',\n    value: function _validate(cacheEntry, properties, ownPropertyNames) {\n      for (var idx = 0; idx < ownPropertyNames.length; idx++) {\n        var pn = ownPropertyNames[idx];\n        if (cacheEntry.properties[pn] !== properties[pn]) {\n          return false;\n        }\n      }\n      return true;\n    }\n  }, {\n    key: 'store',\n    value: function store(tagname, properties, styleElement, scopeSelector) {\n      var list = this.cache[tagname] || [];\n      list.push({ properties: properties, styleElement: styleElement, scopeSelector: scopeSelector });\n      if (list.length > this.typeMax) {\n        list.shift();\n      }\n      this.cache[tagname] = list;\n    }\n  }, {\n    key: 'fetch',\n    value: function fetch(tagname, properties, ownPropertyNames) {\n      var list = this.cache[tagname];\n      if (!list) {\n        return;\n      }\n      // reverse list for most-recent lookups\n      for (var idx = list.length - 1; idx >= 0; idx--) {\n        var entry = list[idx];\n        if (this._validate(entry, properties, ownPropertyNames)) {\n          return entry;\n        }\n      }\n    }\n  }]);\n\n  return StyleCache;\n}();\n\nexports.default = StyleCache;\n\n/***/ }),\n/* 55 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/**\n@license\nCopyright (c) 2017 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.flush = undefined;\n\nvar _styleSettings = __webpack_require__(1);\n\nvar _styleTransformer = __webpack_require__(8);\n\nvar _styleTransformer2 = _interopRequireDefault(_styleTransformer);\n\nvar _styleUtil = __webpack_require__(3);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar flush = exports.flush = function flush() {};\n\n/**\n * @param {HTMLElement} element\n * @return {!Array<string>}\n */\nfunction getClasses(element) {\n  var classes = [];\n  if (element.classList) {\n    classes = Array.from(element.classList);\n  } else if (element instanceof window['SVGElement'] && element.hasAttribute('class')) {\n    classes = element.getAttribute('class').split(/\\s+/);\n  }\n  return classes;\n}\n\n/**\n * @param {HTMLElement} element\n * @return {string}\n */\nfunction getCurrentScope(element) {\n  var classes = getClasses(element);\n  var idx = classes.indexOf(_styleTransformer2.default.SCOPE_NAME);\n  if (idx > -1) {\n    return classes[idx + 1];\n  }\n  return '';\n}\n\n/**\n * @param {Array<MutationRecord|null>|null} mxns\n */\nfunction handler(mxns) {\n  for (var x = 0; x < mxns.length; x++) {\n    var mxn = mxns[x];\n    if (mxn.target === document.documentElement || mxn.target === document.head) {\n      continue;\n    }\n    for (var i = 0; i < mxn.addedNodes.length; i++) {\n      var n = mxn.addedNodes[i];\n      if (n.nodeType !== Node.ELEMENT_NODE) {\n        continue;\n      }\n      n = /** @type {HTMLElement} */n; // eslint-disable-line no-self-assign\n      var root = n.getRootNode();\n      var currentScope = getCurrentScope(n);\n      // node was scoped, but now is in document\n      if (currentScope && root === n.ownerDocument) {\n        _styleTransformer2.default.dom(n, currentScope, true);\n      } else if (root.nodeType === Node.DOCUMENT_FRAGMENT_NODE) {\n        var newScope = void 0;\n        var host = /** @type {ShadowRoot} */root.host;\n        // element may no longer be in a shadowroot\n        if (!host) {\n          continue;\n        }\n        newScope = (0, _styleUtil.getIsExtends)(host).is;\n        if (currentScope === newScope) {\n          // make sure all the subtree elements are scoped correctly\n          var unscoped = window['ShadyDOM']['nativeMethods']['querySelectorAll'].call(n, ':not(.' + _styleTransformer2.default.SCOPE_NAME + ')');\n          for (var j = 0; j < unscoped.length; j++) {\n            _styleTransformer2.default.element(unscoped[j], currentScope);\n          }\n          continue;\n        }\n        if (currentScope) {\n          _styleTransformer2.default.dom(n, currentScope, true);\n        }\n        _styleTransformer2.default.dom(n, newScope);\n      }\n    }\n  }\n}\n\nif (!_styleSettings.nativeShadow) {\n  var observer = new MutationObserver(handler);\n  var start = function start(node) {\n    observer.observe(node, { childList: true, subtree: true });\n  };\n  var nativeCustomElements = window['customElements'] && !window['customElements']['polyfillWrapFlushCallback'];\n  // need to start immediately with native custom elements\n  // TODO(dfreedm): with polyfilled HTMLImports and native custom elements\n  // excessive mutations may be observed; this can be optimized via cooperation\n  // with the HTMLImports polyfill.\n  if (nativeCustomElements) {\n    start(document);\n  } else {\n    var delayedStart = function delayedStart() {\n      start(document.body);\n    };\n    // use polyfill timing if it's available\n    if (window['HTMLImports']) {\n      window['HTMLImports']['whenReady'](delayedStart);\n      // otherwise push beyond native imports being ready\n      // which requires RAF + readystate interactive.\n    } else {\n      requestAnimationFrame(function () {\n        if (document.readyState === 'loading') {\n          var listener = function listener() {\n            delayedStart();\n            document.removeEventListener('readystatechange', listener);\n          };\n          document.addEventListener('readystatechange', listener);\n        } else {\n          delayedStart();\n        }\n      });\n    }\n  }\n\n  exports.flush = flush = function flush() {\n    handler(observer.takeRecords());\n  };\n}\n\n/***/ }),\n/* 56 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/**\n@license\nCopyright (c) 2017 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.invalidate = invalidate;\nexports.invalidateTemplate = invalidateTemplate;\nexports.isValid = isValid;\nexports.templateIsValid = templateIsValid;\nexports.isValidating = isValidating;\nexports.templateIsValidating = templateIsValidating;\nexports.startValidating = startValidating;\nexports.startValidatingTemplate = startValidatingTemplate;\nexports.elementsAreInvalid = elementsAreInvalid;\n\nvar _templateMap = __webpack_require__(16);\n\nvar _templateMap2 = _interopRequireDefault(_templateMap);\n\nvar _cssParse = __webpack_require__(2);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n// eslint-disable-line no-unused-vars\n\n/*\n * Utilities for handling invalidating apply-shim mixins for a given template.\n *\n * The invalidation strategy involves keeping track of the \"current\" version of a template's mixins, and updating that count when a mixin is invalidated.\n * The template\n */\n\n/** @const {string} */\nvar CURRENT_VERSION = '_applyShimCurrentVersion';\n\n/** @const {string} */\nvar NEXT_VERSION = '_applyShimNextVersion';\n\n/** @const {string} */\nvar VALIDATING_VERSION = '_applyShimValidatingVersion';\n\n/**\n * @const {Promise<void>}\n */\nvar promise = Promise.resolve();\n\n/**\n * @param {string} elementName\n */\nfunction invalidate(elementName) {\n  var template = _templateMap2.default[elementName];\n  if (template) {\n    invalidateTemplate(template);\n  }\n}\n\n/**\n * This function can be called multiple times to mark a template invalid\n * and signal that the style inside must be regenerated.\n *\n * Use `startValidatingTemplate` to begin an asynchronous validation cycle.\n * During that cycle, call `templateIsValidating` to see if the template must\n * be revalidated\n * @param {HTMLTemplateElement} template\n */\nfunction invalidateTemplate(template) {\n  // default the current version to 0\n  template[CURRENT_VERSION] = template[CURRENT_VERSION] || 0;\n  // ensure the \"validating for\" flag exists\n  template[VALIDATING_VERSION] = template[VALIDATING_VERSION] || 0;\n  // increment the next version\n  template[NEXT_VERSION] = (template[NEXT_VERSION] || 0) + 1;\n}\n\n/**\n * @param {string} elementName\n * @return {boolean}\n */\nfunction isValid(elementName) {\n  var template = _templateMap2.default[elementName];\n  if (template) {\n    return templateIsValid(template);\n  }\n  return true;\n}\n\n/**\n * @param {HTMLTemplateElement} template\n * @return {boolean}\n */\nfunction templateIsValid(template) {\n  return template[CURRENT_VERSION] === template[NEXT_VERSION];\n}\n\n/**\n * @param {string} elementName\n * @return {boolean}\n */\nfunction isValidating(elementName) {\n  var template = _templateMap2.default[elementName];\n  if (template) {\n    return templateIsValidating(template);\n  }\n  return false;\n}\n\n/**\n * Returns true if the template is currently invalid and `startValidating` has been called since the last invalidation.\n * If false, the template must be validated.\n * @param {HTMLTemplateElement} template\n * @return {boolean}\n */\nfunction templateIsValidating(template) {\n  return !templateIsValid(template) && template[VALIDATING_VERSION] === template[NEXT_VERSION];\n}\n\n/**\n * the template is marked as `validating` for one microtask so that all instances\n * found in the tree crawl of `applyStyle` will update themselves,\n * but the template will only be updated once.\n * @param {string} elementName\n*/\nfunction startValidating(elementName) {\n  var template = _templateMap2.default[elementName];\n  startValidatingTemplate(template);\n}\n\n/**\n * Begin an asynchronous invalidation cycle.\n * This should be called after every validation of a template\n *\n * After one microtask, the template will be marked as valid until the next call to `invalidateTemplate`\n * @param {HTMLTemplateElement} template\n */\nfunction startValidatingTemplate(template) {\n  // remember that the current \"next version\" is the reason for this validation cycle\n  template[VALIDATING_VERSION] = template[NEXT_VERSION];\n  // however, there only needs to be one async task to clear the counters\n  if (!template._validating) {\n    template._validating = true;\n    promise.then(function () {\n      // sync the current version to let future invalidations cause a refresh cycle\n      template[CURRENT_VERSION] = template[NEXT_VERSION];\n      template._validating = false;\n    });\n  }\n}\n\n/**\n * @return {boolean}\n */\nfunction elementsAreInvalid() {\n  for (var elementName in _templateMap2.default) {\n    var template = _templateMap2.default[elementName];\n    if (!templateIsValid(template)) {\n      return true;\n    }\n  }\n  return false;\n}\n\n/***/ }),\n/* 57 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/**\n@license\nCopyright (c) 2017 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.updateNativeProperties = updateNativeProperties;\nexports.getComputedStyleValue = getComputedStyleValue;\nexports.detectMixin = detectMixin;\n\nvar _commonRegex = __webpack_require__(9);\n\n/**\n * @param {Element} element\n * @param {Object=} properties\n */\nfunction updateNativeProperties(element, properties) {\n  // remove previous properties\n  for (var p in properties) {\n    // NOTE: for bc with shim, don't apply null values.\n    if (p === null) {\n      element.style.removeProperty(p);\n    } else {\n      element.style.setProperty(p, properties[p]);\n    }\n  }\n}\n\n/**\n * @param {Element} element\n * @param {string} property\n * @return {string}\n */\nfunction getComputedStyleValue(element, property) {\n  /**\n   * @const {string}\n   */\n  var value = window.getComputedStyle(element).getPropertyValue(property);\n  if (!value) {\n    return '';\n  } else {\n    return value.trim();\n  }\n}\n\n/**\n * return true if `cssText` contains a mixin definition or consumption\n * @param {string} cssText\n * @return {boolean}\n */\nfunction detectMixin(cssText) {\n  var has = _commonRegex.MIXIN_MATCH.test(cssText) || _commonRegex.VAR_ASSIGN.test(cssText);\n  // reset state of the regexes\n  _commonRegex.MIXIN_MATCH.lastIndex = 0;\n  _commonRegex.VAR_ASSIGN.lastIndex = 0;\n  return has;\n}\n\n/***/ }),\n/* 58 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/**\n@license\nCopyright (c) 2017 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.CustomStyleInterfaceInterface = exports.CustomStyleProvider = undefined;\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _documentWait = __webpack_require__(17);\n\nvar _documentWait2 = _interopRequireDefault(_documentWait);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/**\n * @typedef {HTMLStyleElement | {getStyle: function():HTMLStyleElement}}\n */\nvar CustomStyleProvider = exports.CustomStyleProvider = void 0;\n\nvar SEEN_MARKER = '__seenByShadyCSS';\nvar CACHED_STYLE = '__shadyCSSCachedStyle';\n\n/** @type {?function(!HTMLStyleElement)} */\nvar transformFn = null;\n\n/** @type {?function()} */\nvar validateFn = null;\n\n/**\nThis interface is provided to add document-level <style> elements to ShadyCSS for processing.\nThese styles must be processed by ShadyCSS to simulate ShadowRoot upper-bound encapsulation from outside styles\nIn addition, these styles may also need to be processed for @apply rules and CSS Custom Properties\n\nTo add document-level styles to ShadyCSS, one can call `ShadyCSS.addDocumentStyle(styleElement)` or `ShadyCSS.addDocumentStyle({getStyle: () => styleElement})`\n\nIn addition, if the process used to discover document-level styles can be synchronously flushed, one should set `ShadyCSS.documentStyleFlush`.\nThis function will be called when calculating styles.\n\nAn example usage of the document-level styling api can be found in `examples/document-style-lib.js`\n\n@unrestricted\n*/\n\nvar CustomStyleInterface = function () {\n  function CustomStyleInterface() {\n    _classCallCheck(this, CustomStyleInterface);\n\n    /** @type {!Array<!CustomStyleProvider>} */\n    this['customStyles'] = [];\n    this['enqueued'] = false;\n  }\n  /**\n   * Queue a validation for new custom styles to batch style recalculations\n   */\n\n\n  _createClass(CustomStyleInterface, [{\n    key: 'enqueueDocumentValidation',\n    value: function enqueueDocumentValidation() {\n      if (this['enqueued'] || !validateFn) {\n        return;\n      }\n      this['enqueued'] = true;\n      (0, _documentWait2.default)(validateFn);\n    }\n    /**\n     * @param {!HTMLStyleElement} style\n     */\n\n  }, {\n    key: 'addCustomStyle',\n    value: function addCustomStyle(style) {\n      if (!style[SEEN_MARKER]) {\n        style[SEEN_MARKER] = true;\n        this['customStyles'].push(style);\n        this.enqueueDocumentValidation();\n      }\n    }\n    /**\n     * @param {!CustomStyleProvider} customStyle\n     * @return {HTMLStyleElement}\n     */\n\n  }, {\n    key: 'getStyleForCustomStyle',\n    value: function getStyleForCustomStyle(customStyle) {\n      if (customStyle[CACHED_STYLE]) {\n        return customStyle[CACHED_STYLE];\n      }\n      var style = void 0;\n      if (customStyle['getStyle']) {\n        style = customStyle['getStyle']();\n      } else {\n        style = customStyle;\n      }\n      return style;\n    }\n    /**\n     * @return {!Array<!CustomStyleProvider>}\n     */\n\n  }, {\n    key: 'processStyles',\n    value: function processStyles() {\n      var cs = this['customStyles'];\n      for (var i = 0; i < cs.length; i++) {\n        var customStyle = cs[i];\n        if (customStyle[CACHED_STYLE]) {\n          continue;\n        }\n        var style = this.getStyleForCustomStyle(customStyle);\n        if (style) {\n          // HTMLImports polyfill may have cloned the style into the main document,\n          // which is referenced with __appliedElement.\n          var styleToTransform = /** @type {!HTMLStyleElement} */style['__appliedElement'] || style;\n          if (transformFn) {\n            transformFn(styleToTransform);\n          }\n          customStyle[CACHED_STYLE] = styleToTransform;\n        }\n      }\n      return cs;\n    }\n  }]);\n\n  return CustomStyleInterface;\n}();\n\nexports.default = CustomStyleInterface;\n\n\nCustomStyleInterface.prototype['addCustomStyle'] = CustomStyleInterface.prototype.addCustomStyle;\nCustomStyleInterface.prototype['getStyleForCustomStyle'] = CustomStyleInterface.prototype.getStyleForCustomStyle;\nCustomStyleInterface.prototype['processStyles'] = CustomStyleInterface.prototype.processStyles;\n\nObject.defineProperties(CustomStyleInterface.prototype, {\n  'transformCallback': {\n    /** @return {?function(!HTMLStyleElement)} */\n    get: function get() {\n      return transformFn;\n    },\n\n    /** @param {?function(!HTMLStyleElement)} fn */\n    set: function set(fn) {\n      transformFn = fn;\n    }\n  },\n  'validateCallback': {\n    /** @return {?function()} */\n    get: function get() {\n      return validateFn;\n    },\n\n    /**\n     * @param {?function()} fn\n     * @this {CustomStyleInterface}\n     */\n    set: function set(fn) {\n      var needsEnqueue = false;\n      if (!validateFn) {\n        needsEnqueue = true;\n      }\n      validateFn = fn;\n      if (needsEnqueue) {\n        this.enqueueDocumentValidation();\n      }\n    }\n  }\n});\n\n/** @typedef {{\n * customStyles: !Array<!CustomStyleProvider>,\n * addCustomStyle: function(!CustomStyleProvider),\n * getStyleForCustomStyle: function(!CustomStyleProvider): HTMLStyleElement,\n * findStyles: function(),\n * transformCallback: ?function(!HTMLStyleElement),\n * validateCallback: ?function()\n * }}\n */\nvar CustomStyleInterfaceInterface = exports.CustomStyleInterfaceInterface = void 0;\n\n/***/ })\n/******/ ]);\n\n\n// WEBPACK FOOTER //\n// shady.js"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 49);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap ed4ebd2b7b4a1bb5d91d","/**\n@license\nCopyright (c) 2017 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\n'use strict';\n\nexport let nativeShadow = !(window['ShadyDOM'] && window['ShadyDOM']['inUse']);\nexport let nativeCssVariables;\n\n/**\n * @param {(ShadyCSSOptions | ShadyCSSInterface)=} settings\n */\nfunction calcCssVariables(settings) {\n  if (settings && settings['shimcssproperties']) {\n    nativeCssVariables = false;\n  } else {\n    // chrome 49 has semi-working css vars, check if box-shadow works\n    // safari 9.1 has a recalc bug: https://bugs.webkit.org/show_bug.cgi?id=155782\n    // However, shim css custom properties are only supported with ShadyDOM enabled,\n    // so fall back on native if we do not detect ShadyDOM\n    // Edge 15: custom properties used in ::before and ::after will also be used in the parent element\n    // https://developer.microsoft.com/en-us/microsoft-edge/platform/issues/12414257/\n    nativeCssVariables = nativeShadow || Boolean(!navigator.userAgent.match(/AppleWebKit\\/601|Edge\\/15/) &&\n      window.CSS && CSS.supports && CSS.supports('box-shadow', '0 0 0 var(--foo)'));\n  }\n}\n\nif (window.ShadyCSS && window.ShadyCSS.nativeCss !== undefined) {\n  nativeCssVariables = window.ShadyCSS.nativeCss;\n} else if (window.ShadyCSS) {\n  calcCssVariables(window.ShadyCSS);\n  // reset window variable to let ShadyCSS API take its place\n  window.ShadyCSS = undefined;\n} else {\n  calcCssVariables(window['WebComponents'] && window['WebComponents']['flags']);\n}\n\n\n// WEBPACK FOOTER //\n// ../node_modules/@webcomponents/shadycss/src/style-settings.js","/**\n@license\nCopyright (c) 2017 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\n/*\nExtremely simple css parser. Intended to be not more than what we need\nand definitely not necessarily correct =).\n*/\n\n'use strict';\n\n/** @unrestricted */\nclass StyleNode {\n  constructor() {\n    /** @type {number} */\n    this['start'] = 0;\n    /** @type {number} */\n    this['end'] = 0;\n    /** @type {StyleNode} */\n    this['previous'] = null;\n    /** @type {StyleNode} */\n    this['parent'] = null;\n    /** @type {Array<StyleNode>} */\n    this['rules'] = null;\n    /** @type {string} */\n    this['parsedCssText'] = '';\n    /** @type {string} */\n    this['cssText'] = '';\n    /** @type {boolean} */\n    this['atRule'] = false;\n    /** @type {number} */\n    this['type'] = 0;\n    /** @type {string} */\n    this['keyframesName'] = '';\n    /** @type {string} */\n    this['selector'] = '';\n    /** @type {string} */\n    this['parsedSelector'] = '';\n  }\n}\n\nexport {StyleNode}\n\n// given a string of css, return a simple rule tree\n/**\n * @param {string} text\n * @return {StyleNode}\n */\nexport function parse(text) {\n  text = clean(text);\n  return parseCss(lex(text), text);\n}\n\n// remove stuff we don't care about that may hinder parsing\n/**\n * @param {string} cssText\n * @return {string}\n */\nfunction clean(cssText) {\n  return cssText.replace(RX.comments, '').replace(RX.port, '');\n}\n\n// super simple {...} lexer that returns a node tree\n/**\n * @param {string} text\n * @return {StyleNode}\n */\nfunction lex(text) {\n  let root = new StyleNode();\n  root['start'] = 0;\n  root['end'] = text.length\n  let n = root;\n  for (let i = 0, l = text.length; i < l; i++) {\n    if (text[i] === OPEN_BRACE) {\n      if (!n['rules']) {\n        n['rules'] = [];\n      }\n      let p = n;\n      let previous = p['rules'][p['rules'].length - 1] || null;\n      n = new StyleNode();\n      n['start'] = i + 1;\n      n['parent'] = p;\n      n['previous'] = previous;\n      p['rules'].push(n);\n    } else if (text[i] === CLOSE_BRACE) {\n      n['end'] = i + 1;\n      n = n['parent'] || root;\n    }\n  }\n  return root;\n}\n\n// add selectors/cssText to node tree\n/**\n * @param {StyleNode} node\n * @param {string} text\n * @return {StyleNode}\n */\nfunction parseCss(node, text) {\n  let t = text.substring(node['start'], node['end'] - 1);\n  node['parsedCssText'] = node['cssText'] = t.trim();\n  if (node['parent']) {\n    let ss = node['previous'] ? node['previous']['end'] : node['parent']['start'];\n    t = text.substring(ss, node['start'] - 1);\n    t = _expandUnicodeEscapes(t);\n    t = t.replace(RX.multipleSpaces, ' ');\n    // TODO(sorvell): ad hoc; make selector include only after last ;\n    // helps with mixin syntax\n    t = t.substring(t.lastIndexOf(';') + 1);\n    let s = node['parsedSelector'] = node['selector'] = t.trim();\n    node['atRule'] = (s.indexOf(AT_START) === 0);\n    // note, support a subset of rule types...\n    if (node['atRule']) {\n      if (s.indexOf(MEDIA_START) === 0) {\n        node['type'] = types.MEDIA_RULE;\n      } else if (s.match(RX.keyframesRule)) {\n        node['type'] = types.KEYFRAMES_RULE;\n        node['keyframesName'] =\n          node['selector'].split(RX.multipleSpaces).pop();\n      }\n    } else {\n      if (s.indexOf(VAR_START) === 0) {\n        node['type'] = types.MIXIN_RULE;\n      } else {\n        node['type'] = types.STYLE_RULE;\n      }\n    }\n  }\n  let r$ = node['rules'];\n  if (r$) {\n    for (let i = 0, l = r$.length, r;\n      (i < l) && (r = r$[i]); i++) {\n      parseCss(r, text);\n    }\n  }\n  return node;\n}\n\n/**\n * conversion of sort unicode escapes with spaces like `\\33 ` (and longer) into\n * expanded form that doesn't require trailing space `\\000033`\n * @param {string} s\n * @return {string}\n */\nfunction _expandUnicodeEscapes(s) {\n  return s.replace(/\\\\([0-9a-f]{1,6})\\s/gi, function() {\n    let code = arguments[1],\n      repeat = 6 - code.length;\n    while (repeat--) {\n      code = '0' + code;\n    }\n    return '\\\\' + code;\n  });\n}\n\n/**\n * stringify parsed css.\n * @param {StyleNode} node\n * @param {boolean=} preserveProperties\n * @param {string=} text\n * @return {string}\n */\nexport function stringify(node, preserveProperties, text = '') {\n  // calc rule cssText\n  let cssText = '';\n  if (node['cssText'] || node['rules']) {\n    let r$ = node['rules'];\n    if (r$ && !_hasMixinRules(r$)) {\n      for (let i = 0, l = r$.length, r;\n        (i < l) && (r = r$[i]); i++) {\n        cssText = stringify(r, preserveProperties, cssText);\n      }\n    } else {\n      cssText = preserveProperties ? node['cssText'] :\n        removeCustomProps(node['cssText']);\n      cssText = cssText.trim();\n      if (cssText) {\n        cssText = '  ' + cssText + '\\n';\n      }\n    }\n  }\n  // emit rule if there is cssText\n  if (cssText) {\n    if (node['selector']) {\n      text += node['selector'] + ' ' + OPEN_BRACE + '\\n';\n    }\n    text += cssText;\n    if (node['selector']) {\n      text += CLOSE_BRACE + '\\n\\n';\n    }\n  }\n  return text;\n}\n\n/**\n * @param {Array<StyleNode>} rules\n * @return {boolean}\n */\nfunction _hasMixinRules(rules) {\n  let r = rules[0];\n  return Boolean(r) && Boolean(r['selector']) && r['selector'].indexOf(VAR_START) === 0;\n}\n\n/**\n * @param {string} cssText\n * @return {string}\n */\nfunction removeCustomProps(cssText) {\n  cssText = removeCustomPropAssignment(cssText);\n  return removeCustomPropApply(cssText);\n}\n\n/**\n * @param {string} cssText\n * @return {string}\n */\nexport function removeCustomPropAssignment(cssText) {\n  return cssText\n    .replace(RX.customProp, '')\n    .replace(RX.mixinProp, '');\n}\n\n/**\n * @param {string} cssText\n * @return {string}\n */\nfunction removeCustomPropApply(cssText) {\n  return cssText\n    .replace(RX.mixinApply, '')\n    .replace(RX.varApply, '');\n}\n\n/** @enum {number} */\nexport const types = {\n  STYLE_RULE: 1,\n  KEYFRAMES_RULE: 7,\n  MEDIA_RULE: 4,\n  MIXIN_RULE: 1000\n}\n\nconst OPEN_BRACE = '{';\nconst CLOSE_BRACE = '}';\n\n// helper regexp's\nconst RX = {\n  comments: /\\/\\*[^*]*\\*+([^/*][^*]*\\*+)*\\//gim,\n  port: /@import[^;]*;/gim,\n  customProp: /(?:^[^;\\-\\s}]+)?--[^;{}]*?:[^{};]*?(?:[;\\n]|$)/gim,\n  mixinProp: /(?:^[^;\\-\\s}]+)?--[^;{}]*?:[^{};]*?{[^}]*?}(?:[;\\n]|$)?/gim,\n  mixinApply: /@apply\\s*\\(?[^);]*\\)?\\s*(?:[;\\n]|$)?/gim,\n  varApply: /[^;:]*?:[^;]*?var\\([^;]*\\)(?:[;\\n]|$)?/gim,\n  keyframesRule: /^@[^\\s]*keyframes/,\n  multipleSpaces: /\\s+/g\n}\n\nconst VAR_START = '--';\nconst MEDIA_START = '@media';\nconst AT_START = '@';\n\n\n\n// WEBPACK FOOTER //\n// ../node_modules/@webcomponents/shadycss/src/css-parse.js","/**\n@license\nCopyright (c) 2017 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\n'use strict';\n\nimport {nativeShadow, nativeCssVariables} from './style-settings.js';\nimport {parse, stringify, types, StyleNode} from './css-parse.js'; // eslint-disable-line no-unused-vars\nimport {MEDIA_MATCH} from './common-regex.js';\n\n/**\n * @param {string|StyleNode} rules\n * @param {function(StyleNode)=} callback\n * @return {string}\n */\nexport function toCssText (rules, callback) {\n  if (!rules) {\n    return '';\n  }\n  if (typeof rules === 'string') {\n    rules = parse(rules);\n  }\n  if (callback) {\n    forEachRule(rules, callback);\n  }\n  return stringify(rules, nativeCssVariables);\n}\n\n/**\n * @param {HTMLStyleElement} style\n * @return {StyleNode}\n */\nexport function rulesForStyle(style) {\n  if (!style['__cssRules'] && style.textContent) {\n    style['__cssRules'] = parse(style.textContent);\n  }\n  return style['__cssRules'] || null;\n}\n\n// Tests if a rule is a keyframes selector, which looks almost exactly\n// like a normal selector but is not (it has nothing to do with scoping\n// for example).\n/**\n * @param {StyleNode} rule\n * @return {boolean}\n */\nexport function isKeyframesSelector(rule) {\n  return Boolean(rule['parent']) &&\n  rule['parent']['type'] === types.KEYFRAMES_RULE;\n}\n\n/**\n * @param {StyleNode} node\n * @param {Function=} styleRuleCallback\n * @param {Function=} keyframesRuleCallback\n * @param {boolean=} onlyActiveRules\n */\nexport function forEachRule(node, styleRuleCallback, keyframesRuleCallback, onlyActiveRules) {\n  if (!node) {\n    return;\n  }\n  let skipRules = false;\n  let type = node['type'];\n  if (onlyActiveRules) {\n    if (type === types.MEDIA_RULE) {\n      let matchMedia = node['selector'].match(MEDIA_MATCH);\n      if (matchMedia) {\n        // if rule is a non matching @media rule, skip subrules\n        if (!window.matchMedia(matchMedia[1]).matches) {\n          skipRules = true;\n        }\n      }\n    }\n  }\n  if (type === types.STYLE_RULE) {\n    styleRuleCallback(node);\n  } else if (keyframesRuleCallback &&\n    type === types.KEYFRAMES_RULE) {\n    keyframesRuleCallback(node);\n  } else if (type === types.MIXIN_RULE) {\n    skipRules = true;\n  }\n  let r$ = node['rules'];\n  if (r$ && !skipRules) {\n    for (let i=0, l=r$.length, r; (i<l) && (r=r$[i]); i++) {\n      forEachRule(r, styleRuleCallback, keyframesRuleCallback, onlyActiveRules);\n    }\n  }\n}\n\n// add a string of cssText to the document.\n/**\n * @param {string} cssText\n * @param {string} moniker\n * @param {Node} target\n * @param {Node} contextNode\n * @return {HTMLStyleElement}\n */\nexport function applyCss(cssText, moniker, target, contextNode) {\n  let style = createScopeStyle(cssText, moniker);\n  applyStyle(style, target, contextNode);\n  return style;\n}\n\n/**\n * @param {string} cssText\n * @param {string} moniker\n * @return {HTMLStyleElement}\n */\nexport function createScopeStyle(cssText, moniker) {\n  let style = /** @type {HTMLStyleElement} */(document.createElement('style'));\n  if (moniker) {\n    style.setAttribute('scope', moniker);\n  }\n  style.textContent = cssText;\n  return style;\n}\n\n/**\n * Track the position of the last added style for placing placeholders\n * @type {Node}\n */\nlet lastHeadApplyNode = null;\n\n// insert a comment node as a styling position placeholder.\n/**\n * @param {string} moniker\n * @return {!Comment}\n */\nexport function applyStylePlaceHolder(moniker) {\n  let placeHolder = document.createComment(' Shady DOM styles for ' +\n    moniker + ' ');\n  let after = lastHeadApplyNode ?\n    lastHeadApplyNode['nextSibling'] : null;\n  let scope = document.head;\n  scope.insertBefore(placeHolder, after || scope.firstChild);\n  lastHeadApplyNode = placeHolder;\n  return placeHolder;\n}\n\n/**\n * @param {HTMLStyleElement} style\n * @param {?Node} target\n * @param {?Node} contextNode\n */\nexport function applyStyle(style, target, contextNode) {\n  target = target || document.head;\n  let after = (contextNode && contextNode.nextSibling) ||\n    target.firstChild;\n  target.insertBefore(style, after);\n  if (!lastHeadApplyNode) {\n    lastHeadApplyNode = style;\n  } else {\n    // only update lastHeadApplyNode if the new style is inserted after the old lastHeadApplyNode\n    let position = style.compareDocumentPosition(lastHeadApplyNode);\n    if (position === Node.DOCUMENT_POSITION_PRECEDING) {\n      lastHeadApplyNode = style;\n    }\n  }\n}\n\n/**\n * @param {string} buildType\n * @return {boolean}\n */\nexport function isTargetedBuild(buildType) {\n  return nativeShadow ? buildType === 'shadow' : buildType === 'shady';\n}\n\n/**\n * @param {Element} element\n * @return {?string}\n */\nexport function getCssBuildType(element) {\n  return element.getAttribute('css-build');\n}\n\n/**\n * Walk from text[start] matching parens and\n * returns position of the outer end paren\n * @param {string} text\n * @param {number} start\n * @return {number}\n */\nfunction findMatchingParen(text, start) {\n  let level = 0;\n  for (let i=start, l=text.length; i < l; i++) {\n    if (text[i] === '(') {\n      level++;\n    } else if (text[i] === ')') {\n      if (--level === 0) {\n        return i;\n      }\n    }\n  }\n  return -1;\n}\n\n/**\n * @param {string} str\n * @param {function(string, string, string, string)} callback\n */\nexport function processVariableAndFallback(str, callback) {\n  // find 'var('\n  let start = str.indexOf('var(');\n  if (start === -1) {\n    // no var?, everything is prefix\n    return callback(str, '', '', '');\n  }\n  //${prefix}var(${inner})${suffix}\n  let end = findMatchingParen(str, start + 3);\n  let inner = str.substring(start + 4, end);\n  let prefix = str.substring(0, start);\n  // suffix may have other variables\n  let suffix = processVariableAndFallback(str.substring(end + 1), callback);\n  let comma = inner.indexOf(',');\n  // value and fallback args should be trimmed to match in property lookup\n  if (comma === -1) {\n    // variable, no fallback\n    return callback(prefix, inner.trim(), '', suffix);\n  }\n  // var(${value},${fallback})\n  let value = inner.substring(0, comma).trim();\n  let fallback = inner.substring(comma + 1).trim();\n  return callback(prefix, value, fallback, suffix);\n}\n\n/**\n * @param {Element} element\n * @param {string} value\n */\nexport function setElementClassRaw(element, value) {\n  // use native setAttribute provided by ShadyDOM when setAttribute is patched\n  if (nativeShadow) {\n    element.setAttribute('class', value);\n  } else {\n    window['ShadyDOM']['nativeMethods']['setAttribute'].call(element, 'class', value);\n  }\n}\n\n/**\n * @param {Element | {is: string, extends: string}} element\n * @return {{is: string, typeExtension: string}}\n */\nexport function getIsExtends(element) {\n  let localName = element['localName'];\n  let is = '', typeExtension = '';\n  /*\n  NOTE: technically, this can be wrong for certain svg elements\n  with `-` in the name like `<font-face>`\n  */\n  if (localName) {\n    if (localName.indexOf('-') > -1) {\n      is = localName;\n    } else {\n      typeExtension = localName;\n      is = (element.getAttribute && element.getAttribute('is')) || '';\n    }\n  } else {\n    is = /** @type {?} */(element).is;\n    typeExtension = /** @type {?} */(element).extends;\n  }\n  return {is, typeExtension};\n}\n\n\n\n// WEBPACK FOOTER //\n// ../node_modules/@webcomponents/shadycss/src/style-util.js","/**\n@license\nCopyright (c) 2017 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\n'use strict';\n\nimport {StyleNode} from './css-parse.js'; // eslint-disable-line no-unused-vars\nimport * as StyleUtil from './style-util.js';\nimport {nativeShadow} from './style-settings.js';\n\n/* Transforms ShadowDOM styling into ShadyDOM styling\n\n* scoping:\n\n  * elements in scope get scoping selector class=\"x-foo-scope\"\n  * selectors re-written as follows:\n\n    div button -> div.x-foo-scope button.x-foo-scope\n\n* :host -> scopeName\n\n* :host(...) -> scopeName...\n\n* ::slotted(...) -> scopeName > ...\n\n* ...:dir(ltr|rtl) -> [dir=\"ltr|rtl\"] ..., ...[dir=\"ltr|rtl\"]\n\n* :host(:dir[rtl]) -> scopeName:dir(rtl) -> [dir=\"rtl\"] scopeName, scopeName[dir=\"rtl\"]\n\n*/\nconst SCOPE_NAME = 'style-scope';\n\nclass StyleTransformer {\n  get SCOPE_NAME() {\n    return SCOPE_NAME;\n  }\n  // Given a node and scope name, add a scoping class to each node\n  // in the tree. This facilitates transforming css into scoped rules.\n  dom(node, scope, shouldRemoveScope) {\n    // one time optimization to skip scoping...\n    if (node['__styleScoped']) {\n      node['__styleScoped'] = null;\n    } else {\n      this._transformDom(node, scope || '', shouldRemoveScope);\n    }\n  }\n\n  _transformDom(node, selector, shouldRemoveScope) {\n    if (node.nodeType === Node.ELEMENT_NODE) {\n      this.element(node, selector, shouldRemoveScope);\n    }\n    let c$ = (node.localName === 'template') ?\n      (node.content || node._content).childNodes :\n      node.children || node.childNodes;\n    if (c$) {\n      for (let i=0; i<c$.length; i++) {\n        this._transformDom(c$[i], selector, shouldRemoveScope);\n      }\n    }\n  }\n\n  element(element, scope, shouldRemoveScope) {\n    // note: if using classes, we add both the general 'style-scope' class\n    // as well as the specific scope. This enables easy filtering of all\n    // `style-scope` elements\n    if (scope) {\n      // note: svg on IE does not have classList so fallback to class\n      if (element.classList) {\n        if (shouldRemoveScope) {\n          element.classList.remove(SCOPE_NAME);\n          element.classList.remove(scope);\n        } else {\n          element.classList.add(SCOPE_NAME);\n          element.classList.add(scope);\n        }\n      } else if (element.getAttribute) {\n        let c = element.getAttribute(CLASS);\n        if (shouldRemoveScope) {\n          if (c) {\n            let newValue = c.replace(SCOPE_NAME, '').replace(scope, '');\n            StyleUtil.setElementClassRaw(element, newValue);\n          }\n        } else {\n          let newValue = (c ? c + ' ' : '') + SCOPE_NAME + ' ' + scope;\n          StyleUtil.setElementClassRaw(element, newValue);\n        }\n      }\n    }\n  }\n\n  elementStyles(element, styleRules, callback) {\n    let cssBuildType = element['__cssBuild'];\n    // no need to shim selectors if settings.useNativeShadow, also\n    // a shady css build will already have transformed selectors\n    // NOTE: This method may be called as part of static or property shimming.\n    // When there is a targeted build it will not be called for static shimming,\n    // but when the property shim is used it is called and should opt out of\n    // static shimming work when a proper build exists.\n    let cssText = '';\n    if (nativeShadow || cssBuildType === 'shady') {\n      cssText = StyleUtil.toCssText(styleRules, callback);\n    } else {\n      let {is, typeExtension} = StyleUtil.getIsExtends(element);\n      cssText = this.css(styleRules, is, typeExtension, callback) + '\\n\\n';\n    }\n    return cssText.trim();\n  }\n\n  // Given a string of cssText and a scoping string (scope), returns\n  // a string of scoped css where each selector is transformed to include\n  // a class created from the scope. ShadowDOM selectors are also transformed\n  // (e.g. :host) to use the scoping selector.\n  css(rules, scope, ext, callback) {\n    let hostScope = this._calcHostScope(scope, ext);\n    scope = this._calcElementScope(scope);\n    let self = this;\n    return StyleUtil.toCssText(rules, function(/** StyleNode */rule) {\n      if (!rule.isScoped) {\n        self.rule(rule, scope, hostScope);\n        rule.isScoped = true;\n      }\n      if (callback) {\n        callback(rule, scope, hostScope);\n      }\n    });\n  }\n\n  _calcElementScope(scope) {\n    if (scope) {\n      return CSS_CLASS_PREFIX + scope;\n    } else {\n      return '';\n    }\n  }\n\n  _calcHostScope(scope, ext) {\n    return ext ? `[is=${scope}]` : scope;\n  }\n\n  rule(rule, scope, hostScope) {\n    this._transformRule(rule, this._transformComplexSelector,\n      scope, hostScope);\n  }\n\n  /**\n   * transforms a css rule to a scoped rule.\n   *\n   * @param {StyleNode} rule\n   * @param {Function} transformer\n   * @param {string=} scope\n   * @param {string=} hostScope\n   */\n  _transformRule(rule, transformer, scope, hostScope) {\n    // NOTE: save transformedSelector for subsequent matching of elements\n    // against selectors (e.g. when calculating style properties)\n    rule['selector'] = rule.transformedSelector =\n      this._transformRuleCss(rule, transformer, scope, hostScope);\n  }\n\n  /**\n   * @param {StyleNode} rule\n   * @param {Function} transformer\n   * @param {string=} scope\n   * @param {string=} hostScope\n   */\n  _transformRuleCss(rule, transformer, scope, hostScope) {\n    let p$ = rule['selector'].split(COMPLEX_SELECTOR_SEP);\n    // we want to skip transformation of rules that appear in keyframes,\n    // because they are keyframe selectors, not element selectors.\n    if (!StyleUtil.isKeyframesSelector(rule)) {\n      for (let i=0, l=p$.length, p; (i<l) && (p=p$[i]); i++) {\n        p$[i] = transformer.call(this, p, scope, hostScope);\n      }\n    }\n    return p$.join(COMPLEX_SELECTOR_SEP);\n  }\n\n  /**\n   * @param {string} selector\n   * @return {string}\n   */\n  _twiddleNthPlus(selector) {\n    return selector.replace(NTH, (m, type, inside) => {\n      if (inside.indexOf('+') > -1) {\n        inside = inside.replace(/\\+/g, '___');\n      } else if (inside.indexOf('___') > -1) {\n        inside = inside.replace(/___/g, '+');\n      }\n      return `:${type}(${inside})`;\n    });\n  }\n\n/**\n * @param {string} selector\n * @param {string} scope\n * @param {string=} hostScope\n */\n  _transformComplexSelector(selector, scope, hostScope) {\n    let stop = false;\n    selector = selector.trim();\n    // Remove spaces inside of selectors like `:nth-of-type` because it confuses SIMPLE_SELECTOR_SEP\n    let isNth = NTH.test(selector);\n    if (isNth) {\n      selector = selector.replace(NTH, (m, type, inner) => `:${type}(${inner.replace(/\\s/g, '')})`)\n      selector = this._twiddleNthPlus(selector);\n    }\n    selector = selector.replace(SLOTTED_START, `${HOST} $1`);\n    selector = selector.replace(SIMPLE_SELECTOR_SEP, (m, c, s) => {\n      if (!stop) {\n        let info = this._transformCompoundSelector(s, c, scope, hostScope);\n        stop = stop || info.stop;\n        c = info.combinator;\n        s = info.value;\n      }\n      return c + s;\n    });\n    if (isNth) {\n      selector = this._twiddleNthPlus(selector);\n    }\n    return selector;\n  }\n\n  _transformCompoundSelector(selector, combinator, scope, hostScope) {\n    // replace :host with host scoping class\n    let slottedIndex = selector.indexOf(SLOTTED);\n    if (selector.indexOf(HOST) >= 0) {\n      selector = this._transformHostSelector(selector, hostScope);\n    // replace other selectors with scoping class\n    } else if (slottedIndex !== 0) {\n      selector = scope ? this._transformSimpleSelector(selector, scope) :\n        selector;\n    }\n    // mark ::slotted() scope jump to replace with descendant selector + arg\n    // also ignore left-side combinator\n    let slotted = false;\n    if (slottedIndex >= 0) {\n      combinator = '';\n      slotted = true;\n    }\n    // process scope jumping selectors up to the scope jump and then stop\n    let stop;\n    if (slotted) {\n      stop = true;\n      if (slotted) {\n        // .zonk ::slotted(.foo) -> .zonk.scope > .foo\n        selector = selector.replace(SLOTTED_PAREN, (m, paren) => ` > ${paren}`);\n      }\n    }\n    selector = selector.replace(DIR_PAREN, (m, before, dir) =>\n      `[dir=\"${dir}\"] ${before}, ${before}[dir=\"${dir}\"]`);\n    return {value: selector, combinator, stop};\n  }\n\n  _transformSimpleSelector(selector, scope) {\n    let p$ = selector.split(PSEUDO_PREFIX);\n    p$[0] += scope;\n    return p$.join(PSEUDO_PREFIX);\n  }\n\n  // :host(...) -> scopeName...\n  _transformHostSelector(selector, hostScope) {\n    let m = selector.match(HOST_PAREN);\n    let paren = m && m[2].trim() || '';\n    if (paren) {\n      if (!paren[0].match(SIMPLE_SELECTOR_PREFIX)) {\n        // paren starts with a type selector\n        let typeSelector = paren.split(SIMPLE_SELECTOR_PREFIX)[0];\n        // if the type selector is our hostScope then avoid pre-pending it\n        if (typeSelector === hostScope) {\n          return paren;\n        // otherwise, this selector should not match in this scope so\n        // output a bogus selector.\n        } else {\n          return SELECTOR_NO_MATCH;\n        }\n      } else {\n        // make sure to do a replace here to catch selectors like:\n        // `:host(.foo)::before`\n        return selector.replace(HOST_PAREN, function(m, host, paren) {\n          return hostScope + paren;\n        });\n      }\n    // if no paren, do a straight :host replacement.\n    // TODO(sorvell): this should not strictly be necessary but\n    // it's needed to maintain support for `:host[foo]` type selectors\n    // which have been improperly used under Shady DOM. This should be\n    // deprecated.\n    } else {\n      return selector.replace(HOST, hostScope);\n    }\n  }\n\n  /**\n   * @param {StyleNode} rule\n   */\n  documentRule(rule) {\n    // reset selector in case this is redone.\n    rule['selector'] = rule['parsedSelector'];\n    this.normalizeRootSelector(rule);\n    this._transformRule(rule, this._transformDocumentSelector);\n  }\n\n  /**\n   * @param {StyleNode} rule\n   */\n  normalizeRootSelector(rule) {\n    if (rule['selector'] === ROOT) {\n      rule['selector'] = 'html';\n    }\n  }\n\n/**\n * @param {string} selector\n */\n  _transformDocumentSelector(selector) {\n    return selector.match(SLOTTED) ?\n      this._transformComplexSelector(selector, SCOPE_DOC_SELECTOR) :\n      this._transformSimpleSelector(selector.trim(), SCOPE_DOC_SELECTOR);\n  }\n}\n\nlet NTH = /:(nth[-\\w]+)\\(([^)]+)\\)/;\nlet SCOPE_DOC_SELECTOR = `:not(.${SCOPE_NAME})`;\nlet COMPLEX_SELECTOR_SEP = ',';\nlet SIMPLE_SELECTOR_SEP = /(^|[\\s>+~]+)((?:\\[.+?\\]|[^\\s>+~=[])+)/g;\nlet SIMPLE_SELECTOR_PREFIX = /[[.:#*]/;\nlet HOST = ':host';\nlet ROOT = ':root';\nlet SLOTTED = '::slotted';\nlet SLOTTED_START = new RegExp(`^(${SLOTTED})`);\n// NOTE: this supports 1 nested () pair for things like\n// :host(:not([selected]), more general support requires\n// parsing which seems like overkill\nlet HOST_PAREN = /(:host)(?:\\(((?:\\([^)(]*\\)|[^)(]*)+?)\\))/;\n// similar to HOST_PAREN\nlet SLOTTED_PAREN = /(?:::slotted)(?:\\(((?:\\([^)(]*\\)|[^)(]*)+?)\\))/;\nlet DIR_PAREN = /(.*):dir\\((?:(ltr|rtl))\\)/;\nlet CSS_CLASS_PREFIX = '.';\nlet PSEUDO_PREFIX = ':';\nlet CLASS = 'class';\nlet SELECTOR_NO_MATCH = 'should_not_match';\n\nexport default new StyleTransformer()\n\n\n// WEBPACK FOOTER //\n// ../node_modules/@webcomponents/shadycss/src/style-transformer.js","/**\n@license\nCopyright (c) 2017 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\nexport const VAR_ASSIGN = /(?:^|[;\\s{]\\s*)(--[\\w-]*?)\\s*:\\s*(?:((?:'(?:\\\\'|.)*?'|\"(?:\\\\\"|.)*?\"|\\([^)]*?\\)|[^};{])+)|\\{([^}]*)\\}(?:(?=[;\\s}])|$))/gi;\nexport const MIXIN_MATCH = /(?:^|\\W+)@apply\\s*\\(?([^);\\n]*)\\)?/gi;\nexport const VAR_CONSUMED = /(--[\\w-]+)\\s*([:,;)]|$)/gi;\nexport const ANIMATION_MATCH = /(animation\\s*:)|(animation-name\\s*:)/;\nexport const MEDIA_MATCH = /@media\\s(.*)/;\nexport const IS_VAR = /^--/;\nexport const BRACKETED = /\\{[^}]*\\}/g;\nexport const HOST_PREFIX = '(?:^|[^.#[:])';\nexport const HOST_SUFFIX = '($|[.:[\\\\s>+~])';\n\n\n\n// WEBPACK FOOTER //\n// ../node_modules/@webcomponents/shadycss/src/common-regex.js","/**\n@license\nCopyright (c) 2017 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\n'use strict';\n\nimport {StyleNode} from './css-parse.js'; // eslint-disable-line no-unused-vars\n\n/** @const {string} */\nconst infoKey = '__styleInfo';\n\nexport default class StyleInfo {\n  /**\n   * @param {Element} node\n   * @return {StyleInfo}\n   */\n  static get(node) {\n    if (node) {\n      return node[infoKey];\n    } else {\n      return null;\n    }\n  }\n  /**\n   * @param {!Element} node\n   * @param {StyleInfo} styleInfo\n   * @return {StyleInfo}\n   */\n  static set(node, styleInfo) {\n    node[infoKey] = styleInfo;\n    return styleInfo;\n  }\n  /**\n   * @param {StyleNode} ast\n   * @param {Node=} placeholder\n   * @param {Array<string>=} ownStylePropertyNames\n   * @param {string=} elementName\n   * @param {string=} typeExtension\n   * @param {string=} cssBuild\n   */\n  constructor(ast, placeholder, ownStylePropertyNames, elementName, typeExtension, cssBuild) {\n    /** @type {StyleNode} */\n    this.styleRules = ast || null;\n    /** @type {Node} */\n    this.placeholder = placeholder || null;\n    /** @type {!Array<string>} */\n    this.ownStylePropertyNames = ownStylePropertyNames || [];\n    /** @type {Array<Object>} */\n    this.overrideStyleProperties = null;\n    /** @type {string} */\n    this.elementName = elementName || '';\n    /** @type {string} */\n    this.cssBuild = cssBuild || '';\n    /** @type {string} */\n    this.typeExtension = typeExtension || '';\n    /** @type {Object<string, string>} */\n    this.styleProperties = null;\n    /** @type {?string} */\n    this.scopeSelector = null;\n    /** @type {HTMLStyleElement} */\n    this.customStyle = null;\n  }\n  _getStyleRules() {\n    return this.styleRules;\n  }\n}\n\nStyleInfo.prototype['_getStyleRules'] = StyleInfo.prototype._getStyleRules;\n\n\n// WEBPACK FOOTER //\n// ../node_modules/@webcomponents/shadycss/src/style-info.js","/**\n@license\nCopyright (c) 2017 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\n'use strict';\n\n/**\n * @const {!Object<string, !HTMLTemplateElement>}\n */\nconst templateMap = {};\nexport default templateMap;\n\n\n\n// WEBPACK FOOTER //\n// ../node_modules/@webcomponents/shadycss/src/template-map.js","/**\n@license\nCopyright (c) 2017 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\n'use strict';\n\n/** @type {Promise<void>} */\nlet readyPromise = null;\n\n/** @type {?function(?function())} */\nlet whenReady = window['HTMLImports'] && window['HTMLImports']['whenReady'] || null;\n\n/** @type {function()} */\nlet resolveFn;\n\n/**\n * @param {?function()} callback\n */\nexport default function documentWait(callback) {\n  requestAnimationFrame(function() {\n    if (whenReady) {\n      whenReady(callback)\n    } else {\n      if (!readyPromise) {\n        readyPromise = new Promise((resolve) => {resolveFn = resolve});\n        if (document.readyState === 'complete') {\n          resolveFn();\n        } else {\n          document.addEventListener('readystatechange', () => {\n            if (document.readyState === 'complete') {\n              resolveFn();\n            }\n          });\n        }\n      }\n      readyPromise.then(function(){ callback && callback(); });\n    }\n  });\n}\n\n\n\n// WEBPACK FOOTER //\n// ../node_modules/@webcomponents/shadycss/src/document-wait.js","import '@webcomponents/shadycss/entrypoints/scoping-shim';\n\n\n\n// WEBPACK FOOTER //\n// ../src/core/polyfills/shadycss.js","/**\n@license\nCopyright (c) 2017 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\n'use strict';\n\nimport ScopingShim from '../src/scoping-shim.js';\nimport {nativeCssVariables, nativeShadow} from '../src/style-settings.js';\n\n/** @const {ScopingShim} */\nconst scopingShim = new ScopingShim();\n\nlet ApplyShim, CustomStyleInterface;\n\nif (window['ShadyCSS']) {\n  ApplyShim = window['ShadyCSS']['ApplyShim'];\n  CustomStyleInterface = window['ShadyCSS']['CustomStyleInterface'];\n}\n\nwindow.ShadyCSS = {\n  ScopingShim: scopingShim,\n  /**\n   * @param {!HTMLTemplateElement} template\n   * @param {string} elementName\n   * @param {string=} elementExtends\n   */\n  prepareTemplate(template, elementName, elementExtends) {\n    scopingShim.flushCustomStyles();\n    scopingShim.prepareTemplate(template, elementName, elementExtends)\n  },\n\n  /**\n   * @param {!HTMLElement} element\n   * @param {Object=} properties\n   */\n  styleSubtree(element, properties) {\n    scopingShim.flushCustomStyles();\n    scopingShim.styleSubtree(element, properties);\n  },\n\n  /**\n   * @param {!HTMLElement} element\n   */\n  styleElement(element) {\n    scopingShim.flushCustomStyles();\n    scopingShim.styleElement(element);\n  },\n\n  /**\n   * @param {Object=} properties\n   */\n  styleDocument(properties) {\n    scopingShim.flushCustomStyles();\n    scopingShim.styleDocument(properties);\n  },\n\n  /**\n   * @param {Element} element\n   * @param {string} property\n   * @return {string}\n   */\n  getComputedStyleValue(element, property) {\n    return scopingShim.getComputedStyleValue(element, property);\n  },\n\n  nativeCss: nativeCssVariables,\n\n  nativeShadow: nativeShadow\n};\n\nif (ApplyShim) {\n  window.ShadyCSS.ApplyShim = ApplyShim;\n}\n\nif (CustomStyleInterface) {\n  window.ShadyCSS.CustomStyleInterface = CustomStyleInterface;\n}\n\n\n// WEBPACK FOOTER //\n// ../node_modules/@webcomponents/shadycss/entrypoints/scoping-shim.js","/**\n@license\nCopyright (c) 2017 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\n'use strict';\n\nimport {parse, StyleNode} from './css-parse.js';\nimport {nativeShadow, nativeCssVariables} from './style-settings.js';\nimport StyleTransformer from './style-transformer.js';\nimport * as StyleUtil from './style-util.js';\nimport StyleProperties from './style-properties.js';\nimport placeholderMap from './style-placeholder.js';\nimport StyleInfo from './style-info.js';\nimport StyleCache from './style-cache.js';\nimport {flush as watcherFlush} from './document-watcher.js';\nimport templateMap from './template-map.js';\nimport * as ApplyShimUtils from './apply-shim-utils.js';\nimport documentWait from './document-wait.js';\nimport {updateNativeProperties, detectMixin} from './common-utils.js';\nimport {CustomStyleInterfaceInterface} from './custom-style-interface.js'; // eslint-disable-line no-unused-vars\n\n/**\n * @const {StyleCache}\n */\nconst styleCache = new StyleCache();\n\nexport default class ScopingShim {\n  constructor() {\n    this._scopeCounter = {};\n    this._documentOwner = document.documentElement;\n    let ast = new StyleNode();\n    ast['rules'] = [];\n    this._documentOwnerStyleInfo = StyleInfo.set(this._documentOwner, new StyleInfo(ast));\n    this._elementsHaveApplied = false;\n    this._applyShim = null;\n    /** @type {?CustomStyleInterfaceInterface} */\n    this._customStyleInterface = null;\n    documentWait(() => {\n      this._ensure();\n    });\n  }\n  flush() {\n    watcherFlush();\n  }\n  _generateScopeSelector(name) {\n    let id = this._scopeCounter[name] = (this._scopeCounter[name] || 0) + 1;\n    return `${name}-${id}`;\n  }\n  getStyleAst(style) {\n    return StyleUtil.rulesForStyle(style);\n  }\n  styleAstToString(ast) {\n    return StyleUtil.toCssText(ast);\n  }\n  _gatherStyles(template) {\n    let styles = template.content.querySelectorAll('style');\n    let cssText = [];\n    for (let i = 0; i < styles.length; i++) {\n      let s = styles[i];\n      cssText.push(s.textContent);\n      s.parentNode.removeChild(s);\n    }\n    return cssText.join('').trim();\n  }\n  _getCssBuild(template) {\n    let style = template.content.querySelector('style');\n    if (!style) {\n      return '';\n    }\n    return style.getAttribute('css-build') || '';\n  }\n  /**\n   * Prepare the styling and template for the given element type\n   *\n   * @param {HTMLTemplateElement} template\n   * @param {string} elementName\n   * @param {string=} typeExtension\n   */\n  prepareTemplate(template, elementName, typeExtension) {\n    if (template._prepared) {\n      return;\n    }\n    template._prepared = true;\n    template.name = elementName;\n    template.extends = typeExtension;\n    templateMap[elementName] = template;\n    let cssBuild = this._getCssBuild(template);\n    let cssText = this._gatherStyles(template);\n    let info = {\n      is: elementName,\n      extends: typeExtension,\n      __cssBuild: cssBuild,\n    };\n    if (!nativeShadow) {\n      StyleTransformer.dom(template.content, elementName);\n    }\n    // check if the styling has mixin definitions or uses\n    this._ensure();\n    let hasMixins = detectMixin(cssText)\n    let ast = parse(cssText);\n    // only run the applyshim transforms if there is a mixin involved\n    if (hasMixins && nativeCssVariables && this._applyShim) {\n      this._applyShim['transformRules'](ast, elementName);\n    }\n    template['_styleAst'] = ast;\n    template._cssBuild = cssBuild;\n\n    let ownPropertyNames = [];\n    if (!nativeCssVariables) {\n      ownPropertyNames = StyleProperties.decorateStyles(template['_styleAst'], info);\n    }\n    if (!ownPropertyNames.length || nativeCssVariables) {\n      let root = nativeShadow ? template.content : null;\n      let placeholder = placeholderMap[elementName];\n      let style = this._generateStaticStyle(info, template['_styleAst'], root, placeholder);\n      template._style = style;\n    }\n    template._ownPropertyNames = ownPropertyNames;\n  }\n  _generateStaticStyle(info, rules, shadowroot, placeholder) {\n    let cssText = StyleTransformer.elementStyles(info, rules);\n    if (cssText.length) {\n      return StyleUtil.applyCss(cssText, info.is, shadowroot, placeholder);\n    }\n  }\n  _prepareHost(host) {\n    let {is, typeExtension} = StyleUtil.getIsExtends(host);\n    let placeholder = placeholderMap[is];\n    let template = templateMap[is];\n    let ast;\n    let ownStylePropertyNames;\n    let cssBuild;\n    if (template) {\n      ast = template['_styleAst'];\n      ownStylePropertyNames = template._ownPropertyNames;\n      cssBuild = template._cssBuild;\n    }\n    return StyleInfo.set(host,\n      new StyleInfo(\n        ast,\n        placeholder,\n        ownStylePropertyNames,\n        is,\n        typeExtension,\n        cssBuild\n      )\n    );\n  }\n  _ensureApplyShim() {\n    if (this._applyShim) {\n      return;\n    } else if (window.ShadyCSS && window.ShadyCSS.ApplyShim) {\n      this._applyShim = window.ShadyCSS.ApplyShim;\n      this._applyShim['invalidCallback'] = ApplyShimUtils.invalidate;\n    }\n  }\n  _ensureCustomStyleInterface() {\n    if (this._customStyleInterface) {\n      return;\n    } else if (window.ShadyCSS && window.ShadyCSS.CustomStyleInterface) {\n      this._customStyleInterface = /** @type {!CustomStyleInterfaceInterface} */(window.ShadyCSS.CustomStyleInterface);\n      /** @type {function(!HTMLStyleElement)} */\n      this._customStyleInterface['transformCallback'] = (style) => {this.transformCustomStyleForDocument(style)};\n      this._customStyleInterface['validateCallback'] = () => {\n        requestAnimationFrame(() => {\n          if (this._customStyleInterface['enqueued'] || this._elementsHaveApplied) {\n            this.flushCustomStyles();\n          }\n        })\n      };\n    }\n  }\n  _ensure() {\n    this._ensureApplyShim();\n    this._ensureCustomStyleInterface();\n  }\n  /**\n   * Flush and apply custom styles to document\n   */\n  flushCustomStyles() {\n    this._ensure();\n    if (!this._customStyleInterface) {\n      return;\n    }\n    let customStyles = this._customStyleInterface['processStyles']();\n    // early return if custom-styles don't need validation\n    if (!this._customStyleInterface['enqueued']) {\n      return;\n    }\n    if (!nativeCssVariables) {\n      this._updateProperties(this._documentOwner, this._documentOwnerStyleInfo);\n      this._applyCustomStyles(customStyles);\n    } else {\n      this._revalidateCustomStyleApplyShim(customStyles);\n    }\n    this._customStyleInterface['enqueued'] = false;\n    // if custom elements have upgraded and there are no native css variables, we must recalculate the whole tree\n    if (this._elementsHaveApplied && !nativeCssVariables) {\n      this.styleDocument();\n    }\n  }\n  /**\n   * Apply styles for the given element\n   *\n   * @param {!HTMLElement} host\n   * @param {Object=} overrideProps\n   */\n  styleElement(host, overrideProps) {\n    let {is} = StyleUtil.getIsExtends(host);\n    let styleInfo = StyleInfo.get(host);\n    if (!styleInfo) {\n      styleInfo = this._prepareHost(host);\n    }\n    // Only trip the `elementsHaveApplied` flag if a node other that the root document has `applyStyle` called\n    if (!this._isRootOwner(host)) {\n      this._elementsHaveApplied = true;\n    }\n    if (overrideProps) {\n      styleInfo.overrideStyleProperties =\n        styleInfo.overrideStyleProperties || {};\n      Object.assign(styleInfo.overrideStyleProperties, overrideProps);\n    }\n    if (!nativeCssVariables) {\n     this._updateProperties(host, styleInfo);\n      if (styleInfo.ownStylePropertyNames && styleInfo.ownStylePropertyNames.length) {\n        this._applyStyleProperties(host, styleInfo);\n      }\n    } else {\n      if (styleInfo.overrideStyleProperties) {\n        updateNativeProperties(host, styleInfo.overrideStyleProperties);\n      }\n      let template = templateMap[is];\n      // bail early if there is no shadowroot for this element\n      if (!template && !this._isRootOwner(host)) {\n        return;\n      }\n      if (template && template._style && !ApplyShimUtils.templateIsValid(template)) {\n        // update template\n        if (!ApplyShimUtils.templateIsValidating(template)) {\n          this._ensure();\n          this._applyShim && this._applyShim['transformRules'](template['_styleAst'], is);\n          template._style.textContent = StyleTransformer.elementStyles(host, styleInfo.styleRules);\n          ApplyShimUtils.startValidatingTemplate(template);\n        }\n        // update instance if native shadowdom\n        if (nativeShadow) {\n          let root = host.shadowRoot;\n          if (root) {\n            let style = root.querySelector('style');\n            style.textContent = StyleTransformer.elementStyles(host, styleInfo.styleRules);\n          }\n        }\n        styleInfo.styleRules = template['_styleAst'];\n      }\n    }\n  }\n  _styleOwnerForNode(node) {\n    let root = node.getRootNode();\n    let host = root.host;\n    if (host) {\n      if (StyleInfo.get(host)) {\n        return host;\n      } else {\n        return this._styleOwnerForNode(host);\n      }\n    }\n    return this._documentOwner;\n  }\n  _isRootOwner(node) {\n    return (node === this._documentOwner);\n  }\n  _applyStyleProperties(host, styleInfo) {\n    let is = StyleUtil.getIsExtends(host).is;\n    let cacheEntry = styleCache.fetch(is, styleInfo.styleProperties, styleInfo.ownStylePropertyNames);\n    let cachedScopeSelector = cacheEntry && cacheEntry.scopeSelector;\n    let cachedStyle = cacheEntry ? cacheEntry.styleElement : null;\n    let oldScopeSelector = styleInfo.scopeSelector;\n    // only generate new scope if cached style is not found\n    styleInfo.scopeSelector = cachedScopeSelector || this._generateScopeSelector(is);\n    let style = StyleProperties.applyElementStyle(host, styleInfo.styleProperties, styleInfo.scopeSelector, cachedStyle);\n    if (!nativeShadow) {\n      StyleProperties.applyElementScopeSelector(host, styleInfo.scopeSelector, oldScopeSelector);\n    }\n    if (!cacheEntry) {\n      styleCache.store(is, styleInfo.styleProperties, style, styleInfo.scopeSelector);\n    }\n    return style;\n  }\n  _updateProperties(host, styleInfo) {\n    let owner = this._styleOwnerForNode(host);\n    let ownerStyleInfo = StyleInfo.get(owner);\n    let ownerProperties = ownerStyleInfo.styleProperties;\n    let props = Object.create(ownerProperties || null);\n    let hostAndRootProps = StyleProperties.hostAndRootPropertiesForScope(host, styleInfo.styleRules);\n    let propertyData = StyleProperties.propertyDataFromStyles(ownerStyleInfo.styleRules, host);\n    let propertiesMatchingHost = propertyData.properties\n    Object.assign(\n      props,\n      hostAndRootProps.hostProps,\n      propertiesMatchingHost,\n      hostAndRootProps.rootProps\n    );\n    this._mixinOverrideStyles(props, styleInfo.overrideStyleProperties);\n    StyleProperties.reify(props);\n    styleInfo.styleProperties = props;\n  }\n  _mixinOverrideStyles(props, overrides) {\n    for (let p in overrides) {\n      let v = overrides[p];\n      // skip override props if they are not truthy or 0\n      // in order to fall back to inherited values\n      if (v || v === 0) {\n        props[p] = v;\n      }\n    }\n  }\n  /**\n   * Update styles of the whole document\n   *\n   * @param {Object=} properties\n   */\n  styleDocument(properties) {\n    this.styleSubtree(this._documentOwner, properties);\n  }\n  /**\n   * Update styles of a subtree\n   *\n   * @param {!HTMLElement} host\n   * @param {Object=} properties\n   */\n  styleSubtree(host, properties) {\n    let root = host.shadowRoot;\n    if (root || this._isRootOwner(host)) {\n      this.styleElement(host, properties);\n    }\n    // process the shadowdom children of `host`\n    let shadowChildren = root && (root.children || root.childNodes);\n    if (shadowChildren) {\n      for (let i = 0; i < shadowChildren.length; i++) {\n        let c = /** @type {!HTMLElement} */(shadowChildren[i]);\n        this.styleSubtree(c);\n      }\n    } else {\n      // process the lightdom children of `host`\n      let children = host.children || host.childNodes;\n      if (children) {\n        for (let i = 0; i < children.length; i++) {\n          let c = /** @type {!HTMLElement} */(children[i]);\n          this.styleSubtree(c);\n        }\n      }\n    }\n  }\n  /* Custom Style operations */\n  _revalidateCustomStyleApplyShim(customStyles) {\n    for (let i = 0; i < customStyles.length; i++) {\n      let c = customStyles[i];\n      let s = this._customStyleInterface['getStyleForCustomStyle'](c);\n      if (s) {\n        this._revalidateApplyShim(s);\n      }\n    }\n  }\n  _applyCustomStyles(customStyles) {\n    for (let i = 0; i < customStyles.length; i++) {\n      let c = customStyles[i];\n      let s = this._customStyleInterface['getStyleForCustomStyle'](c);\n      if (s) {\n        StyleProperties.applyCustomStyle(s, this._documentOwnerStyleInfo.styleProperties);\n      }\n    }\n  }\n  transformCustomStyleForDocument(style) {\n    let ast = StyleUtil.rulesForStyle(style);\n    StyleUtil.forEachRule(ast, (rule) => {\n      if (nativeShadow) {\n        StyleTransformer.normalizeRootSelector(rule);\n      } else {\n        StyleTransformer.documentRule(rule);\n      }\n      if (nativeCssVariables) {\n        this._ensure();\n        this._applyShim && this._applyShim['transformRule'](rule);\n      }\n    });\n    if (nativeCssVariables) {\n      style.textContent = StyleUtil.toCssText(ast);\n    } else {\n      this._documentOwnerStyleInfo.styleRules.rules.push(ast);\n    }\n  }\n  _revalidateApplyShim(style) {\n    if (nativeCssVariables && this._applyShim) {\n      let ast = StyleUtil.rulesForStyle(style);\n      this._ensure();\n      this._applyShim['transformRules'](ast);\n      style.textContent = StyleUtil.toCssText(ast);\n    }\n  }\n  getComputedStyleValue(element, property) {\n    let value;\n    if (!nativeCssVariables) {\n      // element is either a style host, or an ancestor of a style host\n      let styleInfo = StyleInfo.get(element) || StyleInfo.get(this._styleOwnerForNode(element));\n      value = styleInfo.styleProperties[property];\n    }\n    // fall back to the property value from the computed styling\n    value = value || window.getComputedStyle(element).getPropertyValue(property);\n    // trim whitespace that can come after the `:` in css\n    // example: padding: 2px -> \" 2px\"\n    return value ? value.trim() : '';\n  }\n  // given an element and a classString, replaces\n  // the element's class with the provided classString and adds\n  // any necessary ShadyCSS static and property based scoping selectors\n  setElementClass(element, classString) {\n    let root = element.getRootNode();\n    let classes = classString ? classString.split(/\\s/) : [];\n    let scopeName = root.host && root.host.localName;\n    // If no scope, try to discover scope name from existing class.\n    // This can occur if, for example, a template stamped element that\n    // has been scoped is manipulated when not in a root.\n    if (!scopeName) {\n      var classAttr = element.getAttribute('class');\n      if (classAttr) {\n        let k$ = classAttr.split(/\\s/);\n        for (let i=0; i < k$.length; i++) {\n          if (k$[i] === StyleTransformer.SCOPE_NAME) {\n            scopeName = k$[i+1];\n            break;\n          }\n        }\n      }\n    }\n    if (scopeName) {\n      classes.push(StyleTransformer.SCOPE_NAME, scopeName);\n    }\n    if (!nativeCssVariables) {\n      let styleInfo = StyleInfo.get(element);\n      if (styleInfo && styleInfo.scopeSelector) {\n        classes.push(StyleProperties.XSCOPE_NAME, styleInfo.scopeSelector);\n      }\n    }\n    StyleUtil.setElementClassRaw(element, classes.join(' '));\n  }\n  _styleInfoForNode(node) {\n    return StyleInfo.get(node);\n  }\n}\n\n/* exports */\nScopingShim.prototype['flush'] = ScopingShim.prototype.flush;\nScopingShim.prototype['prepareTemplate'] = ScopingShim.prototype.prepareTemplate;\nScopingShim.prototype['styleElement'] = ScopingShim.prototype.styleElement;\nScopingShim.prototype['styleDocument'] = ScopingShim.prototype.styleDocument;\nScopingShim.prototype['styleSubtree'] = ScopingShim.prototype.styleSubtree;\nScopingShim.prototype['getComputedStyleValue'] = ScopingShim.prototype.getComputedStyleValue;\nScopingShim.prototype['setElementClass'] = ScopingShim.prototype.setElementClass;\nScopingShim.prototype['_styleInfoForNode'] = ScopingShim.prototype._styleInfoForNode;\nScopingShim.prototype['transformCustomStyleForDocument'] = ScopingShim.prototype.transformCustomStyleForDocument;\nScopingShim.prototype['getStyleAst'] = ScopingShim.prototype.getStyleAst;\nScopingShim.prototype['styleAstToString'] = ScopingShim.prototype.styleAstToString;\nScopingShim.prototype['flushCustomStyles'] = ScopingShim.prototype.flushCustomStyles;\nObject.defineProperties(ScopingShim.prototype, {\n  'nativeShadow': {\n    get() {\n      return nativeShadow;\n    }\n  },\n  'nativeCss': {\n    get() {\n      return nativeCssVariables;\n    }\n  }\n});\n\n\n// WEBPACK FOOTER //\n// ../node_modules/@webcomponents/shadycss/src/scoping-shim.js","/**\n@license\nCopyright (c) 2017 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\n'use strict';\n\nimport {removeCustomPropAssignment, StyleNode} from './css-parse.js'; // eslint-disable-line no-unused-vars\nimport {nativeShadow} from './style-settings.js';\nimport StyleTransformer from './style-transformer.js';\nimport * as StyleUtil from './style-util.js';\nimport * as RX from './common-regex.js';\nimport StyleInfo from './style-info.js';\n\n// TODO: dedupe with shady\n/**\n * @const {function(string):boolean}\n */\nconst matchesSelector = ((p) => p.matches || p.matchesSelector ||\n  p.mozMatchesSelector || p.msMatchesSelector ||\np.oMatchesSelector || p.webkitMatchesSelector)(window.Element.prototype);\n\nconst IS_IE = navigator.userAgent.match('Trident');\n\nconst XSCOPE_NAME = 'x-scope';\n\nclass StyleProperties {\n  get XSCOPE_NAME() {\n    return XSCOPE_NAME;\n  }\n/**\n * decorates styles with rule info and returns an array of used style property names\n *\n * @param {StyleNode} rules\n * @return {Array<string>}\n */\n  decorateStyles(rules) {\n    let self = this, props = {}, keyframes = [], ruleIndex = 0;\n    StyleUtil.forEachRule(rules, function(rule) {\n      self.decorateRule(rule);\n      // mark in-order position of ast rule in styles block, used for cache key\n      rule.index = ruleIndex++;\n      self.collectPropertiesInCssText(rule.propertyInfo.cssText, props);\n    }, function onKeyframesRule(rule) {\n      keyframes.push(rule);\n    });\n    // Cache all found keyframes rules for later reference:\n    rules._keyframes = keyframes;\n    // return this list of property names *consumes* in these styles.\n    let names = [];\n    for (let i in props) {\n      names.push(i);\n    }\n    return names;\n  }\n\n  // decorate a single rule with property info\n  decorateRule(rule) {\n    if (rule.propertyInfo) {\n      return rule.propertyInfo;\n    }\n    let info = {}, properties = {};\n    let hasProperties = this.collectProperties(rule, properties);\n    if (hasProperties) {\n      info.properties = properties;\n      // TODO(sorvell): workaround parser seeing mixins as additional rules\n      rule['rules'] = null;\n    }\n    info.cssText = this.collectCssText(rule);\n    rule.propertyInfo = info;\n    return info;\n  }\n\n  // collects the custom properties from a rule's cssText\n  collectProperties(rule, properties) {\n    let info = rule.propertyInfo;\n    if (info) {\n      if (info.properties) {\n        Object.assign(properties, info.properties);\n        return true;\n      }\n    } else {\n      let m, rx = RX.VAR_ASSIGN;\n      let cssText = rule['parsedCssText'];\n      let value;\n      let any;\n      while ((m = rx.exec(cssText))) {\n        // note: group 2 is var, 3 is mixin\n        value = (m[2] || m[3]).trim();\n        // value of 'inherit' or 'unset' is equivalent to not setting the property here\n        if (value !== 'inherit' || value !== 'unset') {\n          properties[m[1].trim()] = value;\n        }\n        any = true;\n      }\n      return any;\n    }\n\n  }\n\n  // returns cssText of properties that consume variables/mixins\n  collectCssText(rule) {\n    return this.collectConsumingCssText(rule['parsedCssText']);\n  }\n\n  // NOTE: we support consumption inside mixin assignment\n  // but not production, so strip out {...}\n  collectConsumingCssText(cssText) {\n    return cssText.replace(RX.BRACKETED, '')\n      .replace(RX.VAR_ASSIGN, '');\n  }\n\n  collectPropertiesInCssText(cssText, props) {\n    let m;\n    while ((m = RX.VAR_CONSUMED.exec(cssText))) {\n      let name = m[1];\n      // This regex catches all variable names, and following non-whitespace char\n      // If next char is not ':', then variable is a consumer\n      if (m[2] !== ':') {\n        props[name] = true;\n      }\n    }\n  }\n\n  // turns custom properties into realized values.\n  reify(props) {\n    // big perf optimization here: reify only *own* properties\n    // since this object has __proto__ of the element's scope properties\n    let names = Object.getOwnPropertyNames(props);\n    for (let i=0, n; i < names.length; i++) {\n      n = names[i];\n      props[n] = this.valueForProperty(props[n], props);\n    }\n  }\n\n  // given a property value, returns the reified value\n  // a property value may be:\n  // (1) a literal value like: red or 5px;\n  // (2) a variable value like: var(--a), var(--a, red), or var(--a, --b) or\n  // var(--a, var(--b));\n  // (3) a literal mixin value like { properties }. Each of these properties\n  // can have values that are: (a) literal, (b) variables, (c) @apply mixins.\n  valueForProperty(property, props) {\n    // case (1) default\n    // case (3) defines a mixin and we have to reify the internals\n    if (property) {\n      if (property.indexOf(';') >=0) {\n        property = this.valueForProperties(property, props);\n      } else {\n        // case (2) variable\n        let self = this;\n        let fn = function(prefix, value, fallback, suffix) {\n          if (!value) {\n            return prefix + suffix;\n          }\n          let propertyValue = self.valueForProperty(props[value], props);\n          // if value is \"initial\", then the variable should be treated as unset\n          if (!propertyValue || propertyValue === 'initial') {\n            // fallback may be --a or var(--a) or literal\n            propertyValue = self.valueForProperty(props[fallback] || fallback, props) ||\n            fallback;\n          } else if (propertyValue === 'apply-shim-inherit') {\n            // CSS build will replace `inherit` with `apply-shim-inherit`\n            // for use with native css variables.\n            // Since we have full control, we can use `inherit` directly.\n            propertyValue = 'inherit';\n          }\n          return prefix + (propertyValue || '') + suffix;\n        };\n        property = StyleUtil.processVariableAndFallback(property, fn);\n      }\n    }\n    return property && property.trim() || '';\n  }\n\n  // note: we do not yet support mixin within mixin\n  valueForProperties(property, props) {\n    let parts = property.split(';');\n    for (let i=0, p, m; i<parts.length; i++) {\n      if ((p = parts[i])) {\n        RX.MIXIN_MATCH.lastIndex = 0;\n        m = RX.MIXIN_MATCH.exec(p);\n        if (m) {\n          p = this.valueForProperty(props[m[1]], props);\n        } else {\n          let colon = p.indexOf(':');\n          if (colon !== -1) {\n            let pp = p.substring(colon);\n            pp = pp.trim();\n            pp = this.valueForProperty(pp, props) || pp;\n            p = p.substring(0, colon) + pp;\n          }\n        }\n        parts[i] = (p && p.lastIndexOf(';') === p.length - 1) ?\n          // strip trailing ;\n          p.slice(0, -1) :\n          p || '';\n      }\n    }\n    return parts.join(';');\n  }\n\n  applyProperties(rule, props) {\n    let output = '';\n    // dynamically added sheets may not be decorated so ensure they are.\n    if (!rule.propertyInfo) {\n      this.decorateRule(rule);\n    }\n    if (rule.propertyInfo.cssText) {\n      output = this.valueForProperties(rule.propertyInfo.cssText, props);\n    }\n    rule['cssText'] = output;\n  }\n\n  // Apply keyframe transformations to the cssText of a given rule. The\n  // keyframeTransforms object is a map of keyframe names to transformer\n  // functions which take in cssText and spit out transformed cssText.\n  applyKeyframeTransforms(rule, keyframeTransforms) {\n    let input = rule['cssText'];\n    let output = rule['cssText'];\n    if (rule.hasAnimations == null) {\n      // Cache whether or not the rule has any animations to begin with:\n      rule.hasAnimations = RX.ANIMATION_MATCH.test(input);\n    }\n    // If there are no animations referenced, we can skip transforms:\n    if (rule.hasAnimations) {\n      let transform;\n      // If we haven't transformed this rule before, we iterate over all\n      // transforms:\n      if (rule.keyframeNamesToTransform == null) {\n        rule.keyframeNamesToTransform = [];\n        for (let keyframe in keyframeTransforms) {\n          transform = keyframeTransforms[keyframe];\n          output = transform(input);\n          // If the transform actually changed the CSS text, we cache the\n          // transform name for future use:\n          if (input !== output) {\n            input = output;\n            rule.keyframeNamesToTransform.push(keyframe);\n          }\n        }\n      } else {\n        // If we already have a list of keyframe names that apply to this\n        // rule, we apply only those keyframe name transforms:\n        for (let i = 0; i < rule.keyframeNamesToTransform.length; ++i) {\n          transform = keyframeTransforms[rule.keyframeNamesToTransform[i]];\n          input = transform(input);\n        }\n        output = input;\n      }\n    }\n    rule['cssText'] = output;\n  }\n\n  // Test if the rules in these styles matches the given `element` and if so,\n  // collect any custom properties into `props`.\n  /**\n   * @param {StyleNode} rules\n   * @param {Element} element\n   */\n  propertyDataFromStyles(rules, element) {\n    let props = {}, self = this;\n    // generates a unique key for these matches\n    let o = [];\n    // note: active rules excludes non-matching @media rules\n    StyleUtil.forEachRule(rules, function(rule) {\n      // TODO(sorvell): we could trim the set of rules at declaration\n      // time to only include ones that have properties\n      if (!rule.propertyInfo) {\n        self.decorateRule(rule);\n      }\n      // match element against transformedSelector: selector may contain\n      // unwanted uniquification and parsedSelector does not directly match\n      // for :host selectors.\n      let selectorToMatch = rule.transformedSelector || rule['parsedSelector'];\n      if (element && rule.propertyInfo.properties && selectorToMatch) {\n        if (matchesSelector.call(element, selectorToMatch)) {\n          self.collectProperties(rule, props);\n          // produce numeric key for these matches for lookup\n          addToBitMask(rule.index, o);\n        }\n      }\n    }, null, true);\n    return {properties: props, key: o};\n  }\n\n  /**\n   * @param {Element} scope\n   * @param {StyleNode} rule\n   * @param {string|undefined} cssBuild\n   * @param {function(Object)} callback\n   */\n  whenHostOrRootRule(scope, rule, cssBuild, callback) {\n    if (!rule.propertyInfo) {\n      this.decorateRule(rule);\n    }\n    if (!rule.propertyInfo.properties) {\n      return;\n    }\n    let {is, typeExtension} = StyleUtil.getIsExtends(scope);\n    let hostScope = is ?\n      StyleTransformer._calcHostScope(is, typeExtension) :\n      'html';\n    let parsedSelector = rule['parsedSelector'];\n    let isRoot = (parsedSelector === ':host > *' || parsedSelector === 'html');\n    let isHost = parsedSelector.indexOf(':host') === 0 && !isRoot;\n    // build info is either in scope (when scope is an element) or in the style\n    // when scope is the default scope; note: this allows default scope to have\n    // mixed mode built and unbuilt styles.\n    if (cssBuild === 'shady') {\n      // :root -> x-foo > *.x-foo for elements and html for custom-style\n      isRoot = parsedSelector === (hostScope + ' > *.' + hostScope) || parsedSelector.indexOf('html') !== -1;\n      // :host -> x-foo for elements, but sub-rules have .x-foo in them\n      isHost = !isRoot && parsedSelector.indexOf(hostScope) === 0;\n    }\n    if (cssBuild === 'shadow') {\n      isRoot = parsedSelector === ':host > *' || parsedSelector === 'html';\n      isHost = isHost && !isRoot;\n    }\n    if (!isRoot && !isHost) {\n      return;\n    }\n    let selectorToMatch = hostScope;\n    if (isHost) {\n      // need to transform :host under ShadowDOM because `:host` does not work with `matches`\n      if (nativeShadow && !rule.transformedSelector) {\n        // transform :host into a matchable selector\n        rule.transformedSelector =\n        StyleTransformer._transformRuleCss(\n          rule,\n          StyleTransformer._transformComplexSelector,\n          StyleTransformer._calcElementScope(is),\n          hostScope\n        );\n      }\n      selectorToMatch = rule.transformedSelector || hostScope;\n    }\n    callback({\n      selector: selectorToMatch,\n      isHost: isHost,\n      isRoot: isRoot\n    });\n  }\n/**\n * @param {Element} scope\n * @param {StyleNode} rules\n * @return {Object}\n */\n  hostAndRootPropertiesForScope(scope, rules) {\n    let hostProps = {}, rootProps = {}, self = this;\n    // note: active rules excludes non-matching @media rules\n    let cssBuild = rules && rules['__cssBuild'];\n    StyleUtil.forEachRule(rules, function(rule) {\n      // if scope is StyleDefaults, use _element for matchesSelector\n      self.whenHostOrRootRule(scope, rule, cssBuild, function(info) {\n        let element = scope._element || scope;\n        if (matchesSelector.call(element, info.selector)) {\n          if (info.isHost) {\n            self.collectProperties(rule, hostProps);\n          } else {\n            self.collectProperties(rule, rootProps);\n          }\n        }\n      });\n    }, null, true);\n    return {rootProps: rootProps, hostProps: hostProps};\n  }\n\n  /**\n   * @param {Element} element\n   * @param {Object} properties\n   * @param {string} scopeSelector\n   */\n  transformStyles(element, properties, scopeSelector) {\n    let self = this;\n    let {is, typeExtension} = StyleUtil.getIsExtends(element);\n    let hostSelector = StyleTransformer\n      ._calcHostScope(is, typeExtension);\n    let rxHostSelector = element.extends ?\n      '\\\\' + hostSelector.slice(0, -1) + '\\\\]' :\n      hostSelector;\n    let hostRx = new RegExp(RX.HOST_PREFIX + rxHostSelector +\n      RX.HOST_SUFFIX);\n    let rules = StyleInfo.get(element).styleRules;\n    let keyframeTransforms =\n      this._elementKeyframeTransforms(element, rules, scopeSelector);\n    return StyleTransformer.elementStyles(element, rules, function(rule) {\n      self.applyProperties(rule, properties);\n      if (!nativeShadow &&\n          !StyleUtil.isKeyframesSelector(rule) &&\n          rule['cssText']) {\n        // NOTE: keyframe transforms only scope munge animation names, so it\n        // is not necessary to apply them in ShadowDOM.\n        self.applyKeyframeTransforms(rule, keyframeTransforms);\n        self._scopeSelector(rule, hostRx, hostSelector, scopeSelector);\n      }\n    });\n  }\n\n  /**\n   * @param {Element} element\n   * @param {StyleNode} rules\n   * @param {string} scopeSelector\n   * @return {Object}\n   */\n  _elementKeyframeTransforms(element, rules, scopeSelector) {\n    let keyframesRules = rules._keyframes;\n    let keyframeTransforms = {};\n    if (!nativeShadow && keyframesRules) {\n      // For non-ShadowDOM, we transform all known keyframes rules in\n      // advance for the current scope. This allows us to catch keyframes\n      // rules that appear anywhere in the stylesheet:\n      for (let i = 0, keyframesRule = keyframesRules[i];\n           i < keyframesRules.length;\n           keyframesRule = keyframesRules[++i]) {\n        this._scopeKeyframes(keyframesRule, scopeSelector);\n        keyframeTransforms[keyframesRule['keyframesName']] =\n            this._keyframesRuleTransformer(keyframesRule);\n      }\n    }\n    return keyframeTransforms;\n  }\n\n  // Generate a factory for transforming a chunk of CSS text to handle a\n  // particular scoped keyframes rule.\n  /**\n   * @param {StyleNode} keyframesRule\n   * @return {function(string):string}\n   */\n  _keyframesRuleTransformer(keyframesRule) {\n    return function(cssText) {\n      return cssText.replace(\n          keyframesRule.keyframesNameRx,\n          keyframesRule.transformedKeyframesName);\n    };\n  }\n\n/**\n * Transforms `@keyframes` names to be unique for the current host.\n * Example: @keyframes foo-anim -> @keyframes foo-anim-x-foo-0\n *\n * @param {StyleNode} rule\n * @param {string} scopeId\n */\n  _scopeKeyframes(rule, scopeId) {\n    rule.keyframesNameRx = new RegExp(rule['keyframesName'], 'g');\n    rule.transformedKeyframesName = rule['keyframesName'] + '-' + scopeId;\n    rule.transformedSelector = rule.transformedSelector || rule['selector'];\n    rule['selector'] = rule.transformedSelector.replace(\n        rule['keyframesName'], rule.transformedKeyframesName);\n  }\n\n  // Strategy: x scope shim a selector e.g. to scope `.x-foo-42` (via classes):\n  // non-host selector: .a.x-foo -> .x-foo-42 .a.x-foo\n  // host selector: x-foo.wide -> .x-foo-42.wide\n  // note: we use only the scope class (.x-foo-42) and not the hostSelector\n  // (x-foo) to scope :host rules; this helps make property host rules\n  // have low specificity. They are overrideable by class selectors but,\n  // unfortunately, not by type selectors (e.g. overriding via\n  // `.special` is ok, but not by `x-foo`).\n  /**\n   * @param {StyleNode} rule\n   * @param {RegExp} hostRx\n   * @param {string} hostSelector\n   * @param {string} scopeId\n   */\n  _scopeSelector(rule, hostRx, hostSelector, scopeId) {\n    rule.transformedSelector = rule.transformedSelector || rule['selector'];\n    let selector = rule.transformedSelector;\n    let scope = '.' + scopeId;\n    let parts = selector.split(',');\n    for (let i=0, l=parts.length, p; (i<l) && (p=parts[i]); i++) {\n      parts[i] = p.match(hostRx) ?\n        p.replace(hostSelector, scope) :\n        scope + ' ' + p;\n    }\n    rule['selector'] = parts.join(',');\n  }\n\n  /**\n   * @param {Element} element\n   * @param {string} selector\n   * @param {string} old\n   */\n  applyElementScopeSelector(element, selector, old) {\n    let c = element.getAttribute('class') || '';\n    let v = c;\n    if (old) {\n      v = c.replace(\n        new RegExp('\\\\s*' + XSCOPE_NAME + '\\\\s*' + old + '\\\\s*', 'g'), ' ');\n    }\n    v += (v ? ' ' : '') + XSCOPE_NAME + ' ' + selector;\n    if (c !== v) {\n      StyleUtil.setElementClassRaw(element, v);\n    }\n  }\n\n  /**\n   * @param {HTMLElement} element\n   * @param {Object} properties\n   * @param {string} selector\n   * @param {HTMLStyleElement} style\n   * @return {HTMLStyleElement}\n   */\n  applyElementStyle(element, properties, selector, style) {\n    // calculate cssText to apply\n    let cssText = style ? style.textContent || '' :\n      this.transformStyles(element, properties, selector);\n    // if shady and we have a cached style that is not style, decrement\n    let styleInfo = StyleInfo.get(element);\n    let s = styleInfo.customStyle;\n    if (s && !nativeShadow && (s !== style)) {\n      s['_useCount']--;\n      if (s['_useCount'] <= 0 && s.parentNode) {\n        s.parentNode.removeChild(s);\n      }\n    }\n    // apply styling always under native or if we generated style\n    // or the cached style is not in document(!)\n    if (nativeShadow) {\n      // update existing style only under native\n      if (styleInfo.customStyle) {\n        styleInfo.customStyle.textContent = cssText;\n        style = styleInfo.customStyle;\n      // otherwise, if we have css to apply, do so\n      } else if (cssText) {\n        // apply css after the scope style of the element to help with\n        // style precedence rules.\n        style = StyleUtil.applyCss(cssText, selector, element.shadowRoot,\n          styleInfo.placeholder);\n      }\n    } else {\n      // shady and no cache hit\n      if (!style) {\n        // apply css after the scope style of the element to help with\n        // style precedence rules.\n        if (cssText) {\n          style = StyleUtil.applyCss(cssText, selector, null,\n            styleInfo.placeholder);\n        }\n      // shady and cache hit but not in document\n      } else if (!style.parentNode) {\n        if (IS_IE && cssText.indexOf('@media') > -1) {\n            // @media rules may be stale in IE 10 and 11\n            // refresh the text content of the style to revalidate them.\n          style.textContent = cssText;\n        }\n        StyleUtil.applyStyle(style, null, styleInfo.placeholder);\n      }\n    }\n    // ensure this style is our custom style and increment its use count.\n    if (style) {\n      style['_useCount'] = style['_useCount'] || 0;\n      // increment use count if we changed styles\n      if (styleInfo.customStyle != style) {\n        style['_useCount']++;\n      }\n      styleInfo.customStyle = style;\n    }\n    return style;\n  }\n\n  /**\n   * @param {Element} style\n   * @param {Object} properties\n   */\n  applyCustomStyle(style, properties) {\n    let rules = StyleUtil.rulesForStyle(/** @type {HTMLStyleElement} */(style));\n    let self = this;\n    style.textContent = StyleUtil.toCssText(rules, function(/** StyleNode */rule) {\n      let css = rule['cssText'] = rule['parsedCssText'];\n      if (rule.propertyInfo && rule.propertyInfo.cssText) {\n        // remove property assignments\n        // so next function isn't confused\n        // NOTE: we have 3 categories of css:\n        // (1) normal properties,\n        // (2) custom property assignments (--foo: red;),\n        // (3) custom property usage: border: var(--foo); @apply(--foo);\n        // In elements, 1 and 3 are separated for efficiency; here they\n        // are not and this makes this case unique.\n        css = removeCustomPropAssignment(/** @type {string} */(css));\n        // replace with reified properties, scenario is same as mixin\n        rule['cssText'] = self.valueForProperties(css, properties);\n      }\n    });\n  }\n}\n\n/**\n * @param {number} n\n * @param {Array<number>} bits\n */\nfunction addToBitMask(n, bits) {\n  let o = parseInt(n / 32, 10);\n  let v = 1 << (n % 32);\n  bits[o] = (bits[o] || 0) | v;\n}\n\nexport default new StyleProperties();\n\n\n// WEBPACK FOOTER //\n// ../node_modules/@webcomponents/shadycss/src/style-properties.js","/**\n@license\nCopyright (c) 2017 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\n'use strict';\n\nimport {applyStylePlaceHolder} from './style-util.js';\nimport {nativeShadow} from './style-settings.js';\n\n/** @type {Object<string, !Node>} */\nlet placeholderMap = {};\n\n/**\n * @const {CustomElementRegistry}\n */\nconst ce = window['customElements'];\nif (ce && !nativeShadow) {\n  /**\n   * @const {function(this:CustomElementRegistry, string,function(new:HTMLElement),{extends: string}=)}\n   */\n  const origDefine = ce['define'];\n  /**\n   * @param {string} name\n   * @param {function(new:HTMLElement)} clazz\n   * @param {{extends: string}=} options\n   * @return {function(new:HTMLElement)}\n   */\n  const wrappedDefine = (name, clazz, options) => {\n    placeholderMap[name] = applyStylePlaceHolder(name);\n    return origDefine.call(/** @type {!CustomElementRegistry} */(ce), name, clazz, options);\n  }\n  ce['define'] = wrappedDefine;\n}\n\nexport default placeholderMap;\n\n\n\n// WEBPACK FOOTER //\n// ../node_modules/@webcomponents/shadycss/src/style-placeholder.js","/**\n@license\nCopyright (c) 2017 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n'use strict';\n\nexport default class StyleCache {\n  constructor(typeMax = 100) {\n    // map element name -> [{properties, styleElement, scopeSelector}]\n    this.cache = {};\n    this.typeMax = typeMax;\n  }\n\n  _validate(cacheEntry, properties, ownPropertyNames) {\n    for (let idx = 0; idx < ownPropertyNames.length; idx++) {\n      let pn = ownPropertyNames[idx];\n      if (cacheEntry.properties[pn] !== properties[pn]) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  store(tagname, properties, styleElement, scopeSelector) {\n    let list = this.cache[tagname] || [];\n    list.push({properties, styleElement, scopeSelector});\n    if (list.length > this.typeMax) {\n      list.shift();\n    }\n    this.cache[tagname] = list;\n  }\n\n  fetch(tagname, properties, ownPropertyNames) {\n    let list = this.cache[tagname];\n    if (!list) {\n      return;\n    }\n    // reverse list for most-recent lookups\n    for (let idx = list.length - 1; idx >= 0; idx--) {\n      let entry = list[idx];\n      if (this._validate(entry, properties, ownPropertyNames)) {\n        return entry;\n      }\n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ../node_modules/@webcomponents/shadycss/src/style-cache.js","/**\n@license\nCopyright (c) 2017 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\n'use strict';\n\nimport {nativeShadow} from './style-settings.js';\nimport StyleTransformer from './style-transformer.js';\nimport {getIsExtends} from './style-util.js';\n\nexport let flush = function() {};\n\n/**\n * @param {HTMLElement} element\n * @return {!Array<string>}\n */\nfunction getClasses(element) {\n  let classes = [];\n  if (element.classList) {\n    classes = Array.from(element.classList);\n  } else if (element instanceof window['SVGElement'] && element.hasAttribute('class')) {\n    classes = element.getAttribute('class').split(/\\s+/);\n  }\n  return classes;\n}\n\n/**\n * @param {HTMLElement} element\n * @return {string}\n */\nfunction getCurrentScope(element) {\n  let classes = getClasses(element);\n  let idx = classes.indexOf(StyleTransformer.SCOPE_NAME);\n  if (idx > -1) {\n    return classes[idx + 1];\n  }\n  return '';\n}\n\n/**\n * @param {Array<MutationRecord|null>|null} mxns\n */\nfunction handler(mxns) {\n  for (let x=0; x < mxns.length; x++) {\n    let mxn = mxns[x];\n    if (mxn.target === document.documentElement ||\n      mxn.target === document.head) {\n      continue;\n    }\n    for (let i=0; i < mxn.addedNodes.length; i++) {\n      let n = mxn.addedNodes[i];\n      if (n.nodeType !== Node.ELEMENT_NODE) {\n        continue;\n      }\n      n = /** @type {HTMLElement} */(n); // eslint-disable-line no-self-assign\n      let root = n.getRootNode();\n      let currentScope = getCurrentScope(n);\n      // node was scoped, but now is in document\n      if (currentScope && root === n.ownerDocument) {\n        StyleTransformer.dom(n, currentScope, true);\n      } else if (root.nodeType === Node.DOCUMENT_FRAGMENT_NODE) {\n        let newScope;\n        let host = /** @type {ShadowRoot} */(root).host;\n        // element may no longer be in a shadowroot\n        if (!host) {\n          continue;\n        }\n        newScope = getIsExtends(host).is;\n        if (currentScope === newScope) {\n          // make sure all the subtree elements are scoped correctly\n          let unscoped = window['ShadyDOM']['nativeMethods']['querySelectorAll'].call(\n            n, `:not(.${StyleTransformer.SCOPE_NAME})`);\n          for (let j = 0; j < unscoped.length; j++) {\n            StyleTransformer.element(unscoped[j], currentScope);\n          }\n          continue;\n        }\n        if (currentScope) {\n          StyleTransformer.dom(n, currentScope, true);\n        }\n        StyleTransformer.dom(n, newScope);\n      }\n    }\n  }\n}\n\nif (!nativeShadow) {\n  let observer = new MutationObserver(handler);\n  let start = (node) => {\n    observer.observe(node, {childList: true, subtree: true});\n  }\n  let nativeCustomElements = (window['customElements'] &&\n    !window['customElements']['polyfillWrapFlushCallback']);\n  // need to start immediately with native custom elements\n  // TODO(dfreedm): with polyfilled HTMLImports and native custom elements\n  // excessive mutations may be observed; this can be optimized via cooperation\n  // with the HTMLImports polyfill.\n  if (nativeCustomElements) {\n    start(document);\n  } else {\n    let delayedStart = () => {\n      start(document.body);\n    }\n    // use polyfill timing if it's available\n    if (window['HTMLImports']) {\n      window['HTMLImports']['whenReady'](delayedStart);\n    // otherwise push beyond native imports being ready\n    // which requires RAF + readystate interactive.\n    } else {\n      requestAnimationFrame(function() {\n        if (document.readyState === 'loading') {\n          let listener = function() {\n            delayedStart();\n            document.removeEventListener('readystatechange', listener);\n          }\n          document.addEventListener('readystatechange', listener);\n        } else {\n          delayedStart();\n        }\n      });\n    }\n  }\n\n  flush = function() {\n    handler(observer.takeRecords());\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ../node_modules/@webcomponents/shadycss/src/document-watcher.js","/**\n@license\nCopyright (c) 2017 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\n'use strict';\nimport templateMap from './template-map.js';\nimport {StyleNode} from './css-parse.js'; // eslint-disable-line no-unused-vars\n\n/*\n * Utilities for handling invalidating apply-shim mixins for a given template.\n *\n * The invalidation strategy involves keeping track of the \"current\" version of a template's mixins, and updating that count when a mixin is invalidated.\n * The template\n */\n\n/** @const {string} */\nconst CURRENT_VERSION = '_applyShimCurrentVersion';\n\n/** @const {string} */\nconst NEXT_VERSION = '_applyShimNextVersion';\n\n/** @const {string} */\nconst VALIDATING_VERSION = '_applyShimValidatingVersion';\n\n/**\n * @const {Promise<void>}\n */\nconst promise = Promise.resolve();\n\n/**\n * @param {string} elementName\n */\nexport function invalidate(elementName){\n  let template = templateMap[elementName];\n  if (template) {\n    invalidateTemplate(template);\n  }\n}\n\n/**\n * This function can be called multiple times to mark a template invalid\n * and signal that the style inside must be regenerated.\n *\n * Use `startValidatingTemplate` to begin an asynchronous validation cycle.\n * During that cycle, call `templateIsValidating` to see if the template must\n * be revalidated\n * @param {HTMLTemplateElement} template\n */\nexport function invalidateTemplate(template) {\n  // default the current version to 0\n  template[CURRENT_VERSION] = template[CURRENT_VERSION] || 0;\n  // ensure the \"validating for\" flag exists\n  template[VALIDATING_VERSION] = template[VALIDATING_VERSION] || 0;\n  // increment the next version\n  template[NEXT_VERSION] = (template[NEXT_VERSION] || 0) + 1;\n}\n\n/**\n * @param {string} elementName\n * @return {boolean}\n */\nexport function isValid(elementName) {\n  let template = templateMap[elementName];\n  if (template) {\n    return templateIsValid(template);\n  }\n  return true;\n}\n\n/**\n * @param {HTMLTemplateElement} template\n * @return {boolean}\n */\nexport function templateIsValid(template) {\n  return template[CURRENT_VERSION] === template[NEXT_VERSION];\n}\n\n/**\n * @param {string} elementName\n * @return {boolean}\n */\nexport function isValidating(elementName) {\n  let template = templateMap[elementName];\n  if (template) {\n    return templateIsValidating(template);\n  }\n  return false;\n}\n\n/**\n * Returns true if the template is currently invalid and `startValidating` has been called since the last invalidation.\n * If false, the template must be validated.\n * @param {HTMLTemplateElement} template\n * @return {boolean}\n */\nexport function templateIsValidating(template) {\n  return !templateIsValid(template) && template[VALIDATING_VERSION] === template[NEXT_VERSION];\n}\n\n/**\n * the template is marked as `validating` for one microtask so that all instances\n * found in the tree crawl of `applyStyle` will update themselves,\n * but the template will only be updated once.\n * @param {string} elementName\n*/\nexport function startValidating(elementName) {\n  let template = templateMap[elementName];\n  startValidatingTemplate(template);\n}\n\n/**\n * Begin an asynchronous invalidation cycle.\n * This should be called after every validation of a template\n *\n * After one microtask, the template will be marked as valid until the next call to `invalidateTemplate`\n * @param {HTMLTemplateElement} template\n */\nexport function startValidatingTemplate(template) {\n  // remember that the current \"next version\" is the reason for this validation cycle\n  template[VALIDATING_VERSION] = template[NEXT_VERSION];\n  // however, there only needs to be one async task to clear the counters\n  if (!template._validating) {\n    template._validating = true;\n    promise.then(function() {\n      // sync the current version to let future invalidations cause a refresh cycle\n      template[CURRENT_VERSION] = template[NEXT_VERSION];\n      template._validating = false;\n    });\n  }\n}\n\n/**\n * @return {boolean}\n */\nexport function elementsAreInvalid() {\n  for (let elementName in templateMap) {\n    let template = templateMap[elementName];\n    if (!templateIsValid(template)) {\n      return true;\n    }\n  }\n  return false;\n}\n\n\n// WEBPACK FOOTER //\n// ../node_modules/@webcomponents/shadycss/src/apply-shim-utils.js","/**\n@license\nCopyright (c) 2017 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\n'use strict';\n\nimport { MIXIN_MATCH, VAR_ASSIGN } from './common-regex.js';\n\n/**\n * @param {Element} element\n * @param {Object=} properties\n */\nexport function updateNativeProperties(element, properties) {\n  // remove previous properties\n  for (let p in properties) {\n    // NOTE: for bc with shim, don't apply null values.\n    if (p === null) {\n      element.style.removeProperty(p);\n    } else {\n      element.style.setProperty(p, properties[p]);\n    }\n  }\n}\n\n/**\n * @param {Element} element\n * @param {string} property\n * @return {string}\n */\nexport function getComputedStyleValue(element, property) {\n  /**\n   * @const {string}\n   */\n  const value = window.getComputedStyle(element).getPropertyValue(property);\n  if (!value) {\n    return '';\n  } else {\n    return value.trim();\n  }\n}\n\n/**\n * return true if `cssText` contains a mixin definition or consumption\n * @param {string} cssText\n * @return {boolean}\n */\nexport function detectMixin(cssText) {\n  const has = MIXIN_MATCH.test(cssText) || VAR_ASSIGN.test(cssText);\n  // reset state of the regexes\n  MIXIN_MATCH.lastIndex = 0;\n  VAR_ASSIGN.lastIndex = 0;\n  return has;\n}\n\n\n\n// WEBPACK FOOTER //\n// ../node_modules/@webcomponents/shadycss/src/common-utils.js","/**\n@license\nCopyright (c) 2017 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\n'use strict';\n\nimport documentWait from './document-wait.js';\n\n/**\n * @typedef {HTMLStyleElement | {getStyle: function():HTMLStyleElement}}\n */\nexport let CustomStyleProvider;\n\nconst SEEN_MARKER = '__seenByShadyCSS';\nconst CACHED_STYLE = '__shadyCSSCachedStyle';\n\n/** @type {?function(!HTMLStyleElement)} */\nlet transformFn = null;\n\n/** @type {?function()} */\nlet validateFn = null;\n\n/**\nThis interface is provided to add document-level <style> elements to ShadyCSS for processing.\nThese styles must be processed by ShadyCSS to simulate ShadowRoot upper-bound encapsulation from outside styles\nIn addition, these styles may also need to be processed for @apply rules and CSS Custom Properties\n\nTo add document-level styles to ShadyCSS, one can call `ShadyCSS.addDocumentStyle(styleElement)` or `ShadyCSS.addDocumentStyle({getStyle: () => styleElement})`\n\nIn addition, if the process used to discover document-level styles can be synchronously flushed, one should set `ShadyCSS.documentStyleFlush`.\nThis function will be called when calculating styles.\n\nAn example usage of the document-level styling api can be found in `examples/document-style-lib.js`\n\n@unrestricted\n*/\nexport default class CustomStyleInterface {\n  constructor() {\n    /** @type {!Array<!CustomStyleProvider>} */\n    this['customStyles'] = [];\n    this['enqueued'] = false;\n  }\n  /**\n   * Queue a validation for new custom styles to batch style recalculations\n   */\n  enqueueDocumentValidation() {\n    if (this['enqueued'] || !validateFn) {\n      return;\n    }\n    this['enqueued'] = true;\n    documentWait(validateFn);\n  }\n  /**\n   * @param {!HTMLStyleElement} style\n   */\n  addCustomStyle(style) {\n    if (!style[SEEN_MARKER]) {\n      style[SEEN_MARKER] = true;\n      this['customStyles'].push(style);\n      this.enqueueDocumentValidation();\n    }\n  }\n  /**\n   * @param {!CustomStyleProvider} customStyle\n   * @return {HTMLStyleElement}\n   */\n  getStyleForCustomStyle(customStyle) {\n    if (customStyle[CACHED_STYLE]) {\n      return customStyle[CACHED_STYLE];\n    }\n    let style;\n    if (customStyle['getStyle']) {\n      style = customStyle['getStyle']();\n    } else {\n      style = customStyle;\n    }\n    return style;\n  }\n  /**\n   * @return {!Array<!CustomStyleProvider>}\n   */\n  processStyles() {\n    const cs = this['customStyles'];\n    for (let i = 0; i < cs.length; i++) {\n      const customStyle = cs[i];\n      if (customStyle[CACHED_STYLE]) {\n        continue;\n      }\n      const style = this.getStyleForCustomStyle(customStyle);\n      if (style) {\n        // HTMLImports polyfill may have cloned the style into the main document,\n        // which is referenced with __appliedElement.\n        const styleToTransform = /** @type {!HTMLStyleElement} */(style['__appliedElement'] || style);\n        if (transformFn) {\n          transformFn(styleToTransform);\n        }\n        customStyle[CACHED_STYLE] = styleToTransform;\n      }\n    }\n    return cs;\n  }\n}\n\nCustomStyleInterface.prototype['addCustomStyle'] = CustomStyleInterface.prototype.addCustomStyle;\nCustomStyleInterface.prototype['getStyleForCustomStyle'] = CustomStyleInterface.prototype.getStyleForCustomStyle;\nCustomStyleInterface.prototype['processStyles'] = CustomStyleInterface.prototype.processStyles;\n\nObject.defineProperties(CustomStyleInterface.prototype, {\n  'transformCallback': {\n    /** @return {?function(!HTMLStyleElement)} */\n    get() {\n      return transformFn;\n    },\n    /** @param {?function(!HTMLStyleElement)} fn */\n    set(fn) {\n      transformFn = fn;\n    }\n  },\n  'validateCallback': {\n    /** @return {?function()} */\n    get() {\n      return validateFn;\n    },\n    /**\n     * @param {?function()} fn\n     * @this {CustomStyleInterface}\n     */\n    set(fn) {\n      let needsEnqueue = false;\n      if (!validateFn) {\n        needsEnqueue = true;\n      }\n      validateFn = fn;\n      if (needsEnqueue) {\n        this.enqueueDocumentValidation();\n      }\n    },\n  }\n})\n\n/** @typedef {{\n * customStyles: !Array<!CustomStyleProvider>,\n * addCustomStyle: function(!CustomStyleProvider),\n * getStyleForCustomStyle: function(!CustomStyleProvider): HTMLStyleElement,\n * findStyles: function(),\n * transformCallback: ?function(!HTMLStyleElement),\n * validateCallback: ?function()\n * }}\n */\nexport let CustomStyleInterfaceInterface;\n\n\n\n// WEBPACK FOOTER //\n// ../node_modules/@webcomponents/shadycss/src/custom-style-interface.js"],"sourceRoot":""}